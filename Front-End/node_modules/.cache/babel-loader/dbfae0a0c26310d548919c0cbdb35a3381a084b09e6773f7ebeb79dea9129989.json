{"ast":null,"code":"import Layer from './layer.js';\nimport { snakeCase } from \"../utils/snakeCase.js\";\nimport { isEmpty } from \"../utils/isEmpty.js\";\nimport { smartEscape } from \"../utils/smartEscape.js\";\nimport { isNumberLike } from \"../utils/isNumberLike.js\";\nclass TextLayer extends Layer {\n  /**\n   * @constructor TextLayer\n   * @param {Object} options - layer parameters\n   */\n  constructor(options) {\n    let keys;\n    super(options);\n    keys = [\"resourceType\", \"resourceType\", \"fontFamily\", \"fontSize\", \"fontWeight\", \"fontStyle\", \"textDecoration\", \"textAlign\", \"stroke\", \"letterSpacing\", \"lineSpacing\", \"fontHinting\", \"fontAntialiasing\", \"text\"];\n    if (options != null) {\n      keys.forEach(key => {\n        var ref;\n        // @ts-ignore\n        return this.options[key] = (ref = options[key]) != null ? ref : options[snakeCase(key)];\n      });\n    }\n    this.options.resourceType = \"text\";\n  }\n  //@ts-ignore\n  resourceType(resourceType) {\n    throw \"Cannot modify resourceType for text layers\";\n  }\n  //@ts-ignore\n  type(type) {\n    throw \"Cannot modify type for text layers\";\n  }\n  format(format) {\n    throw \"Cannot modify format for text layers\";\n  }\n  fontFamily(fontFamily) {\n    this.options.fontFamily = fontFamily;\n    return this;\n  }\n  fontSize(fontSize) {\n    this.options.fontSize = fontSize;\n    return this;\n  }\n  fontWeight(fontWeight) {\n    this.options.fontWeight = fontWeight;\n    return this;\n  }\n  fontStyle(fontStyle) {\n    this.options.fontStyle = fontStyle;\n    return this;\n  }\n  textDecoration(textDecoration) {\n    this.options.textDecoration = textDecoration;\n    return this;\n  }\n  textAlign(textAlign) {\n    this.options.textAlign = textAlign;\n    return this;\n  }\n  stroke(stroke) {\n    this.options.stroke = stroke;\n    return this;\n  }\n  letterSpacing(letterSpacing) {\n    this.options.letterSpacing = letterSpacing;\n    return this;\n  }\n  lineSpacing(lineSpacing) {\n    this.options.lineSpacing = lineSpacing;\n    return this;\n  }\n  fontHinting(fontHinting) {\n    this.options.fontHinting = fontHinting;\n    return this;\n  }\n  fontAntialiasing(fontAntialiasing) {\n    this.options.fontAntialiasing = fontAntialiasing;\n    return this;\n  }\n  text(text) {\n    this.options.text = text;\n    return this;\n  }\n  /**\n   * generate the string representation of the layer\n   * @function TextLayer#toString\n   * @return {String}\n   */\n  toString() {\n    var components, hasPublicId, hasStyle, publicId, re, res, start, style, text, textSource;\n    style = this.textStyleIdentifier();\n    if (this.options.publicId != null) {\n      publicId = this.getFullPublicId();\n    }\n    if (this.options.text != null) {\n      hasPublicId = !isEmpty(publicId);\n      hasStyle = !isEmpty(style);\n      if (hasPublicId && hasStyle || !hasPublicId && !hasStyle) {\n        throw \"Must supply either style parameters or a public_id when providing text parameter in a text overlay/underlay, but not both!\";\n      }\n      re = /\\$\\([a-zA-Z]\\w*\\)/g;\n      start = 0;\n      //        textSource = text.replace(new RegExp(\"[,/]\", 'g'), (c)-> \"%#{c.charCodeAt(0).toString(16).toUpperCase()}\")\n      textSource = smartEscape(this.options.text, /[,\\/]/g);\n      text = \"\";\n      while (res = re.exec(textSource)) {\n        text += smartEscape(textSource.slice(start, res.index));\n        text += res[0];\n        start = res.index + res[0].length;\n      }\n      text += smartEscape(textSource.slice(start));\n    }\n    components = [this.options.resourceType, style, publicId, text];\n    return components.filter(x => !!x).join(\":\");\n  }\n  textStyleIdentifier() {\n    var components;\n    components = [];\n    if (this.options.fontWeight !== \"normal\") {\n      components.push(this.options.fontWeight);\n    }\n    if (this.options.fontStyle !== \"normal\") {\n      components.push(this.options.fontStyle);\n    }\n    if (this.options.textDecoration !== \"none\") {\n      components.push(this.options.textDecoration);\n    }\n    components.push(this.options.textAlign);\n    if (this.options.stroke !== \"none\") {\n      components.push(this.options.stroke);\n    }\n    if (!(isEmpty(this.options.letterSpacing) && !isNumberLike(this.options.letterSpacing))) {\n      components.push(\"letter_spacing_\" + this.options.letterSpacing);\n    }\n    if (!(isEmpty(this.options.lineSpacing) && !isNumberLike(this.options.lineSpacing))) {\n      components.push(\"line_spacing_\" + this.options.lineSpacing);\n    }\n    if (!isEmpty(this.options.fontAntialiasing)) {\n      components.push(\"antialias_\" + this.options.fontAntialiasing);\n    }\n    if (!isEmpty(this.options.fontHinting)) {\n      components.push(\"hinting_\" + this.options.fontHinting);\n    }\n    if (!isEmpty(components.filter(x => !!x))) {\n      if (isEmpty(this.options.fontFamily)) {\n        throw `Must supply fontFamily. ${components}`;\n      }\n      if (isEmpty(this.options.fontSize) && !isNumberLike(this.options.fontSize)) {\n        throw \"Must supply fontSize.\";\n      }\n    }\n    components.unshift(this.options.fontFamily, this.options.fontSize);\n    components = components.filter(x => !!x).join(\"_\");\n    return components;\n  }\n}\n;\nexport default TextLayer;","map":{"version":3,"names":["Layer","snakeCase","isEmpty","smartEscape","isNumberLike","TextLayer","constructor","options","keys","forEach","key","ref","resourceType","type","format","fontFamily","fontSize","fontWeight","fontStyle","textDecoration","textAlign","stroke","letterSpacing","lineSpacing","fontHinting","fontAntialiasing","text","toString","components","hasPublicId","hasStyle","publicId","re","res","start","style","textSource","textStyleIdentifier","getFullPublicId","exec","slice","index","length","filter","x","join","push","unshift"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/@cloudinary/url-gen/backwards/legacyLayer/textlayer.js"],"sourcesContent":["import Layer from './layer.js';\nimport { snakeCase } from \"../utils/snakeCase.js\";\nimport { isEmpty } from \"../utils/isEmpty.js\";\nimport { smartEscape } from \"../utils/smartEscape.js\";\nimport { isNumberLike } from \"../utils/isNumberLike.js\";\nclass TextLayer extends Layer {\n    /**\n     * @constructor TextLayer\n     * @param {Object} options - layer parameters\n     */\n    constructor(options) {\n        let keys;\n        super(options);\n        keys = [\"resourceType\", \"resourceType\", \"fontFamily\", \"fontSize\", \"fontWeight\", \"fontStyle\", \"textDecoration\", \"textAlign\", \"stroke\", \"letterSpacing\", \"lineSpacing\", \"fontHinting\", \"fontAntialiasing\", \"text\"];\n        if (options != null) {\n            keys.forEach((key) => {\n                var ref;\n                // @ts-ignore\n                return this.options[key] = (ref = options[key]) != null ? ref : options[snakeCase(key)];\n            });\n        }\n        this.options.resourceType = \"text\";\n    }\n    //@ts-ignore\n    resourceType(resourceType) {\n        throw \"Cannot modify resourceType for text layers\";\n    }\n    //@ts-ignore\n    type(type) {\n        throw \"Cannot modify type for text layers\";\n    }\n    format(format) {\n        throw \"Cannot modify format for text layers\";\n    }\n    fontFamily(fontFamily) {\n        this.options.fontFamily = fontFamily;\n        return this;\n    }\n    fontSize(fontSize) {\n        this.options.fontSize = fontSize;\n        return this;\n    }\n    fontWeight(fontWeight) {\n        this.options.fontWeight = fontWeight;\n        return this;\n    }\n    fontStyle(fontStyle) {\n        this.options.fontStyle = fontStyle;\n        return this;\n    }\n    textDecoration(textDecoration) {\n        this.options.textDecoration = textDecoration;\n        return this;\n    }\n    textAlign(textAlign) {\n        this.options.textAlign = textAlign;\n        return this;\n    }\n    stroke(stroke) {\n        this.options.stroke = stroke;\n        return this;\n    }\n    letterSpacing(letterSpacing) {\n        this.options.letterSpacing = letterSpacing;\n        return this;\n    }\n    lineSpacing(lineSpacing) {\n        this.options.lineSpacing = lineSpacing;\n        return this;\n    }\n    fontHinting(fontHinting) {\n        this.options.fontHinting = fontHinting;\n        return this;\n    }\n    fontAntialiasing(fontAntialiasing) {\n        this.options.fontAntialiasing = fontAntialiasing;\n        return this;\n    }\n    text(text) {\n        this.options.text = text;\n        return this;\n    }\n    /**\n     * generate the string representation of the layer\n     * @function TextLayer#toString\n     * @return {String}\n     */\n    toString() {\n        var components, hasPublicId, hasStyle, publicId, re, res, start, style, text, textSource;\n        style = this.textStyleIdentifier();\n        if (this.options.publicId != null) {\n            publicId = this.getFullPublicId();\n        }\n        if (this.options.text != null) {\n            hasPublicId = !isEmpty(publicId);\n            hasStyle = !isEmpty(style);\n            if (hasPublicId && hasStyle || !hasPublicId && !hasStyle) {\n                throw \"Must supply either style parameters or a public_id when providing text parameter in a text overlay/underlay, but not both!\";\n            }\n            re = /\\$\\([a-zA-Z]\\w*\\)/g;\n            start = 0;\n            //        textSource = text.replace(new RegExp(\"[,/]\", 'g'), (c)-> \"%#{c.charCodeAt(0).toString(16).toUpperCase()}\")\n            textSource = smartEscape(this.options.text, /[,\\/]/g);\n            text = \"\";\n            while (res = re.exec(textSource)) {\n                text += smartEscape(textSource.slice(start, res.index));\n                text += res[0];\n                start = res.index + res[0].length;\n            }\n            text += smartEscape(textSource.slice(start));\n        }\n        components = [this.options.resourceType, style, publicId, text];\n        return (components).filter(x => !!x).join(\":\");\n    }\n    textStyleIdentifier() {\n        var components;\n        components = [];\n        if (this.options.fontWeight !== \"normal\") {\n            components.push(this.options.fontWeight);\n        }\n        if (this.options.fontStyle !== \"normal\") {\n            components.push(this.options.fontStyle);\n        }\n        if (this.options.textDecoration !== \"none\") {\n            components.push(this.options.textDecoration);\n        }\n        components.push(this.options.textAlign);\n        if (this.options.stroke !== \"none\") {\n            components.push(this.options.stroke);\n        }\n        if (!(isEmpty(this.options.letterSpacing) && !isNumberLike(this.options.letterSpacing))) {\n            components.push(\"letter_spacing_\" + this.options.letterSpacing);\n        }\n        if (!(isEmpty(this.options.lineSpacing) && !isNumberLike(this.options.lineSpacing))) {\n            components.push(\"line_spacing_\" + this.options.lineSpacing);\n        }\n        if (!(isEmpty(this.options.fontAntialiasing))) {\n            components.push(\"antialias_\" + this.options.fontAntialiasing);\n        }\n        if (!(isEmpty(this.options.fontHinting))) {\n            components.push(\"hinting_\" + this.options.fontHinting);\n        }\n        if (!isEmpty(components.filter(x => !!x))) {\n            if (isEmpty(this.options.fontFamily)) {\n                throw `Must supply fontFamily. ${components}`;\n            }\n            if (isEmpty(this.options.fontSize) && !isNumberLike(this.options.fontSize)) {\n                throw \"Must supply fontSize.\";\n            }\n        }\n        components.unshift(this.options.fontFamily, this.options.fontSize);\n        components = components.filter(x => !!x).join(\"_\");\n        return components;\n    }\n}\n;\nexport default TextLayer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}