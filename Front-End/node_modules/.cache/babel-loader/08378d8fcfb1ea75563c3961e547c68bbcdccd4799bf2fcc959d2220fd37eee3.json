{"ast":null,"code":"import { ClipAction } from \"./psdTools/ClipAction.js\";\nimport { GetLayerAction } from \"./psdTools/GetLayerAction.js\";\nimport { SmartObjectAction } from \"./psdTools/SmartObjectAction.js\";\n/**\n * @namespace PSDTools\n * @description Represents a layer in a Photoshop document.\n * </br><b>Learn more:</b> {@link https://cloudinary.com/documentation/paged_and_layered_media#deliver_selected_layers_of_a_psd_image|Deliver selected layers of a PSD image}\n * @memberOf Actions\n * @example\n * // See examples under each method\n */\n/**\n * @summary action\n * @description Trims the pixels of a PSD image according to a Photoshop clipping path that is stored in the image's metadata.\n * @memberOf Actions.PSDTools\n * @return {Actions.PSDTools.ClipAction}\n * @example\n * import {Cloudinary} from '@cloudinary/url-gen';\n * import {clip} from '@cloudinary/url-gen/actions/psdTools';\n *\n * const yourCldInstance = new Cloudinary({cloud:{cloudName:'demo'}});\n * const image = yourCldInstance.image('woman');\n *\n * image.psdTools(\n *  clip()\n *    .byName('foo') // either name, or number\n *    .byNumber(2)   // either name, or number\n *    .evenOdd()     // Use the evenodd clipping rule\n * );\n */\nfunction clip() {\n  return new ClipAction();\n}\n/**\n * @summary action\n * @description Delivers an image containing only specified layers of a Photoshop image.\n *\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/paged_and_layered_media#deliver_selected_layers_of_a_psd_image|Deliver selected layers of a PSD image}\n * @memberOf Actions.PSDTools\n * @return {Actions.PSDTools.GetLayerAction}\n * @example\n * import {Cloudinary} from '@cloudinary/url-gen';\n * import {getLayer} from '@cloudinary/url-gen/actions/psdTools';\n *\n * const yourCldInstance = new Cloudinary({cloud:{cloudName:'demo'}});\n * const image = yourCldInstance.image('woman');\n *\n * image.psdTools(\n *  getLayer()\n *    .byName('foo') // One of the three\n *    .byIndex(2)    // One of the three\n *    .byRange(1, 3) // One of the three\n * );\n */\nfunction getLayer() {\n  return new GetLayerAction();\n}\n/**\n * @summary action\n * @description Extracts the original content of an embedded object of a Photoshop image.\n * @memberOf Actions.PSDTools\n * @return {Actions.PSDTools.SmartObjectAction}\n * @example\n * import {Cloudinary} from '@cloudinary/url-gen';\n * import {smartObject} from '@cloudinary/url-gen/actions/psdTools';\n *\n * const yourCldInstance = new Cloudinary({cloud:{cloudName:'demo'}});\n * const image = yourCldInstance.image('woman');\n *\n * image.psdTools(\n *  smartObject()\n *    .byLayerName('foo') // either name, or number\n *    .byIndex(2)         // either name, or number\n * );\n */\nfunction smartObject() {\n  return new SmartObjectAction();\n}\nconst PSDTools = {\n  clip,\n  getLayer,\n  smartObject\n};\nexport { PSDTools, clip, getLayer, smartObject };","map":{"version":3,"names":["ClipAction","GetLayerAction","SmartObjectAction","clip","getLayer","smartObject","PSDTools"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/@cloudinary/transformation-builder-sdk/actions/psdTools.js"],"sourcesContent":["import { ClipAction } from \"./psdTools/ClipAction.js\";\nimport { GetLayerAction } from \"./psdTools/GetLayerAction.js\";\nimport { SmartObjectAction } from \"./psdTools/SmartObjectAction.js\";\n/**\n * @namespace PSDTools\n * @description Represents a layer in a Photoshop document.\n * </br><b>Learn more:</b> {@link https://cloudinary.com/documentation/paged_and_layered_media#deliver_selected_layers_of_a_psd_image|Deliver selected layers of a PSD image}\n * @memberOf Actions\n * @example\n * // See examples under each method\n */\n/**\n * @summary action\n * @description Trims the pixels of a PSD image according to a Photoshop clipping path that is stored in the image's metadata.\n * @memberOf Actions.PSDTools\n * @return {Actions.PSDTools.ClipAction}\n * @example\n * import {Cloudinary} from '@cloudinary/url-gen';\n * import {clip} from '@cloudinary/url-gen/actions/psdTools';\n *\n * const yourCldInstance = new Cloudinary({cloud:{cloudName:'demo'}});\n * const image = yourCldInstance.image('woman');\n *\n * image.psdTools(\n *  clip()\n *    .byName('foo') // either name, or number\n *    .byNumber(2)   // either name, or number\n *    .evenOdd()     // Use the evenodd clipping rule\n * );\n */\nfunction clip() {\n    return new ClipAction();\n}\n/**\n * @summary action\n * @description Delivers an image containing only specified layers of a Photoshop image.\n *\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/paged_and_layered_media#deliver_selected_layers_of_a_psd_image|Deliver selected layers of a PSD image}\n * @memberOf Actions.PSDTools\n * @return {Actions.PSDTools.GetLayerAction}\n * @example\n * import {Cloudinary} from '@cloudinary/url-gen';\n * import {getLayer} from '@cloudinary/url-gen/actions/psdTools';\n *\n * const yourCldInstance = new Cloudinary({cloud:{cloudName:'demo'}});\n * const image = yourCldInstance.image('woman');\n *\n * image.psdTools(\n *  getLayer()\n *    .byName('foo') // One of the three\n *    .byIndex(2)    // One of the three\n *    .byRange(1, 3) // One of the three\n * );\n */\nfunction getLayer() {\n    return new GetLayerAction();\n}\n/**\n * @summary action\n * @description Extracts the original content of an embedded object of a Photoshop image.\n * @memberOf Actions.PSDTools\n * @return {Actions.PSDTools.SmartObjectAction}\n * @example\n * import {Cloudinary} from '@cloudinary/url-gen';\n * import {smartObject} from '@cloudinary/url-gen/actions/psdTools';\n *\n * const yourCldInstance = new Cloudinary({cloud:{cloudName:'demo'}});\n * const image = yourCldInstance.image('woman');\n *\n * image.psdTools(\n *  smartObject()\n *    .byLayerName('foo') // either name, or number\n *    .byIndex(2)         // either name, or number\n * );\n */\nfunction smartObject() {\n    return new SmartObjectAction();\n}\nconst PSDTools = { clip, getLayer, smartObject };\nexport { PSDTools, clip, getLayer, smartObject };\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,0BAA0B;AACrD,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,SAASC,iBAAiB,QAAQ,iCAAiC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,IAAI,GAAG;EACZ,OAAO,IAAIH,UAAU,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASI,QAAQ,GAAG;EAChB,OAAO,IAAIH,cAAc,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASI,WAAW,GAAG;EACnB,OAAO,IAAIH,iBAAiB,EAAE;AAClC;AACA,MAAMI,QAAQ,GAAG;EAAEH,IAAI;EAAEC,QAAQ;EAAEC;AAAY,CAAC;AAChD,SAASC,QAAQ,EAAEH,IAAI,EAAEC,QAAQ,EAAEC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}