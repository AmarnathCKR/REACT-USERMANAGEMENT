{"ast":null,"code":"'use strict';\n\nvar InternalStateModule = require('../internals/internal-state');\nvar createIteratorConstructor = require('../internals/iterator-create-constructor');\nvar createIterResultObject = require('../internals/create-iter-result-object');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar isObject = require('../internals/is-object');\nvar defineProperties = require('../internals/object-define-properties').f;\nvar DESCRIPTORS = require('../internals/descriptors');\nvar INCORRECT_RANGE = 'Incorrect Iterator.range arguments';\nvar NUMERIC_RANGE_ITERATOR = 'NumericRangeIterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(NUMERIC_RANGE_ITERATOR);\nvar $RangeError = RangeError;\nvar $TypeError = TypeError;\nvar $RangeIterator = createIteratorConstructor(function NumericRangeIterator(start, end, option, type, zero, one) {\n  // TODO: Drop the first `typeof` check after removing lagacy methods in `core-js@4`\n  if (typeof start != type || end !== Infinity && end !== -Infinity && typeof end != type) {\n    throw $TypeError(INCORRECT_RANGE);\n  }\n  if (start === Infinity || start === -Infinity) {\n    throw $RangeError(INCORRECT_RANGE);\n  }\n  var ifIncrease = end > start;\n  var inclusiveEnd = false;\n  var step;\n  if (option === undefined) {\n    step = undefined;\n  } else if (isObject(option)) {\n    step = option.step;\n    inclusiveEnd = !!option.inclusive;\n  } else if (typeof option == type) {\n    step = option;\n  } else {\n    throw $TypeError(INCORRECT_RANGE);\n  }\n  if (isNullOrUndefined(step)) {\n    step = ifIncrease ? one : -one;\n  }\n  if (typeof step != type) {\n    throw $TypeError(INCORRECT_RANGE);\n  }\n  if (step === Infinity || step === -Infinity || step === zero && start !== end) {\n    throw $RangeError(INCORRECT_RANGE);\n  }\n  // eslint-disable-next-line no-self-compare -- NaN check\n  var hitsEnd = start != start || end != end || step != step || end > start !== step > zero;\n  setInternalState(this, {\n    type: NUMERIC_RANGE_ITERATOR,\n    start: start,\n    end: end,\n    step: step,\n    inclusiveEnd: inclusiveEnd,\n    hitsEnd: hitsEnd,\n    currentCount: zero,\n    zero: zero\n  });\n  if (!DESCRIPTORS) {\n    this.start = start;\n    this.end = end;\n    this.step = step;\n    this.inclusive = inclusiveEnd;\n  }\n}, NUMERIC_RANGE_ITERATOR, function next() {\n  var state = getInternalState(this);\n  if (state.hitsEnd) return createIterResultObject(undefined, true);\n  var start = state.start;\n  var end = state.end;\n  var step = state.step;\n  var currentYieldingValue = start + step * state.currentCount++;\n  if (currentYieldingValue === end) state.hitsEnd = true;\n  var inclusiveEnd = state.inclusiveEnd;\n  var endCondition;\n  if (end > start) {\n    endCondition = inclusiveEnd ? currentYieldingValue > end : currentYieldingValue >= end;\n  } else {\n    endCondition = inclusiveEnd ? end > currentYieldingValue : end >= currentYieldingValue;\n  }\n  if (endCondition) {\n    state.hitsEnd = true;\n    return createIterResultObject(undefined, true);\n  }\n  return createIterResultObject(currentYieldingValue, false);\n});\nvar getter = function (fn) {\n  return {\n    get: fn,\n    set: function () {/* empty */},\n    configurable: true,\n    enumerable: false\n  };\n};\nif (DESCRIPTORS) {\n  defineProperties($RangeIterator.prototype, {\n    start: getter(function () {\n      return getInternalState(this).start;\n    }),\n    end: getter(function () {\n      return getInternalState(this).end;\n    }),\n    inclusive: getter(function () {\n      return getInternalState(this).inclusiveEnd;\n    }),\n    step: getter(function () {\n      return getInternalState(this).step;\n    })\n  });\n}\nmodule.exports = $RangeIterator;","map":{"version":3,"names":["InternalStateModule","require","createIteratorConstructor","createIterResultObject","isNullOrUndefined","isObject","defineProperties","f","DESCRIPTORS","INCORRECT_RANGE","NUMERIC_RANGE_ITERATOR","setInternalState","set","getInternalState","getterFor","$RangeError","RangeError","$TypeError","TypeError","$RangeIterator","NumericRangeIterator","start","end","option","type","zero","one","Infinity","ifIncrease","inclusiveEnd","step","undefined","inclusive","hitsEnd","currentCount","next","state","currentYieldingValue","endCondition","getter","fn","get","configurable","enumerable","prototype","module","exports"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/core-js/internals/numeric-range-iterator.js"],"sourcesContent":["'use strict';\nvar InternalStateModule = require('../internals/internal-state');\nvar createIteratorConstructor = require('../internals/iterator-create-constructor');\nvar createIterResultObject = require('../internals/create-iter-result-object');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar isObject = require('../internals/is-object');\nvar defineProperties = require('../internals/object-define-properties').f;\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar INCORRECT_RANGE = 'Incorrect Iterator.range arguments';\nvar NUMERIC_RANGE_ITERATOR = 'NumericRangeIterator';\n\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(NUMERIC_RANGE_ITERATOR);\n\nvar $RangeError = RangeError;\nvar $TypeError = TypeError;\n\nvar $RangeIterator = createIteratorConstructor(function NumericRangeIterator(start, end, option, type, zero, one) {\n  // TODO: Drop the first `typeof` check after removing lagacy methods in `core-js@4`\n  if (typeof start != type || (end !== Infinity && end !== -Infinity && typeof end != type)) {\n    throw $TypeError(INCORRECT_RANGE);\n  }\n  if (start === Infinity || start === -Infinity) {\n    throw $RangeError(INCORRECT_RANGE);\n  }\n  var ifIncrease = end > start;\n  var inclusiveEnd = false;\n  var step;\n  if (option === undefined) {\n    step = undefined;\n  } else if (isObject(option)) {\n    step = option.step;\n    inclusiveEnd = !!option.inclusive;\n  } else if (typeof option == type) {\n    step = option;\n  } else {\n    throw $TypeError(INCORRECT_RANGE);\n  }\n  if (isNullOrUndefined(step)) {\n    step = ifIncrease ? one : -one;\n  }\n  if (typeof step != type) {\n    throw $TypeError(INCORRECT_RANGE);\n  }\n  if (step === Infinity || step === -Infinity || (step === zero && start !== end)) {\n    throw $RangeError(INCORRECT_RANGE);\n  }\n  // eslint-disable-next-line no-self-compare -- NaN check\n  var hitsEnd = start != start || end != end || step != step || (end > start) !== (step > zero);\n  setInternalState(this, {\n    type: NUMERIC_RANGE_ITERATOR,\n    start: start,\n    end: end,\n    step: step,\n    inclusiveEnd: inclusiveEnd,\n    hitsEnd: hitsEnd,\n    currentCount: zero,\n    zero: zero\n  });\n  if (!DESCRIPTORS) {\n    this.start = start;\n    this.end = end;\n    this.step = step;\n    this.inclusive = inclusiveEnd;\n  }\n}, NUMERIC_RANGE_ITERATOR, function next() {\n  var state = getInternalState(this);\n  if (state.hitsEnd) return createIterResultObject(undefined, true);\n  var start = state.start;\n  var end = state.end;\n  var step = state.step;\n  var currentYieldingValue = start + (step * state.currentCount++);\n  if (currentYieldingValue === end) state.hitsEnd = true;\n  var inclusiveEnd = state.inclusiveEnd;\n  var endCondition;\n  if (end > start) {\n    endCondition = inclusiveEnd ? currentYieldingValue > end : currentYieldingValue >= end;\n  } else {\n    endCondition = inclusiveEnd ? end > currentYieldingValue : end >= currentYieldingValue;\n  }\n  if (endCondition) {\n    state.hitsEnd = true;\n    return createIterResultObject(undefined, true);\n  } return createIterResultObject(currentYieldingValue, false);\n});\n\nvar getter = function (fn) {\n  return { get: fn, set: function () { /* empty */ }, configurable: true, enumerable: false };\n};\n\nif (DESCRIPTORS) {\n  defineProperties($RangeIterator.prototype, {\n    start: getter(function () {\n      return getInternalState(this).start;\n    }),\n    end: getter(function () {\n      return getInternalState(this).end;\n    }),\n    inclusive: getter(function () {\n      return getInternalState(this).inclusiveEnd;\n    }),\n    step: getter(function () {\n      return getInternalState(this).step;\n    })\n  });\n}\n\nmodule.exports = $RangeIterator;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}