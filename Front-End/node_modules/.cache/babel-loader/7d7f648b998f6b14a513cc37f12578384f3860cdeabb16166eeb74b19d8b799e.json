{"ast":null,"code":"import { lossy, preserveTransparency, progressive } from \"../../qualifiers/flag.js\";\nimport { DeliveryAction } from \"./DeliveryAction.js\";\nimport { ProgressiveQualifier } from \"../../qualifiers/progressive.js\";\n/**\n * @memberOf Actions.Delivery\n * @extends {Actions.Delivery.DeliveryAction}\n * @see Visit {@link Actions.Delivery|Delivery} for an example\n */\nclass DeliveryFormatAction extends DeliveryAction {\n  constructor(deliveryKey, deliveryType) {\n    super(deliveryKey, deliveryType, 'formatType');\n  }\n  /**\n   * @description Uses lossy compression when delivering animated GIF files.\n   * @return {this}\n   */\n  lossy() {\n    this._actionModel.lossy = true;\n    this.addFlag(lossy());\n    return this;\n  }\n  /**\n   * @description Uses progressive compression when delivering JPG file format.\n   * @return {this}\n   */\n  progressive(mode) {\n    if (mode instanceof ProgressiveQualifier) {\n      this._actionModel.progressive = {\n        mode: mode.getFlagValue()\n      };\n      this.addFlag(mode);\n    } else {\n      this._actionModel.progressive = {\n        mode: mode\n      };\n      this.addFlag(progressive(mode));\n    }\n    return this;\n  }\n  /**\n   * @description Ensures that images with a transparency channel are delivered in PNG format.\n   */\n  preserveTransparency() {\n    this._actionModel.preserveTransparency = true;\n    this.addFlag(preserveTransparency());\n    return this;\n  }\n  static fromJson(actionModel) {\n    const {\n      formatType,\n      lossy,\n      progressive,\n      preserveTransparency\n    } = actionModel;\n    let result;\n    if (formatType) {\n      result = new this('f', formatType);\n    } else {\n      result = new this('f');\n    }\n    if (progressive) {\n      if (progressive.mode) {\n        result.progressive(progressive.mode);\n      } else {\n        result.progressive();\n      }\n    }\n    lossy && result.lossy();\n    preserveTransparency && result.preserveTransparency();\n    return result;\n  }\n}\nexport { DeliveryFormatAction };","map":{"version":3,"names":["lossy","preserveTransparency","progressive","DeliveryAction","ProgressiveQualifier","DeliveryFormatAction","constructor","deliveryKey","deliveryType","_actionModel","addFlag","mode","getFlagValue","fromJson","actionModel","formatType","result"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/@cloudinary/transformation-builder-sdk/actions/delivery/DeliveryFormatAction.js"],"sourcesContent":["import { lossy, preserveTransparency, progressive } from \"../../qualifiers/flag.js\";\nimport { DeliveryAction } from \"./DeliveryAction.js\";\nimport { ProgressiveQualifier } from \"../../qualifiers/progressive.js\";\n/**\n * @memberOf Actions.Delivery\n * @extends {Actions.Delivery.DeliveryAction}\n * @see Visit {@link Actions.Delivery|Delivery} for an example\n */\nclass DeliveryFormatAction extends DeliveryAction {\n    constructor(deliveryKey, deliveryType) {\n        super(deliveryKey, deliveryType, 'formatType');\n    }\n    /**\n     * @description Uses lossy compression when delivering animated GIF files.\n     * @return {this}\n     */\n    lossy() {\n        this._actionModel.lossy = true;\n        this.addFlag(lossy());\n        return this;\n    }\n    /**\n     * @description Uses progressive compression when delivering JPG file format.\n     * @return {this}\n     */\n    progressive(mode) {\n        if (mode instanceof ProgressiveQualifier) {\n            this._actionModel.progressive = { mode: mode.getFlagValue() };\n            this.addFlag(mode);\n        }\n        else {\n            this._actionModel.progressive = { mode: mode };\n            this.addFlag(progressive(mode));\n        }\n        return this;\n    }\n    /**\n     * @description Ensures that images with a transparency channel are delivered in PNG format.\n     */\n    preserveTransparency() {\n        this._actionModel.preserveTransparency = true;\n        this.addFlag(preserveTransparency());\n        return this;\n    }\n    static fromJson(actionModel) {\n        const { formatType, lossy, progressive, preserveTransparency } = actionModel;\n        let result;\n        if (formatType) {\n            result = new this('f', formatType);\n        }\n        else {\n            result = new this('f');\n        }\n        if (progressive) {\n            if (progressive.mode) {\n                result.progressive(progressive.mode);\n            }\n            else {\n                result.progressive();\n            }\n        }\n        lossy && result.lossy();\n        preserveTransparency && result.preserveTransparency();\n        return result;\n    }\n}\nexport { DeliveryFormatAction };\n"],"mappings":"AAAA,SAASA,KAAK,EAAEC,oBAAoB,EAAEC,WAAW,QAAQ,0BAA0B;AACnF,SAASC,cAAc,QAAQ,qBAAqB;AACpD,SAASC,oBAAoB,QAAQ,iCAAiC;AACtE;AACA;AACA;AACA;AACA;AACA,MAAMC,oBAAoB,SAASF,cAAc,CAAC;EAC9CG,WAAW,CAACC,WAAW,EAAEC,YAAY,EAAE;IACnC,KAAK,CAACD,WAAW,EAAEC,YAAY,EAAE,YAAY,CAAC;EAClD;EACA;AACJ;AACA;AACA;EACIR,KAAK,GAAG;IACJ,IAAI,CAACS,YAAY,CAACT,KAAK,GAAG,IAAI;IAC9B,IAAI,CAACU,OAAO,CAACV,KAAK,EAAE,CAAC;IACrB,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;EACIE,WAAW,CAACS,IAAI,EAAE;IACd,IAAIA,IAAI,YAAYP,oBAAoB,EAAE;MACtC,IAAI,CAACK,YAAY,CAACP,WAAW,GAAG;QAAES,IAAI,EAAEA,IAAI,CAACC,YAAY;MAAG,CAAC;MAC7D,IAAI,CAACF,OAAO,CAACC,IAAI,CAAC;IACtB,CAAC,MACI;MACD,IAAI,CAACF,YAAY,CAACP,WAAW,GAAG;QAAES,IAAI,EAAEA;MAAK,CAAC;MAC9C,IAAI,CAACD,OAAO,CAACR,WAAW,CAACS,IAAI,CAAC,CAAC;IACnC;IACA,OAAO,IAAI;EACf;EACA;AACJ;AACA;EACIV,oBAAoB,GAAG;IACnB,IAAI,CAACQ,YAAY,CAACR,oBAAoB,GAAG,IAAI;IAC7C,IAAI,CAACS,OAAO,CAACT,oBAAoB,EAAE,CAAC;IACpC,OAAO,IAAI;EACf;EACA,OAAOY,QAAQ,CAACC,WAAW,EAAE;IACzB,MAAM;MAAEC,UAAU;MAAEf,KAAK;MAAEE,WAAW;MAAED;IAAqB,CAAC,GAAGa,WAAW;IAC5E,IAAIE,MAAM;IACV,IAAID,UAAU,EAAE;MACZC,MAAM,GAAG,IAAI,IAAI,CAAC,GAAG,EAAED,UAAU,CAAC;IACtC,CAAC,MACI;MACDC,MAAM,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC;IAC1B;IACA,IAAId,WAAW,EAAE;MACb,IAAIA,WAAW,CAACS,IAAI,EAAE;QAClBK,MAAM,CAACd,WAAW,CAACA,WAAW,CAACS,IAAI,CAAC;MACxC,CAAC,MACI;QACDK,MAAM,CAACd,WAAW,EAAE;MACxB;IACJ;IACAF,KAAK,IAAIgB,MAAM,CAAChB,KAAK,EAAE;IACvBC,oBAAoB,IAAIe,MAAM,CAACf,oBAAoB,EAAE;IACrD,OAAOe,MAAM;EACjB;AACJ;AACA,SAASX,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}