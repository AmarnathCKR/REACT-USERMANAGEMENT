{"ast":null,"code":"/**\n * Split a range into the start and end values\n * @param range\n */\nimport { OFFSET_ANY_PATTERN_RE } from \"../consts.js\";\nexport function splitRange(range) {\n  switch (range && range.constructor) {\n    case String:\n      if (!OFFSET_ANY_PATTERN_RE.test(range)) {\n        return range;\n      }\n      return range.split(\"..\");\n    case Array:\n      return [[range], range[range.length - 1]];\n    default:\n      return [null, null];\n  }\n}","map":{"version":3,"names":["OFFSET_ANY_PATTERN_RE","splitRange","range","constructor","String","test","split","Array","length"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/@cloudinary/transformation-builder-sdk/backwards/utils/splitRange.js"],"sourcesContent":["/**\n * Split a range into the start and end values\n * @param range\n */\nimport { OFFSET_ANY_PATTERN_RE } from \"../consts.js\";\nexport function splitRange(range) {\n    switch (range && range.constructor) {\n        case String:\n            if (!OFFSET_ANY_PATTERN_RE.test(range)) {\n                return range;\n            }\n            return range.split(\"..\");\n        case Array:\n            return [[range], range[range.length - 1]];\n        default:\n            return [null, null];\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,qBAAqB,QAAQ,cAAc;AACpD,OAAO,SAASC,UAAU,CAACC,KAAK,EAAE;EAC9B,QAAQA,KAAK,IAAIA,KAAK,CAACC,WAAW;IAC9B,KAAKC,MAAM;MACP,IAAI,CAACJ,qBAAqB,CAACK,IAAI,CAACH,KAAK,CAAC,EAAE;QACpC,OAAOA,KAAK;MAChB;MACA,OAAOA,KAAK,CAACI,KAAK,CAAC,IAAI,CAAC;IAC5B,KAAKC,KAAK;MACN,OAAO,CAAC,CAACL,KAAK,CAAC,EAAEA,KAAK,CAACA,KAAK,CAACM,MAAM,GAAG,CAAC,CAAC,CAAC;IAC7C;MACI,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC;EAAC;AAEhC"},"metadata":{},"sourceType":"module","externalDependencies":[]}