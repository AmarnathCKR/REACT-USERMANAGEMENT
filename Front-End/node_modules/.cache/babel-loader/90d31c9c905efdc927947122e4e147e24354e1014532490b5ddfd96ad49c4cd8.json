{"ast":null,"code":"'use strict';\n\nvar aSet = require('../internals/a-set');\nvar has = require('../internals/set-helpers').has;\nvar size = require('../internals/set-size');\nvar getSetRecord = require('../internals/get-set-record');\nvar iterateSet = require('../internals/set-iterate');\nvar iterateSimple = require('../internals/iterate-simple');\nvar iteratorClose = require('../internals/iterator-close');\n\n// `Set.prototype.isDisjointFrom` method\n// https://tc39.github.io/proposal-set-methods/#Set.prototype.isDisjointFrom\nmodule.exports = function isDisjointFrom(other) {\n  var O = aSet(this);\n  var otherRec = getSetRecord(other);\n  if (size(O) <= otherRec.size) return iterateSet(O, function (e) {\n    if (otherRec.includes(e)) return false;\n  }, true) !== false;\n  var iterator = otherRec.getIterator();\n  return iterateSimple(iterator, function (e) {\n    if (has(O, e)) return iteratorClose(iterator, 'normal', false);\n  }) !== false;\n};","map":{"version":3,"names":["aSet","require","has","size","getSetRecord","iterateSet","iterateSimple","iteratorClose","module","exports","isDisjointFrom","other","O","otherRec","e","includes","iterator","getIterator"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/core-js/internals/set-is-disjoint-from.js"],"sourcesContent":["'use strict';\nvar aSet = require('../internals/a-set');\nvar has = require('../internals/set-helpers').has;\nvar size = require('../internals/set-size');\nvar getSetRecord = require('../internals/get-set-record');\nvar iterateSet = require('../internals/set-iterate');\nvar iterateSimple = require('../internals/iterate-simple');\nvar iteratorClose = require('../internals/iterator-close');\n\n// `Set.prototype.isDisjointFrom` method\n// https://tc39.github.io/proposal-set-methods/#Set.prototype.isDisjointFrom\nmodule.exports = function isDisjointFrom(other) {\n  var O = aSet(this);\n  var otherRec = getSetRecord(other);\n  if (size(O) <= otherRec.size) return iterateSet(O, function (e) {\n    if (otherRec.includes(e)) return false;\n  }, true) !== false;\n  var iterator = otherRec.getIterator();\n  return iterateSimple(iterator, function (e) {\n    if (has(O, e)) return iteratorClose(iterator, 'normal', false);\n  }) !== false;\n};\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AACxC,IAAIC,GAAG,GAAGD,OAAO,CAAC,0BAA0B,CAAC,CAACC,GAAG;AACjD,IAAIC,IAAI,GAAGF,OAAO,CAAC,uBAAuB,CAAC;AAC3C,IAAIG,YAAY,GAAGH,OAAO,CAAC,6BAA6B,CAAC;AACzD,IAAII,UAAU,GAAGJ,OAAO,CAAC,0BAA0B,CAAC;AACpD,IAAIK,aAAa,GAAGL,OAAO,CAAC,6BAA6B,CAAC;AAC1D,IAAIM,aAAa,GAAGN,OAAO,CAAC,6BAA6B,CAAC;;AAE1D;AACA;AACAO,MAAM,CAACC,OAAO,GAAG,SAASC,cAAc,CAACC,KAAK,EAAE;EAC9C,IAAIC,CAAC,GAAGZ,IAAI,CAAC,IAAI,CAAC;EAClB,IAAIa,QAAQ,GAAGT,YAAY,CAACO,KAAK,CAAC;EAClC,IAAIR,IAAI,CAACS,CAAC,CAAC,IAAIC,QAAQ,CAACV,IAAI,EAAE,OAAOE,UAAU,CAACO,CAAC,EAAE,UAAUE,CAAC,EAAE;IAC9D,IAAID,QAAQ,CAACE,QAAQ,CAACD,CAAC,CAAC,EAAE,OAAO,KAAK;EACxC,CAAC,EAAE,IAAI,CAAC,KAAK,KAAK;EAClB,IAAIE,QAAQ,GAAGH,QAAQ,CAACI,WAAW,EAAE;EACrC,OAAOX,aAAa,CAACU,QAAQ,EAAE,UAAUF,CAAC,EAAE;IAC1C,IAAIZ,GAAG,CAACU,CAAC,EAAEE,CAAC,CAAC,EAAE,OAAOP,aAAa,CAACS,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAC;EAChE,CAAC,CAAC,KAAK,KAAK;AACd,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}