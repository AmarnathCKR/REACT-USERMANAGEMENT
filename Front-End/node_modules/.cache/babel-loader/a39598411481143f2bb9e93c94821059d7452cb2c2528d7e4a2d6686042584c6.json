{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar anObject = require('../internals/an-object');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\nvar notANaN = require('../internals/not-a-nan');\nvar toPositiveInteger = require('../internals/to-positive-integer');\nvar createIteratorProxy = require('../internals/iterator-create-proxy');\nvar iteratorClose = require('../internals/iterator-close');\nvar IteratorProxy = createIteratorProxy(function () {\n  var iterator = this.iterator;\n  if (!this.remaining--) {\n    this.done = true;\n    return iteratorClose(iterator, 'normal', undefined);\n  }\n  var result = anObject(call(this.next, iterator));\n  var done = this.done = !!result.done;\n  if (!done) return result.value;\n});\n\n// `Iterator.prototype.take` method\n// https://github.com/tc39/proposal-iterator-helpers\n$({\n  target: 'Iterator',\n  proto: true,\n  real: true\n}, {\n  take: function take(limit) {\n    return new IteratorProxy(getIteratorDirect(this), {\n      remaining: toPositiveInteger(notANaN(+limit))\n    });\n  }\n});","map":{"version":3,"names":["$","require","call","anObject","getIteratorDirect","notANaN","toPositiveInteger","createIteratorProxy","iteratorClose","IteratorProxy","iterator","remaining","done","undefined","result","next","value","target","proto","real","take","limit"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/core-js/modules/esnext.iterator.take.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar anObject = require('../internals/an-object');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\nvar notANaN = require('../internals/not-a-nan');\nvar toPositiveInteger = require('../internals/to-positive-integer');\nvar createIteratorProxy = require('../internals/iterator-create-proxy');\nvar iteratorClose = require('../internals/iterator-close');\n\nvar IteratorProxy = createIteratorProxy(function () {\n  var iterator = this.iterator;\n  if (!this.remaining--) {\n    this.done = true;\n    return iteratorClose(iterator, 'normal', undefined);\n  }\n  var result = anObject(call(this.next, iterator));\n  var done = this.done = !!result.done;\n  if (!done) return result.value;\n});\n\n// `Iterator.prototype.take` method\n// https://github.com/tc39/proposal-iterator-helpers\n$({ target: 'Iterator', proto: true, real: true }, {\n  take: function take(limit) {\n    return new IteratorProxy(getIteratorDirect(this), {\n      remaining: toPositiveInteger(notANaN(+limit))\n    });\n  }\n});\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACtC,IAAIC,IAAI,GAAGD,OAAO,CAAC,4BAA4B,CAAC;AAChD,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAwB,CAAC;AAChD,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,kCAAkC,CAAC;AACnE,IAAII,OAAO,GAAGJ,OAAO,CAAC,wBAAwB,CAAC;AAC/C,IAAIK,iBAAiB,GAAGL,OAAO,CAAC,kCAAkC,CAAC;AACnE,IAAIM,mBAAmB,GAAGN,OAAO,CAAC,oCAAoC,CAAC;AACvE,IAAIO,aAAa,GAAGP,OAAO,CAAC,6BAA6B,CAAC;AAE1D,IAAIQ,aAAa,GAAGF,mBAAmB,CAAC,YAAY;EAClD,IAAIG,QAAQ,GAAG,IAAI,CAACA,QAAQ;EAC5B,IAAI,CAAC,IAAI,CAACC,SAAS,EAAE,EAAE;IACrB,IAAI,CAACC,IAAI,GAAG,IAAI;IAChB,OAAOJ,aAAa,CAACE,QAAQ,EAAE,QAAQ,EAAEG,SAAS,CAAC;EACrD;EACA,IAAIC,MAAM,GAAGX,QAAQ,CAACD,IAAI,CAAC,IAAI,CAACa,IAAI,EAAEL,QAAQ,CAAC,CAAC;EAChD,IAAIE,IAAI,GAAG,IAAI,CAACA,IAAI,GAAG,CAAC,CAACE,MAAM,CAACF,IAAI;EACpC,IAAI,CAACA,IAAI,EAAE,OAAOE,MAAM,CAACE,KAAK;AAChC,CAAC,CAAC;;AAEF;AACA;AACAhB,CAAC,CAAC;EAAEiB,MAAM,EAAE,UAAU;EAAEC,KAAK,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAK,CAAC,EAAE;EACjDC,IAAI,EAAE,SAASA,IAAI,CAACC,KAAK,EAAE;IACzB,OAAO,IAAIZ,aAAa,CAACL,iBAAiB,CAAC,IAAI,CAAC,EAAE;MAChDO,SAAS,EAAEL,iBAAiB,CAACD,OAAO,CAAC,CAACgB,KAAK,CAAC;IAC9C,CAAC,CAAC;EACJ;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}