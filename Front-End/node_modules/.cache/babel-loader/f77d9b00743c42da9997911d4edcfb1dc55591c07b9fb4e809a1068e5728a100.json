{"ast":null,"code":"import Layer from './layer.js';\nimport { isString } from \"../../internal/utils/dataStructureUtils.js\";\nimport { base64Encode } from \"../../internal/utils/base64Encode.js\";\nclass FetchLayer extends Layer {\n  /**\n   * @class FetchLayer\n   * @classdesc Creates an image layer using a remote URL.\n   * @param {Object|string} options - layer parameters or a url\n   * @param {string} options.url the url of the image to fetch\n   */\n  constructor(options) {\n    super(options);\n    if (isString(options)) {\n      this.options.url = options;\n    } else if (options != null ? options.url : void 0) {\n      this.options.url = options.url;\n    }\n  }\n  url(url) {\n    this.options.url = url;\n    return this;\n  }\n  /**\n   * generate the string representation of the layer\n   * @function FetchLayer#toString\n   * @return {String}\n   */\n  toString() {\n    return `fetch:${base64Encode(this.options.url)}`;\n  }\n}\nexport default FetchLayer;","map":{"version":3,"names":["Layer","isString","base64Encode","FetchLayer","constructor","options","url","toString"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/@cloudinary/url-gen/backwards/legacyLayer/fetchlayer.js"],"sourcesContent":["import Layer from './layer.js';\nimport { isString } from \"../../internal/utils/dataStructureUtils.js\";\nimport { base64Encode } from \"../../internal/utils/base64Encode.js\";\nclass FetchLayer extends Layer {\n    /**\n     * @class FetchLayer\n     * @classdesc Creates an image layer using a remote URL.\n     * @param {Object|string} options - layer parameters or a url\n     * @param {string} options.url the url of the image to fetch\n     */\n    constructor(options) {\n        super(options);\n        if (isString(options)) {\n            this.options.url = options;\n        }\n        else if (options != null ? options.url : void 0) {\n            this.options.url = options.url;\n        }\n    }\n    url(url) {\n        this.options.url = url;\n        return this;\n    }\n    /**\n     * generate the string representation of the layer\n     * @function FetchLayer#toString\n     * @return {String}\n     */\n    toString() {\n        return `fetch:${base64Encode(this.options.url)}`;\n    }\n}\nexport default FetchLayer;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,YAAY;AAC9B,SAASC,QAAQ,QAAQ,4CAA4C;AACrE,SAASC,YAAY,QAAQ,sCAAsC;AACnE,MAAMC,UAAU,SAASH,KAAK,CAAC;EAC3B;AACJ;AACA;AACA;AACA;AACA;EACII,WAAW,CAACC,OAAO,EAAE;IACjB,KAAK,CAACA,OAAO,CAAC;IACd,IAAIJ,QAAQ,CAACI,OAAO,CAAC,EAAE;MACnB,IAAI,CAACA,OAAO,CAACC,GAAG,GAAGD,OAAO;IAC9B,CAAC,MACI,IAAIA,OAAO,IAAI,IAAI,GAAGA,OAAO,CAACC,GAAG,GAAG,KAAK,CAAC,EAAE;MAC7C,IAAI,CAACD,OAAO,CAACC,GAAG,GAAGD,OAAO,CAACC,GAAG;IAClC;EACJ;EACAA,GAAG,CAACA,GAAG,EAAE;IACL,IAAI,CAACD,OAAO,CAACC,GAAG,GAAGA,GAAG;IACtB,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;EACIC,QAAQ,GAAG;IACP,OAAQ,SAAQL,YAAY,CAAC,IAAI,CAACG,OAAO,CAACC,GAAG,CAAE,EAAC;EACpD;AACJ;AACA,eAAeH,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}