{"ast":null,"code":"import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { animatedWebP } from \"../../qualifiers/flag.js\";\nimport { animated } from \"../../qualifiers/flag.js\";\n/**\n * @extends SDK.Action\n * @memberOf Actions.Transcode\n * @description Converts a video to an animated webp or gif.\n * The resulting transformation includes format (f_format) and the animated flag (fl_animated).\n * The flag fl_awebp is added only when an animated webp is requested.\n * @see Visit {@link Actions.Transcode|Transcode} for an example\n */\nclass ToAnimatedAction extends Action {\n  constructor() {\n    let animatedFormat = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    super();\n    this._actionModel = {\n      actionType: 'toAnimated'\n    };\n    if (animatedFormat.toString() === 'webp') {\n      this.addFlag(animatedWebP());\n    }\n    this.addFlag(animated());\n    if (animatedFormat) {\n      this.addQualifier(new Qualifier('f', animatedFormat));\n    }\n    this._actionModel.animatedFormat = animatedFormat;\n  }\n  /**\n   * @description Sets the time between frames.\n   * @param delayValue The time in milliseconds.\n   */\n  delay(delayValue) {\n    this.addQualifier(new Qualifier('dl', delayValue));\n    this._actionModel.delay = delayValue;\n    return this;\n  }\n  /**\n   * @description Sets the frequency at which the video is sampled.\n   * @param sampling As a string (e.g. '2.3s'), samples one frame every 2.3 seconds.<br>As a number (e.g. 20),\n   * samples that many equally spaced frames over the duration of the video.\n   */\n  sampling(sampling) {\n    this.addQualifier(new Qualifier('vs', sampling));\n    this._actionModel.sampling = sampling;\n    return this;\n  }\n  static fromJson(actionModel) {\n    const {\n      animatedFormat,\n      sampling,\n      delay\n    } = actionModel;\n    // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n    // This allows the inheriting classes to determine the class to be created\n    const result = new this(animatedFormat);\n    sampling && result.sampling(sampling);\n    delay && result.delay(delay);\n    return result;\n  }\n}\nexport default ToAnimatedAction;","map":{"version":3,"names":["Action","Qualifier","animatedWebP","animated","ToAnimatedAction","constructor","animatedFormat","_actionModel","actionType","toString","addFlag","addQualifier","delay","delayValue","sampling","fromJson","actionModel","result"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/@cloudinary/transformation-builder-sdk/actions/transcode/ToAnimatedAction.js"],"sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { animatedWebP } from \"../../qualifiers/flag.js\";\nimport { animated } from \"../../qualifiers/flag.js\";\n/**\n * @extends SDK.Action\n * @memberOf Actions.Transcode\n * @description Converts a video to an animated webp or gif.\n * The resulting transformation includes format (f_format) and the animated flag (fl_animated).\n * The flag fl_awebp is added only when an animated webp is requested.\n * @see Visit {@link Actions.Transcode|Transcode} for an example\n */\nclass ToAnimatedAction extends Action {\n    constructor(animatedFormat = '') {\n        super();\n        this._actionModel = { actionType: 'toAnimated' };\n        if (animatedFormat.toString() === 'webp') {\n            this.addFlag(animatedWebP());\n        }\n        this.addFlag(animated());\n        if (animatedFormat) {\n            this.addQualifier(new Qualifier('f', animatedFormat));\n        }\n        this._actionModel.animatedFormat = animatedFormat;\n    }\n    /**\n     * @description Sets the time between frames.\n     * @param delayValue The time in milliseconds.\n     */\n    delay(delayValue) {\n        this.addQualifier(new Qualifier('dl', delayValue));\n        this._actionModel.delay = delayValue;\n        return this;\n    }\n    /**\n     * @description Sets the frequency at which the video is sampled.\n     * @param sampling As a string (e.g. '2.3s'), samples one frame every 2.3 seconds.<br>As a number (e.g. 20),\n     * samples that many equally spaced frames over the duration of the video.\n     */\n    sampling(sampling) {\n        this.addQualifier(new Qualifier('vs', sampling));\n        this._actionModel.sampling = sampling;\n        return this;\n    }\n    static fromJson(actionModel) {\n        const { animatedFormat, sampling, delay } = actionModel;\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n        // This allows the inheriting classes to determine the class to be created\n        const result = new this(animatedFormat);\n        sampling && result.sampling(sampling);\n        delay && result.delay(delay);\n        return result;\n    }\n}\nexport default ToAnimatedAction;\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,0BAA0B;AACjD,SAASC,SAAS,QAAQ,uCAAuC;AACjE,SAASC,YAAY,QAAQ,0BAA0B;AACvD,SAASC,QAAQ,QAAQ,0BAA0B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,SAASJ,MAAM,CAAC;EAClCK,WAAW,GAAsB;IAAA,IAArBC,cAAc,uEAAG,EAAE;IAC3B,KAAK,EAAE;IACP,IAAI,CAACC,YAAY,GAAG;MAAEC,UAAU,EAAE;IAAa,CAAC;IAChD,IAAIF,cAAc,CAACG,QAAQ,EAAE,KAAK,MAAM,EAAE;MACtC,IAAI,CAACC,OAAO,CAACR,YAAY,EAAE,CAAC;IAChC;IACA,IAAI,CAACQ,OAAO,CAACP,QAAQ,EAAE,CAAC;IACxB,IAAIG,cAAc,EAAE;MAChB,IAAI,CAACK,YAAY,CAAC,IAAIV,SAAS,CAAC,GAAG,EAAEK,cAAc,CAAC,CAAC;IACzD;IACA,IAAI,CAACC,YAAY,CAACD,cAAc,GAAGA,cAAc;EACrD;EACA;AACJ;AACA;AACA;EACIM,KAAK,CAACC,UAAU,EAAE;IACd,IAAI,CAACF,YAAY,CAAC,IAAIV,SAAS,CAAC,IAAI,EAAEY,UAAU,CAAC,CAAC;IAClD,IAAI,CAACN,YAAY,CAACK,KAAK,GAAGC,UAAU;IACpC,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;EACIC,QAAQ,CAACA,QAAQ,EAAE;IACf,IAAI,CAACH,YAAY,CAAC,IAAIV,SAAS,CAAC,IAAI,EAAEa,QAAQ,CAAC,CAAC;IAChD,IAAI,CAACP,YAAY,CAACO,QAAQ,GAAGA,QAAQ;IACrC,OAAO,IAAI;EACf;EACA,OAAOC,QAAQ,CAACC,WAAW,EAAE;IACzB,MAAM;MAAEV,cAAc;MAAEQ,QAAQ;MAAEF;IAAM,CAAC,GAAGI,WAAW;IACvD;IACA;IACA,MAAMC,MAAM,GAAG,IAAI,IAAI,CAACX,cAAc,CAAC;IACvCQ,QAAQ,IAAIG,MAAM,CAACH,QAAQ,CAACA,QAAQ,CAAC;IACrCF,KAAK,IAAIK,MAAM,CAACL,KAAK,CAACA,KAAK,CAAC;IAC5B,OAAOK,MAAM;EACjB;AACJ;AACA,eAAeb,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}