{"ast":null,"code":"import { processLayer } from \"./transformationProcessing/processLayer.js\";\nimport { process_if } from \"./transformationProcessing/processIf.js\";\nimport { toArray } from \"./utils/toArray.js\";\nimport { processRadius } from \"./transformationProcessing/processRadius.js\";\nimport { isObject } from \"./utils/isObject.js\";\nimport { processCustomFunction } from \"./transformationProcessing/processCustomFunction.js\";\nimport { processCustomPreFunction } from \"./transformationProcessing/processCustomPreFunction.js\";\nimport { splitRange } from \"./utils/splitRange.js\";\nimport { legacyNormalizeExpression } from \"./utils/legacyNormalizeExpression.js\";\nimport { normRangeValues } from \"./utils/norm_range_values.js\";\nimport { processVideoParams } from \"./transformationProcessing/processVideoParams.js\";\nimport Transformation from \"./transformation.js\";\nimport { processDpr } from \"./transformationProcessing/processDpr.js\";\nimport { isNumberLike } from \"./utils/isNumberLike.js\";\n/**\n * Things dropped\n * - responsive_width\n * - config().dpr\n * - SSL Detected\n * - Provisioning API\n * - Magical configuration auto-mapping (everything has to be explicit)\n * - Signatures\n * - Secure is default true\n * @param transformationOptions\n */\nexport function generateTransformationString(transformationOptions) {\n  if (typeof transformationOptions === 'string') {\n    return transformationOptions;\n  }\n  if (transformationOptions instanceof Transformation) {\n    return transformationOptions.toString();\n  }\n  if (Array.isArray(transformationOptions)) {\n    return transformationOptions.map(singleTransformation => {\n      return generateTransformationString(singleTransformation);\n    }).filter(a => {\n      return a;\n    }).join('/');\n  }\n  // let responsive_width = consumeOption(transformationOptions, \"responsive_width\", config().responsive_width);\n  let width;\n  let height;\n  const size = transformationOptions.size;\n  const hasLayer = transformationOptions.overlay || transformationOptions.underlay;\n  const crop = transformationOptions.crop;\n  const angle = toArray(transformationOptions.angle).join(\".\");\n  const background = (transformationOptions.background || '').replace(/^#/, \"rgb:\");\n  const color = (transformationOptions.color || '').replace(/^#/, \"rgb:\");\n  const flags = toArray(transformationOptions.flags || []).join('.');\n  const dpr = transformationOptions.dpr === undefined ? transformationOptions.dpr : processDpr(transformationOptions.dpr);\n  const overlay = processLayer(transformationOptions.overlay);\n  const radius = processRadius(transformationOptions.radius);\n  const underlay = processLayer(transformationOptions.underlay);\n  const ifValue = process_if(transformationOptions.if);\n  const custom_function = processCustomFunction(transformationOptions.custom_function);\n  const custom_pre_function = processCustomPreFunction(transformationOptions.custom_pre_function);\n  // These will change down the line, heads up!\n  let fps = transformationOptions.fps;\n  let namedTransformations = [];\n  let childTransformations = toArray(transformationOptions.transformation || []);\n  let effect = transformationOptions.effect;\n  // TODO, Do we need this?\n  const no_html_sizes = hasLayer || angle || crop === \"fit\" || crop === \"limit\";\n  if (size) {\n    const [sizeWidth, sizeHeight] = size.split(\"x\");\n    width = sizeWidth;\n    height = sizeHeight;\n  } else {\n    width = transformationOptions.width;\n    height = transformationOptions.height;\n  }\n  if (width && (width.toString().indexOf(\"auto\") === 0 || no_html_sizes || parseFloat(width.toString()) < 1)) {\n    delete transformationOptions.width;\n  }\n  if (height && (no_html_sizes || parseFloat(height.toString()) < 1)) {\n    delete transformationOptions.height;\n  }\n  // Is any child transformation an object?\n  const isAnyChildAnObject = childTransformations.some(transformation => typeof transformation === 'object');\n  // If array of objects, or array of strings?\n  if (isAnyChildAnObject) {\n    childTransformations = childTransformations.map(transformation => {\n      if (isObject(transformation)) {\n        return generateTransformationString(transformation);\n      } else {\n        return generateTransformationString({\n          transformation\n        });\n      }\n    }).filter(a => a);\n  } else {\n    namedTransformations = childTransformations.join(\".\");\n    childTransformations = []; // Reset child transfomrations\n  }\n\n  if (Array.isArray(effect)) {\n    effect = effect.join(\":\");\n  } else if (isObject(effect)) {\n    effect = Object.entries(effect).map(_ref => {\n      let [key, value] = _ref;\n      return `${key}:${value}`;\n    });\n  }\n  let border = transformationOptions.border;\n  if (isObject(border)) {\n    border = `${border.width != null ? border.width : 2}px_solid_${(border.color != null ? border.color : \"black\").replace(/^#/, 'rgb:')}`;\n  } else {\n    // @ts-ignore\n    if (/^\\d+$/.exec(border)) {\n      // fallback to html border attributes\n      transformationOptions.border = border;\n      border = void 0;\n    }\n  }\n  if (Array.isArray(fps)) {\n    fps = fps.join('-');\n  }\n  // ocr(value) {\n  //   return this.param(value, \"ocr\", \"ocr\");\n  // }\n  const urlParams = {\n    a: legacyNormalizeExpression(angle),\n    ar: legacyNormalizeExpression(transformationOptions.aspect_ratio),\n    b: background,\n    bo: border,\n    c: crop,\n    co: color,\n    dpr: legacyNormalizeExpression(dpr),\n    e: legacyNormalizeExpression(effect),\n    fl: flags,\n    fn: custom_function || custom_pre_function,\n    fps: fps,\n    h: legacyNormalizeExpression(height),\n    ki: legacyNormalizeExpression(transformationOptions.keyframe_interval),\n    l: overlay,\n    o: legacyNormalizeExpression(transformationOptions.opacity),\n    q: legacyNormalizeExpression(transformationOptions.quality),\n    r: radius,\n    t: namedTransformations,\n    u: underlay,\n    w: legacyNormalizeExpression(width),\n    x: legacyNormalizeExpression(transformationOptions.x),\n    y: legacyNormalizeExpression(transformationOptions.y),\n    z: legacyNormalizeExpression(transformationOptions.zoom),\n    ac: transformationOptions.audio_codec,\n    af: transformationOptions.audio_frequency,\n    br: transformationOptions.bit_rate,\n    cs: transformationOptions.color_space,\n    d: transformationOptions.default_image,\n    dl: transformationOptions.delay,\n    dn: transformationOptions.density,\n    du: normRangeValues(transformationOptions.duration),\n    eo: normRangeValues(transformationOptions.end_offset || isNumberLike(transformationOptions.end_offset) ? transformationOptions.end_offset : splitRange(transformationOptions.offset)[1]),\n    f: transformationOptions.fetch_format,\n    g: transformationOptions.gravity,\n    pg: transformationOptions.page,\n    p: transformationOptions.prefix,\n    so: normRangeValues(transformationOptions.start_offset || isNumberLike(transformationOptions.start_offset) ? transformationOptions.start_offset : splitRange(transformationOptions.offset)[0]),\n    sp: transformationOptions.streaming_profile,\n    vc: processVideoParams(transformationOptions.video_codec),\n    vs: transformationOptions.video_sampling\n  };\n  // We can accept variables in here transformationOptions, or in here transformationOptions.variables\n  const variables = Object.entries(transformationOptions).filter(_ref2 => {\n    let [key, value] = _ref2;\n    return key.startsWith('$');\n  }).map(_ref3 => {\n    let [key, value] = _ref3;\n    // delete transformationOptions[key]; // Delete the variables, so we don't add them twice\n    return `${key}_${legacyNormalizeExpression(value)}`;\n  }).sort().concat(\n  // @ts-ignore\n  (transformationOptions.variables || []).map(_ref4 => {\n    let [name, value] = _ref4;\n    return `${name}_${legacyNormalizeExpression(value)}`;\n  })).join(',');\n  // Clean up!\n  const urlImageTransfomrations = Object.entries(urlParams).filter(_ref5 => {\n    let [key, value] = _ref5;\n    if (typeof value === 'undefined' || value === null) {\n      return false;\n    }\n    if (typeof value === 'string' && value.length === 0) {\n      return false;\n    }\n    if (Array.isArray(value) && value.length === 0) {\n      return false;\n    }\n    return true;\n  }).map(_ref6 => {\n    let [key, value] = _ref6;\n    return `${key}_${value}`;\n  }).sort().join(',');\n  const finalTransformationString = [ifValue, variables, urlImageTransfomrations, transformationOptions.raw_transformation].filter(a => a).join(\",\");\n  if (finalTransformationString) {\n    childTransformations.push(finalTransformationString);\n  }\n  // console.log(childTransformations);\n  return childTransformations.join(\"/\");\n}","map":{"version":3,"names":["processLayer","process_if","toArray","processRadius","isObject","processCustomFunction","processCustomPreFunction","splitRange","legacyNormalizeExpression","normRangeValues","processVideoParams","Transformation","processDpr","isNumberLike","generateTransformationString","transformationOptions","toString","Array","isArray","map","singleTransformation","filter","a","join","width","height","size","hasLayer","overlay","underlay","crop","angle","background","replace","color","flags","dpr","undefined","radius","ifValue","if","custom_function","custom_pre_function","fps","namedTransformations","childTransformations","transformation","effect","no_html_sizes","sizeWidth","sizeHeight","split","indexOf","parseFloat","isAnyChildAnObject","some","Object","entries","key","value","border","exec","urlParams","ar","aspect_ratio","b","bo","c","co","e","fl","fn","h","ki","keyframe_interval","l","o","opacity","q","quality","r","t","u","w","x","y","z","zoom","ac","audio_codec","af","audio_frequency","br","bit_rate","cs","color_space","d","default_image","dl","delay","dn","density","du","duration","eo","end_offset","offset","f","fetch_format","g","gravity","pg","page","p","prefix","so","start_offset","sp","streaming_profile","vc","video_codec","vs","video_sampling","variables","startsWith","sort","concat","name","urlImageTransfomrations","length","finalTransformationString","raw_transformation","push"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/@cloudinary/url-gen/backwards/generateTransformationString.js"],"sourcesContent":["import { processLayer } from \"./transformationProcessing/processLayer.js\";\nimport { process_if } from \"./transformationProcessing/processIf.js\";\nimport { toArray } from \"./utils/toArray.js\";\nimport { processRadius } from \"./transformationProcessing/processRadius.js\";\nimport { isObject } from \"./utils/isObject.js\";\nimport { processCustomFunction } from \"./transformationProcessing/processCustomFunction.js\";\nimport { processCustomPreFunction } from \"./transformationProcessing/processCustomPreFunction.js\";\nimport { splitRange } from \"./utils/splitRange.js\";\nimport { legacyNormalizeExpression } from \"./utils/legacyNormalizeExpression.js\";\nimport { normRangeValues } from \"./utils/norm_range_values.js\";\nimport { processVideoParams } from \"./transformationProcessing/processVideoParams.js\";\nimport Transformation from \"./transformation.js\";\nimport { processDpr } from \"./transformationProcessing/processDpr.js\";\nimport { isNumberLike } from \"./utils/isNumberLike.js\";\n/**\n * Things dropped\n * - responsive_width\n * - config().dpr\n * - SSL Detected\n * - Provisioning API\n * - Magical configuration auto-mapping (everything has to be explicit)\n * - Signatures\n * - Secure is default true\n * @param transformationOptions\n */\nexport function generateTransformationString(transformationOptions) {\n    if (typeof transformationOptions === 'string') {\n        return transformationOptions;\n    }\n    if (transformationOptions instanceof Transformation) {\n        return transformationOptions.toString();\n    }\n    if (Array.isArray(transformationOptions)) {\n        return transformationOptions\n            .map((singleTransformation) => {\n            return generateTransformationString(singleTransformation);\n        }).filter((a) => { return a; }).join('/');\n    }\n    // let responsive_width = consumeOption(transformationOptions, \"responsive_width\", config().responsive_width);\n    let width;\n    let height;\n    const size = transformationOptions.size;\n    const hasLayer = transformationOptions.overlay || transformationOptions.underlay;\n    const crop = transformationOptions.crop;\n    const angle = toArray(transformationOptions.angle).join(\".\");\n    const background = (transformationOptions.background || '').replace(/^#/, \"rgb:\");\n    const color = (transformationOptions.color || '').replace(/^#/, \"rgb:\");\n    const flags = (toArray(transformationOptions.flags || [])).join('.');\n    const dpr = transformationOptions.dpr === undefined ? transformationOptions.dpr : processDpr(transformationOptions.dpr);\n    const overlay = processLayer(transformationOptions.overlay);\n    const radius = processRadius(transformationOptions.radius);\n    const underlay = processLayer(transformationOptions.underlay);\n    const ifValue = process_if(transformationOptions.if);\n    const custom_function = processCustomFunction(transformationOptions.custom_function);\n    const custom_pre_function = processCustomPreFunction(transformationOptions.custom_pre_function);\n    // These will change down the line, heads up!\n    let fps = transformationOptions.fps;\n    let namedTransformations = [];\n    let childTransformations = toArray(transformationOptions.transformation || []);\n    let effect = transformationOptions.effect;\n    // TODO, Do we need this?\n    const no_html_sizes = hasLayer || angle || crop === \"fit\" || crop === \"limit\";\n    if (size) {\n        const [sizeWidth, sizeHeight] = size.split(\"x\");\n        width = sizeWidth;\n        height = sizeHeight;\n    }\n    else {\n        width = transformationOptions.width;\n        height = transformationOptions.height;\n    }\n    if (width && (width.toString().indexOf(\"auto\") === 0 || no_html_sizes || parseFloat(width.toString()) < 1)) {\n        delete transformationOptions.width;\n    }\n    if (height && (no_html_sizes || parseFloat(height.toString()) < 1)) {\n        delete transformationOptions.height;\n    }\n    // Is any child transformation an object?\n    const isAnyChildAnObject = childTransformations.some((transformation) => typeof transformation === 'object');\n    // If array of objects, or array of strings?\n    if (isAnyChildAnObject) {\n        childTransformations = childTransformations.map((transformation) => {\n            if (isObject(transformation)) {\n                return generateTransformationString(transformation);\n            }\n            else {\n                return generateTransformationString({ transformation });\n            }\n        }).filter((a) => a);\n    }\n    else {\n        namedTransformations = childTransformations.join(\".\");\n        childTransformations = []; // Reset child transfomrations\n    }\n    if (Array.isArray(effect)) {\n        effect = effect.join(\":\");\n    }\n    else if (isObject(effect)) {\n        effect = Object.entries(effect).map(([key, value]) => `${key}:${value}`);\n    }\n    let border = transformationOptions.border;\n    if (isObject(border)) {\n        border = `${border.width != null ? border.width : 2}px_solid_${(border.color != null ? border.color : \"black\").replace(/^#/, 'rgb:')}`;\n    }\n    else {\n        // @ts-ignore\n        if (/^\\d+$/.exec(border)) { // fallback to html border attributes\n            transformationOptions.border = border;\n            border = void 0;\n        }\n    }\n    if (Array.isArray(fps)) {\n        fps = fps.join('-');\n    }\n    // ocr(value) {\n    //   return this.param(value, \"ocr\", \"ocr\");\n    // }\n    const urlParams = {\n        a: legacyNormalizeExpression(angle),\n        ar: legacyNormalizeExpression(transformationOptions.aspect_ratio),\n        b: background,\n        bo: border,\n        c: crop,\n        co: color,\n        dpr: legacyNormalizeExpression(dpr),\n        e: legacyNormalizeExpression(effect),\n        fl: flags,\n        fn: custom_function || custom_pre_function,\n        fps: fps,\n        h: legacyNormalizeExpression(height),\n        ki: legacyNormalizeExpression(transformationOptions.keyframe_interval),\n        l: overlay,\n        o: legacyNormalizeExpression(transformationOptions.opacity),\n        q: legacyNormalizeExpression(transformationOptions.quality),\n        r: radius,\n        t: namedTransformations,\n        u: underlay,\n        w: legacyNormalizeExpression(width),\n        x: legacyNormalizeExpression(transformationOptions.x),\n        y: legacyNormalizeExpression(transformationOptions.y),\n        z: legacyNormalizeExpression(transformationOptions.zoom),\n        ac: transformationOptions.audio_codec,\n        af: transformationOptions.audio_frequency,\n        br: transformationOptions.bit_rate,\n        cs: transformationOptions.color_space,\n        d: transformationOptions.default_image,\n        dl: transformationOptions.delay,\n        dn: transformationOptions.density,\n        du: normRangeValues(transformationOptions.duration),\n        eo: normRangeValues(transformationOptions.end_offset || isNumberLike(transformationOptions.end_offset) ? transformationOptions.end_offset : splitRange(transformationOptions.offset)[1]),\n        f: transformationOptions.fetch_format,\n        g: transformationOptions.gravity,\n        pg: transformationOptions.page,\n        p: transformationOptions.prefix,\n        so: normRangeValues(transformationOptions.start_offset || isNumberLike(transformationOptions.start_offset) ? transformationOptions.start_offset : splitRange(transformationOptions.offset)[0]),\n        sp: transformationOptions.streaming_profile,\n        vc: processVideoParams(transformationOptions.video_codec),\n        vs: transformationOptions.video_sampling\n    };\n    // We can accept variables in here transformationOptions, or in here transformationOptions.variables\n    const variables = Object.entries(transformationOptions)\n        .filter(([key, value]) => key.startsWith('$'))\n        .map(([key, value]) => {\n        // delete transformationOptions[key]; // Delete the variables, so we don't add them twice\n        return `${key}_${legacyNormalizeExpression(value)}`;\n    }).sort().concat(\n    // @ts-ignore\n    (transformationOptions.variables || []).map(([name, value]) => `${name}_${legacyNormalizeExpression(value)}`)).join(',');\n    // Clean up!\n    const urlImageTransfomrations = Object.entries(urlParams)\n        .filter(([key, value]) => {\n        if (typeof value === 'undefined' || value === null) {\n            return false;\n        }\n        if (typeof value === 'string' && value.length === 0) {\n            return false;\n        }\n        if (Array.isArray(value) && value.length === 0) {\n            return false;\n        }\n        return true;\n    })\n        .map(([key, value]) => `${key}_${value}`)\n        .sort()\n        .join(',');\n    const finalTransformationString = [\n        ifValue,\n        variables,\n        urlImageTransfomrations,\n        transformationOptions.raw_transformation\n    ].filter((a) => a).join(\",\");\n    if (finalTransformationString) {\n        childTransformations.push(finalTransformationString);\n    }\n    // console.log(childTransformations);\n    return childTransformations.join(\"/\");\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}