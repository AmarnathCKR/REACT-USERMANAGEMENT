{"ast":null,"code":"import { NamedTransformationAction } from \"./namedTransformation/NamedTransformationAction.js\";\n/**\n * Applies a pre-defined named transformation of the given name.\n * @memberOf Actions\n * @namespace NamedTransformation\n * @example\n * import {Cloudinary} from \"@cloudinary/url-gen\";\n * import {name} from \"@cloudinary/url-gen/actions/namedTransformation\";\n *\n * const yourCldInstance = new Cloudinary({cloud:{cloudName:'demo'}});\n * const image = yourCldInstance.image('woman');\n * image.namedTransformation(\n *  name('my_named_transformation'),\n * );\n */\n/**\n * @summary action\n * @description Applies a pre-defined named transformation of the given name.\n * @param {string} name Transformation name\n * @memberOf Actions.NamedTransformation\n * @return {Actions.NamedTransformation.NamedTransformationAction}\n */\nfunction name(name) {\n  return new NamedTransformationAction(name);\n}\nconst NamedTransformation = {\n  name\n};\nexport { NamedTransformation, name };","map":{"version":3,"names":["NamedTransformationAction","name","NamedTransformation"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/@cloudinary/transformation-builder-sdk/actions/namedTransformation.js"],"sourcesContent":["import { NamedTransformationAction } from \"./namedTransformation/NamedTransformationAction.js\";\n/**\n * Applies a pre-defined named transformation of the given name.\n * @memberOf Actions\n * @namespace NamedTransformation\n * @example\n * import {Cloudinary} from \"@cloudinary/url-gen\";\n * import {name} from \"@cloudinary/url-gen/actions/namedTransformation\";\n *\n * const yourCldInstance = new Cloudinary({cloud:{cloudName:'demo'}});\n * const image = yourCldInstance.image('woman');\n * image.namedTransformation(\n *  name('my_named_transformation'),\n * );\n */\n/**\n * @summary action\n * @description Applies a pre-defined named transformation of the given name.\n * @param {string} name Transformation name\n * @memberOf Actions.NamedTransformation\n * @return {Actions.NamedTransformation.NamedTransformationAction}\n */\nfunction name(name) {\n    return new NamedTransformationAction(name);\n}\nconst NamedTransformation = { name };\nexport { NamedTransformation, name };\n"],"mappings":"AAAA,SAASA,yBAAyB,QAAQ,oDAAoD;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,IAAI,CAACA,IAAI,EAAE;EAChB,OAAO,IAAID,yBAAyB,CAACC,IAAI,CAAC;AAC9C;AACA,MAAMC,mBAAmB,GAAG;EAAED;AAAK,CAAC;AACpC,SAASC,mBAAmB,EAAED,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}