{"ast":null,"code":"import { LeveledEffectAction } from \"../EffectActions/LeveledEffectAction.js\";\n/**\n * @description Delivers a video or animated GIF that contains additional loops of the video/GIF.\n * @extends LeveledEffectAction\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass LoopEffectAction extends LeveledEffectAction {\n  additionalIterations(value) {\n    this._actionModel.iterations = value;\n    const qualifierEffect = this.createEffectQualifier(this.effectType, value);\n    this.addQualifier(qualifierEffect);\n    return this;\n  }\n  static fromJson(actionModel) {\n    const {\n      actionType,\n      iterations\n    } = actionModel;\n    // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n    // This allows the inheriting classes to determine the class to be created\n    const result = new this(actionType, iterations);\n    return result;\n  }\n}\nexport { LoopEffectAction };","map":{"version":3,"names":["LeveledEffectAction","LoopEffectAction","additionalIterations","value","_actionModel","iterations","qualifierEffect","createEffectQualifier","effectType","addQualifier","fromJson","actionModel","actionType","result"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/@cloudinary/transformation-builder-sdk/actions/effect/leveled/Loop.js"],"sourcesContent":["import { LeveledEffectAction } from \"../EffectActions/LeveledEffectAction.js\";\n/**\n * @description Delivers a video or animated GIF that contains additional loops of the video/GIF.\n * @extends LeveledEffectAction\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass LoopEffectAction extends LeveledEffectAction {\n    additionalIterations(value) {\n        this._actionModel.iterations = value;\n        const qualifierEffect = this.createEffectQualifier(this.effectType, value);\n        this.addQualifier(qualifierEffect);\n        return this;\n    }\n    static fromJson(actionModel) {\n        const { actionType, iterations } = (actionModel);\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n        // This allows the inheriting classes to determine the class to be created\n        const result = new this(actionType, iterations);\n        return result;\n    }\n}\nexport { LoopEffectAction };\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,yCAAyC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,SAASD,mBAAmB,CAAC;EAC/CE,oBAAoB,CAACC,KAAK,EAAE;IACxB,IAAI,CAACC,YAAY,CAACC,UAAU,GAAGF,KAAK;IACpC,MAAMG,eAAe,GAAG,IAAI,CAACC,qBAAqB,CAAC,IAAI,CAACC,UAAU,EAAEL,KAAK,CAAC;IAC1E,IAAI,CAACM,YAAY,CAACH,eAAe,CAAC;IAClC,OAAO,IAAI;EACf;EACA,OAAOI,QAAQ,CAACC,WAAW,EAAE;IACzB,MAAM;MAAEC,UAAU;MAAEP;IAAW,CAAC,GAAIM,WAAY;IAChD;IACA;IACA,MAAME,MAAM,GAAG,IAAI,IAAI,CAACD,UAAU,EAAEP,UAAU,CAAC;IAC/C,OAAOQ,MAAM;EACjB;AACJ;AACA,SAASZ,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}