{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toString = require('../internals/to-string');\nvar stringSlice = uncurryThis(''.slice);\nvar max = Math.max;\nvar min = Math.min;\n\n// eslint-disable-next-line unicorn/prefer-string-slice -- required for testing\nvar FORCED = !''.substr || 'ab'.substr(-1) !== 'b';\n\n// `String.prototype.substr` method\n// https://tc39.es/ecma262/#sec-string.prototype.substr\n$({\n  target: 'String',\n  proto: true,\n  forced: FORCED\n}, {\n  substr: function substr(start, length) {\n    var that = toString(requireObjectCoercible(this));\n    var size = that.length;\n    var intStart = toIntegerOrInfinity(start);\n    var intLength, intEnd;\n    if (intStart === Infinity) intStart = 0;\n    if (intStart < 0) intStart = max(size + intStart, 0);\n    intLength = length === undefined ? size : toIntegerOrInfinity(length);\n    if (intLength <= 0 || intLength === Infinity) return '';\n    intEnd = min(intStart + intLength, size);\n    return intStart >= intEnd ? '' : stringSlice(that, intStart, intEnd);\n  }\n});","map":{"version":3,"names":["$","require","uncurryThis","requireObjectCoercible","toIntegerOrInfinity","toString","stringSlice","slice","max","Math","min","FORCED","substr","target","proto","forced","start","length","that","size","intStart","intLength","intEnd","Infinity","undefined"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/core-js/modules/es.string.substr.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toString = require('../internals/to-string');\n\nvar stringSlice = uncurryThis(''.slice);\nvar max = Math.max;\nvar min = Math.min;\n\n// eslint-disable-next-line unicorn/prefer-string-slice -- required for testing\nvar FORCED = !''.substr || 'ab'.substr(-1) !== 'b';\n\n// `String.prototype.substr` method\n// https://tc39.es/ecma262/#sec-string.prototype.substr\n$({ target: 'String', proto: true, forced: FORCED }, {\n  substr: function substr(start, length) {\n    var that = toString(requireObjectCoercible(this));\n    var size = that.length;\n    var intStart = toIntegerOrInfinity(start);\n    var intLength, intEnd;\n    if (intStart === Infinity) intStart = 0;\n    if (intStart < 0) intStart = max(size + intStart, 0);\n    intLength = length === undefined ? size : toIntegerOrInfinity(length);\n    if (intLength <= 0 || intLength === Infinity) return '';\n    intEnd = min(intStart + intLength, size);\n    return intStart >= intEnd ? '' : stringSlice(that, intStart, intEnd);\n  }\n});\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACtC,IAAIC,WAAW,GAAGD,OAAO,CAAC,oCAAoC,CAAC;AAC/D,IAAIE,sBAAsB,GAAGF,OAAO,CAAC,uCAAuC,CAAC;AAC7E,IAAIG,mBAAmB,GAAGH,OAAO,CAAC,qCAAqC,CAAC;AACxE,IAAII,QAAQ,GAAGJ,OAAO,CAAC,wBAAwB,CAAC;AAEhD,IAAIK,WAAW,GAAGJ,WAAW,CAAC,EAAE,CAACK,KAAK,CAAC;AACvC,IAAIC,GAAG,GAAGC,IAAI,CAACD,GAAG;AAClB,IAAIE,GAAG,GAAGD,IAAI,CAACC,GAAG;;AAElB;AACA,IAAIC,MAAM,GAAG,CAAC,EAAE,CAACC,MAAM,IAAI,IAAI,CAACA,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG;;AAElD;AACA;AACAZ,CAAC,CAAC;EAAEa,MAAM,EAAE,QAAQ;EAAEC,KAAK,EAAE,IAAI;EAAEC,MAAM,EAAEJ;AAAO,CAAC,EAAE;EACnDC,MAAM,EAAE,SAASA,MAAM,CAACI,KAAK,EAAEC,MAAM,EAAE;IACrC,IAAIC,IAAI,GAAGb,QAAQ,CAACF,sBAAsB,CAAC,IAAI,CAAC,CAAC;IACjD,IAAIgB,IAAI,GAAGD,IAAI,CAACD,MAAM;IACtB,IAAIG,QAAQ,GAAGhB,mBAAmB,CAACY,KAAK,CAAC;IACzC,IAAIK,SAAS,EAAEC,MAAM;IACrB,IAAIF,QAAQ,KAAKG,QAAQ,EAAEH,QAAQ,GAAG,CAAC;IACvC,IAAIA,QAAQ,GAAG,CAAC,EAAEA,QAAQ,GAAGZ,GAAG,CAACW,IAAI,GAAGC,QAAQ,EAAE,CAAC,CAAC;IACpDC,SAAS,GAAGJ,MAAM,KAAKO,SAAS,GAAGL,IAAI,GAAGf,mBAAmB,CAACa,MAAM,CAAC;IACrE,IAAII,SAAS,IAAI,CAAC,IAAIA,SAAS,KAAKE,QAAQ,EAAE,OAAO,EAAE;IACvDD,MAAM,GAAGZ,GAAG,CAACU,QAAQ,GAAGC,SAAS,EAAEF,IAAI,CAAC;IACxC,OAAOC,QAAQ,IAAIE,MAAM,GAAG,EAAE,GAAGhB,WAAW,CAACY,IAAI,EAAEE,QAAQ,EAAEE,MAAM,CAAC;EACtE;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}