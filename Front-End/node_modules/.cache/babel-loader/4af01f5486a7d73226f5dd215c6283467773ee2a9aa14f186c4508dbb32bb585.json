{"ast":null,"code":"import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { tiled } from \"../flag.js\";\nimport { noOverflow } from \"../flag.js\";\nimport { createGravityModel } from \"../../internal/models/createGravityModel.js\";\n/**\n * @description\n * Defines the position of a layer: overlay or underlay.</br>\n * Even though Position is technically an action qualifier, it implements exactly the same functionality as an action.</br>\n * This is true because Position is compounded of multiple qualifiers</br>\n *\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/layers|Applying overlays to images} | {@link https://cloudinary.com/documentation/video_layers|Applying overlays to videos}\n *\n * @extends {SDK.Actions}\n */\nclass PositionQualifier extends Action {\n  constructor() {\n    super();\n    this._actionModel = {};\n  }\n  gravity(gravityQualifier) {\n    this.addQualifier(gravityQualifier);\n    this._actionModel.gravity = createGravityModel(gravityQualifier);\n    return this;\n  }\n  /**\n   * @description Tiles the overlay across your image.\n   * <b>Learn more:</b> {@link https://cloudinary.com/documentation/layers#automatic_tiling|Tiling overlay}\n   */\n  tiled() {\n    this.addFlag(tiled());\n    this._actionModel.tiled = true;\n    return this;\n  }\n  /**\n   * TODO - This should accept a boolean value\n   * @description Prevents an image or text overlay from extending a delivered image canvas beyond the dimensions of the base image\n   * <b>Learn more:</b> {@link https://cloudinary.com/documentation/transformation_reference#fl_no_overflow|Overflow in overlays}\n   */\n  allowOverflow() {\n    let bool = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    if (bool === false) {\n      this.addFlag(noOverflow());\n    }\n    this._actionModel.allowOverflow = bool;\n    return this;\n  }\n  /**\n   * @description Set the X Offset\n   * @param {number | string} offsetX\n   * @return {this}\n   */\n  offsetX(offsetX) {\n    this.addQualifier(new Qualifier('x', offsetX));\n    this._actionModel.offsetX = offsetX;\n    return this;\n  }\n  /**\n   * @description Set the Y Offset\n   * @param {number | string} offsetY\n   * @return {this}\n   */\n  offsetY(offsetY) {\n    this.addQualifier(new Qualifier('y', offsetY));\n    this._actionModel.offsetY = offsetY;\n    return this;\n  }\n}\nexport { PositionQualifier };","map":{"version":3,"names":["Action","Qualifier","tiled","noOverflow","createGravityModel","PositionQualifier","constructor","_actionModel","gravity","gravityQualifier","addQualifier","addFlag","allowOverflow","bool","offsetX","offsetY"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/@cloudinary/transformation-builder-sdk/qualifiers/position/PositionQualifier.js"],"sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { tiled } from \"../flag.js\";\nimport { noOverflow } from \"../flag.js\";\nimport { createGravityModel } from \"../../internal/models/createGravityModel.js\";\n/**\n * @description\n * Defines the position of a layer: overlay or underlay.</br>\n * Even though Position is technically an action qualifier, it implements exactly the same functionality as an action.</br>\n * This is true because Position is compounded of multiple qualifiers</br>\n *\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/layers|Applying overlays to images} | {@link https://cloudinary.com/documentation/video_layers|Applying overlays to videos}\n *\n * @extends {SDK.Actions}\n */\nclass PositionQualifier extends Action {\n    constructor() {\n        super();\n        this._actionModel = {};\n    }\n    gravity(gravityQualifier) {\n        this.addQualifier(gravityQualifier);\n        this._actionModel.gravity = createGravityModel(gravityQualifier);\n        return this;\n    }\n    /**\n     * @description Tiles the overlay across your image.\n     * <b>Learn more:</b> {@link https://cloudinary.com/documentation/layers#automatic_tiling|Tiling overlay}\n     */\n    tiled() {\n        this.addFlag(tiled());\n        this._actionModel.tiled = true;\n        return this;\n    }\n    /**\n     * TODO - This should accept a boolean value\n     * @description Prevents an image or text overlay from extending a delivered image canvas beyond the dimensions of the base image\n     * <b>Learn more:</b> {@link https://cloudinary.com/documentation/transformation_reference#fl_no_overflow|Overflow in overlays}\n     */\n    allowOverflow(bool = true) {\n        if (bool === false) {\n            this.addFlag(noOverflow());\n        }\n        this._actionModel.allowOverflow = bool;\n        return this;\n    }\n    /**\n     * @description Set the X Offset\n     * @param {number | string} offsetX\n     * @return {this}\n     */\n    offsetX(offsetX) {\n        this.addQualifier(new Qualifier('x', offsetX));\n        this._actionModel.offsetX = offsetX;\n        return this;\n    }\n    /**\n     * @description Set the Y Offset\n     * @param {number | string} offsetY\n     * @return {this}\n     */\n    offsetY(offsetY) {\n        this.addQualifier(new Qualifier('y', offsetY));\n        this._actionModel.offsetY = offsetY;\n        return this;\n    }\n}\nexport { PositionQualifier };\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,0BAA0B;AACjD,SAASC,SAAS,QAAQ,uCAAuC;AACjE,SAASC,KAAK,QAAQ,YAAY;AAClC,SAASC,UAAU,QAAQ,YAAY;AACvC,SAASC,kBAAkB,QAAQ,6CAA6C;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,iBAAiB,SAASL,MAAM,CAAC;EACnCM,WAAW,GAAG;IACV,KAAK,EAAE;IACP,IAAI,CAACC,YAAY,GAAG,CAAC,CAAC;EAC1B;EACAC,OAAO,CAACC,gBAAgB,EAAE;IACtB,IAAI,CAACC,YAAY,CAACD,gBAAgB,CAAC;IACnC,IAAI,CAACF,YAAY,CAACC,OAAO,GAAGJ,kBAAkB,CAACK,gBAAgB,CAAC;IAChE,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;EACIP,KAAK,GAAG;IACJ,IAAI,CAACS,OAAO,CAACT,KAAK,EAAE,CAAC;IACrB,IAAI,CAACK,YAAY,CAACL,KAAK,GAAG,IAAI;IAC9B,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;EACIU,aAAa,GAAc;IAAA,IAAbC,IAAI,uEAAG,IAAI;IACrB,IAAIA,IAAI,KAAK,KAAK,EAAE;MAChB,IAAI,CAACF,OAAO,CAACR,UAAU,EAAE,CAAC;IAC9B;IACA,IAAI,CAACI,YAAY,CAACK,aAAa,GAAGC,IAAI;IACtC,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;EACIC,OAAO,CAACA,OAAO,EAAE;IACb,IAAI,CAACJ,YAAY,CAAC,IAAIT,SAAS,CAAC,GAAG,EAAEa,OAAO,CAAC,CAAC;IAC9C,IAAI,CAACP,YAAY,CAACO,OAAO,GAAGA,OAAO;IACnC,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;EACIC,OAAO,CAACA,OAAO,EAAE;IACb,IAAI,CAACL,YAAY,CAAC,IAAIT,SAAS,CAAC,GAAG,EAAEc,OAAO,CAAC,CAAC;IAC9C,IAAI,CAACR,YAAY,CAACQ,OAAO,GAAGA,OAAO;IACnC,OAAO,IAAI;EACf;AACJ;AACA,SAASV,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}