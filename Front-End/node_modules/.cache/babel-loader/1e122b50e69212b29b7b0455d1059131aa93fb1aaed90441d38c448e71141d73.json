{"ast":null,"code":"/**\n * @private\n * @description Adds left padding to a string with the desired substring the provided number of times\n * @example stringPad(foo, 3, 'a'') // -> aaafoo\n * @param {string} value\n * @param {number} _targetLength\n * @param {string} _padString\n */\nexport function stringPad(value, _targetLength, _padString) {\n  let targetLength = _targetLength >> 0; //truncate if number or convert non-number to 0;\n  let padString = String(typeof _padString !== 'undefined' ? _padString : ' ');\n  if (value.length > targetLength) {\n    return String(value);\n  } else {\n    targetLength = targetLength - value.length;\n    if (targetLength > padString.length) {\n      padString += repeatStringNumTimes(padString, targetLength / padString.length);\n    }\n    return padString.slice(0, targetLength) + String(value);\n  }\n}\n/**\n * @description Repeat a string multiple times, cross-browser-safe alternative to string.repeat()\n * @param string\n * @param _times\n */\nfunction repeatStringNumTimes(string, _times) {\n  let times = _times;\n  let repeatedString = \"\";\n  while (times > 0) {\n    repeatedString += string;\n    times--;\n  }\n  return repeatedString;\n}","map":{"version":3,"names":["stringPad","value","_targetLength","_padString","targetLength","padString","String","length","repeatStringNumTimes","slice","string","_times","times","repeatedString"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/@cloudinary/url-gen/sdkAnalytics/stringPad.js"],"sourcesContent":["/**\n * @private\n * @description Adds left padding to a string with the desired substring the provided number of times\n * @example stringPad(foo, 3, 'a'') // -> aaafoo\n * @param {string} value\n * @param {number} _targetLength\n * @param {string} _padString\n */\nexport function stringPad(value, _targetLength, _padString) {\n    let targetLength = _targetLength >> 0; //truncate if number or convert non-number to 0;\n    let padString = String((typeof _padString !== 'undefined' ? _padString : ' '));\n    if (value.length > targetLength) {\n        return String(value);\n    }\n    else {\n        targetLength = targetLength - value.length;\n        if (targetLength > padString.length) {\n            padString += repeatStringNumTimes(padString, targetLength / padString.length);\n        }\n        return padString.slice(0, targetLength) + String(value);\n    }\n}\n/**\n * @description Repeat a string multiple times, cross-browser-safe alternative to string.repeat()\n * @param string\n * @param _times\n */\nfunction repeatStringNumTimes(string, _times) {\n    let times = _times;\n    let repeatedString = \"\";\n    while (times > 0) {\n        repeatedString += string;\n        times--;\n    }\n    return repeatedString;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,SAAS,CAACC,KAAK,EAAEC,aAAa,EAAEC,UAAU,EAAE;EACxD,IAAIC,YAAY,GAAGF,aAAa,IAAI,CAAC,CAAC,CAAC;EACvC,IAAIG,SAAS,GAAGC,MAAM,CAAE,OAAOH,UAAU,KAAK,WAAW,GAAGA,UAAU,GAAG,GAAG,CAAE;EAC9E,IAAIF,KAAK,CAACM,MAAM,GAAGH,YAAY,EAAE;IAC7B,OAAOE,MAAM,CAACL,KAAK,CAAC;EACxB,CAAC,MACI;IACDG,YAAY,GAAGA,YAAY,GAAGH,KAAK,CAACM,MAAM;IAC1C,IAAIH,YAAY,GAAGC,SAAS,CAACE,MAAM,EAAE;MACjCF,SAAS,IAAIG,oBAAoB,CAACH,SAAS,EAAED,YAAY,GAAGC,SAAS,CAACE,MAAM,CAAC;IACjF;IACA,OAAOF,SAAS,CAACI,KAAK,CAAC,CAAC,EAAEL,YAAY,CAAC,GAAGE,MAAM,CAACL,KAAK,CAAC;EAC3D;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,SAASO,oBAAoB,CAACE,MAAM,EAAEC,MAAM,EAAE;EAC1C,IAAIC,KAAK,GAAGD,MAAM;EAClB,IAAIE,cAAc,GAAG,EAAE;EACvB,OAAOD,KAAK,GAAG,CAAC,EAAE;IACdC,cAAc,IAAIH,MAAM;IACxBE,KAAK,EAAE;EACX;EACA,OAAOC,cAAc;AACzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}