{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar thisNumberValue = require('../internals/this-number-value');\nvar $repeat = require('../internals/string-repeat');\nvar fails = require('../internals/fails');\nvar $RangeError = RangeError;\nvar $String = String;\nvar floor = Math.floor;\nvar repeat = uncurryThis($repeat);\nvar stringSlice = uncurryThis(''.slice);\nvar nativeToFixed = uncurryThis(1.0.toFixed);\nvar pow = function (x, n, acc) {\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n};\nvar log = function (x) {\n  var n = 0;\n  var x2 = x;\n  while (x2 >= 4096) {\n    n += 12;\n    x2 /= 4096;\n  }\n  while (x2 >= 2) {\n    n += 1;\n    x2 /= 2;\n  }\n  return n;\n};\nvar multiply = function (data, n, c) {\n  var index = -1;\n  var c2 = c;\n  while (++index < 6) {\n    c2 += n * data[index];\n    data[index] = c2 % 1e7;\n    c2 = floor(c2 / 1e7);\n  }\n};\nvar divide = function (data, n) {\n  var index = 6;\n  var c = 0;\n  while (--index >= 0) {\n    c += data[index];\n    data[index] = floor(c / n);\n    c = c % n * 1e7;\n  }\n};\nvar dataToString = function (data) {\n  var index = 6;\n  var s = '';\n  while (--index >= 0) {\n    if (s !== '' || index === 0 || data[index] !== 0) {\n      var t = $String(data[index]);\n      s = s === '' ? t : s + repeat('0', 7 - t.length) + t;\n    }\n  }\n  return s;\n};\nvar FORCED = fails(function () {\n  return nativeToFixed(0.00008, 3) !== '0.000' || nativeToFixed(0.9, 0) !== '1' || nativeToFixed(1.255, 2) !== '1.25' || nativeToFixed(1000000000000000128.0, 0) !== '1000000000000000128';\n}) || !fails(function () {\n  // V8 ~ Android 4.3-\n  nativeToFixed({});\n});\n\n// `Number.prototype.toFixed` method\n// https://tc39.es/ecma262/#sec-number.prototype.tofixed\n$({\n  target: 'Number',\n  proto: true,\n  forced: FORCED\n}, {\n  toFixed: function toFixed(fractionDigits) {\n    var number = thisNumberValue(this);\n    var fractDigits = toIntegerOrInfinity(fractionDigits);\n    var data = [0, 0, 0, 0, 0, 0];\n    var sign = '';\n    var result = '0';\n    var e, z, j, k;\n\n    // TODO: ES2018 increased the maximum number of fraction digits to 100, need to improve the implementation\n    if (fractDigits < 0 || fractDigits > 20) throw $RangeError('Incorrect fraction digits');\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (number != number) return 'NaN';\n    if (number <= -1e21 || number >= 1e21) return $String(number);\n    if (number < 0) {\n      sign = '-';\n      number = -number;\n    }\n    if (number > 1e-21) {\n      e = log(number * pow(2, 69, 1)) - 69;\n      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);\n      z *= 0x10000000000000;\n      e = 52 - e;\n      if (e > 0) {\n        multiply(data, 0, z);\n        j = fractDigits;\n        while (j >= 7) {\n          multiply(data, 1e7, 0);\n          j -= 7;\n        }\n        multiply(data, pow(10, j, 1), 0);\n        j = e - 1;\n        while (j >= 23) {\n          divide(data, 1 << 23);\n          j -= 23;\n        }\n        divide(data, 1 << j);\n        multiply(data, 1, 1);\n        divide(data, 2);\n        result = dataToString(data);\n      } else {\n        multiply(data, 0, z);\n        multiply(data, 1 << -e, 0);\n        result = dataToString(data) + repeat('0', fractDigits);\n      }\n    }\n    if (fractDigits > 0) {\n      k = result.length;\n      result = sign + (k <= fractDigits ? '0.' + repeat('0', fractDigits - k) + result : stringSlice(result, 0, k - fractDigits) + '.' + stringSlice(result, k - fractDigits));\n    } else {\n      result = sign + result;\n    }\n    return result;\n  }\n});","map":{"version":3,"names":["$","require","uncurryThis","toIntegerOrInfinity","thisNumberValue","$repeat","fails","$RangeError","RangeError","$String","String","floor","Math","repeat","stringSlice","slice","nativeToFixed","toFixed","pow","x","n","acc","log","x2","multiply","data","c","index","c2","divide","dataToString","s","t","length","FORCED","target","proto","forced","fractionDigits","number","fractDigits","sign","result","e","z","j","k"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/core-js/modules/es.number.to-fixed.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar thisNumberValue = require('../internals/this-number-value');\nvar $repeat = require('../internals/string-repeat');\nvar fails = require('../internals/fails');\n\nvar $RangeError = RangeError;\nvar $String = String;\nvar floor = Math.floor;\nvar repeat = uncurryThis($repeat);\nvar stringSlice = uncurryThis(''.slice);\nvar nativeToFixed = uncurryThis(1.0.toFixed);\n\nvar pow = function (x, n, acc) {\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n};\n\nvar log = function (x) {\n  var n = 0;\n  var x2 = x;\n  while (x2 >= 4096) {\n    n += 12;\n    x2 /= 4096;\n  }\n  while (x2 >= 2) {\n    n += 1;\n    x2 /= 2;\n  } return n;\n};\n\nvar multiply = function (data, n, c) {\n  var index = -1;\n  var c2 = c;\n  while (++index < 6) {\n    c2 += n * data[index];\n    data[index] = c2 % 1e7;\n    c2 = floor(c2 / 1e7);\n  }\n};\n\nvar divide = function (data, n) {\n  var index = 6;\n  var c = 0;\n  while (--index >= 0) {\n    c += data[index];\n    data[index] = floor(c / n);\n    c = (c % n) * 1e7;\n  }\n};\n\nvar dataToString = function (data) {\n  var index = 6;\n  var s = '';\n  while (--index >= 0) {\n    if (s !== '' || index === 0 || data[index] !== 0) {\n      var t = $String(data[index]);\n      s = s === '' ? t : s + repeat('0', 7 - t.length) + t;\n    }\n  } return s;\n};\n\nvar FORCED = fails(function () {\n  return nativeToFixed(0.00008, 3) !== '0.000' ||\n    nativeToFixed(0.9, 0) !== '1' ||\n    nativeToFixed(1.255, 2) !== '1.25' ||\n    nativeToFixed(1000000000000000128.0, 0) !== '1000000000000000128';\n}) || !fails(function () {\n  // V8 ~ Android 4.3-\n  nativeToFixed({});\n});\n\n// `Number.prototype.toFixed` method\n// https://tc39.es/ecma262/#sec-number.prototype.tofixed\n$({ target: 'Number', proto: true, forced: FORCED }, {\n  toFixed: function toFixed(fractionDigits) {\n    var number = thisNumberValue(this);\n    var fractDigits = toIntegerOrInfinity(fractionDigits);\n    var data = [0, 0, 0, 0, 0, 0];\n    var sign = '';\n    var result = '0';\n    var e, z, j, k;\n\n    // TODO: ES2018 increased the maximum number of fraction digits to 100, need to improve the implementation\n    if (fractDigits < 0 || fractDigits > 20) throw $RangeError('Incorrect fraction digits');\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (number != number) return 'NaN';\n    if (number <= -1e21 || number >= 1e21) return $String(number);\n    if (number < 0) {\n      sign = '-';\n      number = -number;\n    }\n    if (number > 1e-21) {\n      e = log(number * pow(2, 69, 1)) - 69;\n      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);\n      z *= 0x10000000000000;\n      e = 52 - e;\n      if (e > 0) {\n        multiply(data, 0, z);\n        j = fractDigits;\n        while (j >= 7) {\n          multiply(data, 1e7, 0);\n          j -= 7;\n        }\n        multiply(data, pow(10, j, 1), 0);\n        j = e - 1;\n        while (j >= 23) {\n          divide(data, 1 << 23);\n          j -= 23;\n        }\n        divide(data, 1 << j);\n        multiply(data, 1, 1);\n        divide(data, 2);\n        result = dataToString(data);\n      } else {\n        multiply(data, 0, z);\n        multiply(data, 1 << -e, 0);\n        result = dataToString(data) + repeat('0', fractDigits);\n      }\n    }\n    if (fractDigits > 0) {\n      k = result.length;\n      result = sign + (k <= fractDigits\n        ? '0.' + repeat('0', fractDigits - k) + result\n        : stringSlice(result, 0, k - fractDigits) + '.' + stringSlice(result, k - fractDigits));\n    } else {\n      result = sign + result;\n    } return result;\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}