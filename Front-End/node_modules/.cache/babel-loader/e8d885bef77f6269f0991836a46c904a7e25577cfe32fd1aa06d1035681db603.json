{"ast":null,"code":"import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport FPSRangeAction from \"./FPSRangeAction.js\";\n/**\n * @extends SDK.Action\n * @memberOf Actions.Transcode\n * @description Controls the FPS (Frames Per Second) to ensure that video (even when optimized)\n * is delivered with\n * an expected FPS level (helps with sync to audio).\n *\n * <b>Learn more</b>: {@link https://cloudinary.com/documentation/video_transformation_reference#video_settings|Video settings}\n * @see Visit {@link Actions.Transcode|Transcode} for an example\n */\nclass FPSAction extends Action {\n  constructor(from) {\n    super();\n    this._actionModel = {\n      actionType: 'fps'\n    };\n    this._actionModel.fps = from;\n    this.addQualifier(new Qualifier('fps', from));\n  }\n  static fromJson(actionModel) {\n    const {\n      fps\n    } = actionModel;\n    let result;\n    if (typeof fps === 'object') {\n      //@ts-ignore\n      result = new FPSRangeAction(fps.from, fps.to);\n    } else {\n      result = new this(fps);\n    }\n    // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n    // This allows the inheriting classes to determine the class to be created\n    return result;\n  }\n}\nexport default FPSAction;","map":{"version":3,"names":["Action","Qualifier","FPSRangeAction","FPSAction","constructor","from","_actionModel","actionType","fps","addQualifier","fromJson","actionModel","result","to"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/@cloudinary/transformation-builder-sdk/actions/transcode/FPSAction.js"],"sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport FPSRangeAction from \"./FPSRangeAction.js\";\n/**\n * @extends SDK.Action\n * @memberOf Actions.Transcode\n * @description Controls the FPS (Frames Per Second) to ensure that video (even when optimized)\n * is delivered with\n * an expected FPS level (helps with sync to audio).\n *\n * <b>Learn more</b>: {@link https://cloudinary.com/documentation/video_transformation_reference#video_settings|Video settings}\n * @see Visit {@link Actions.Transcode|Transcode} for an example\n */\nclass FPSAction extends Action {\n    constructor(from) {\n        super();\n        this._actionModel = { actionType: 'fps' };\n        this._actionModel.fps = from;\n        this.addQualifier(new Qualifier('fps', from));\n    }\n    static fromJson(actionModel) {\n        const { fps } = actionModel;\n        let result;\n        if (typeof fps === 'object') {\n            //@ts-ignore\n            result = new FPSRangeAction(fps.from, fps.to);\n        }\n        else {\n            result = new this(fps);\n        }\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n        // This allows the inheriting classes to determine the class to be created\n        return result;\n    }\n}\nexport default FPSAction;\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,0BAA0B;AACjD,SAASC,SAAS,QAAQ,uCAAuC;AACjE,OAAOC,cAAc,MAAM,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,SAAS,SAASH,MAAM,CAAC;EAC3BI,WAAW,CAACC,IAAI,EAAE;IACd,KAAK,EAAE;IACP,IAAI,CAACC,YAAY,GAAG;MAAEC,UAAU,EAAE;IAAM,CAAC;IACzC,IAAI,CAACD,YAAY,CAACE,GAAG,GAAGH,IAAI;IAC5B,IAAI,CAACI,YAAY,CAAC,IAAIR,SAAS,CAAC,KAAK,EAAEI,IAAI,CAAC,CAAC;EACjD;EACA,OAAOK,QAAQ,CAACC,WAAW,EAAE;IACzB,MAAM;MAAEH;IAAI,CAAC,GAAGG,WAAW;IAC3B,IAAIC,MAAM;IACV,IAAI,OAAOJ,GAAG,KAAK,QAAQ,EAAE;MACzB;MACAI,MAAM,GAAG,IAAIV,cAAc,CAACM,GAAG,CAACH,IAAI,EAAEG,GAAG,CAACK,EAAE,CAAC;IACjD,CAAC,MACI;MACDD,MAAM,GAAG,IAAI,IAAI,CAACJ,GAAG,CAAC;IAC1B;IACA;IACA;IACA,OAAOI,MAAM;EACjB;AACJ;AACA,eAAeT,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}