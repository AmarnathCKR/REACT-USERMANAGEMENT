{"ast":null,"code":"import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\n/**\n * @extends SDK.Action\n * @memberOf Actions.Transcode\n * @description Controls the range of acceptable FPS (Frames Per Second) to ensure that video (even when optimized)\n * is delivered with\n * an expected FPS level (helps with sync to audio).\n *\n * <b>Learn more</b>: {@link https://cloudinary.com/documentation/video_transformation_reference#video_settings|Video settings}\n * @see Visit {@link Actions.Transcode|Transcode} for an example\n */\nclass FPSRangeAction extends Action {\n  constructor(from, to) {\n    super();\n    this._actionModel = {};\n    this.from = from;\n    this._actionModel = {\n      actionType: 'fps',\n      fps: {\n        from\n      }\n    };\n    if (to != null) {\n      this.to = to;\n      this._actionModel.fps.to = to;\n    }\n  }\n  prepareQualifiers() {\n    let qualifierValue;\n    if (this.from && this.to) {\n      qualifierValue = new QualifierValue(`${this.from}-${this.to}`);\n    } else {\n      qualifierValue = new QualifierValue(`${this.from}-`);\n    }\n    this.addQualifier(new Qualifier('fps', qualifierValue));\n    return this;\n  }\n}\nexport default FPSRangeAction;","map":{"version":3,"names":["Action","Qualifier","QualifierValue","FPSRangeAction","constructor","from","to","_actionModel","actionType","fps","prepareQualifiers","qualifierValue","addQualifier"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/@cloudinary/transformation-builder-sdk/actions/transcode/FPSRangeAction.js"],"sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\n/**\n * @extends SDK.Action\n * @memberOf Actions.Transcode\n * @description Controls the range of acceptable FPS (Frames Per Second) to ensure that video (even when optimized)\n * is delivered with\n * an expected FPS level (helps with sync to audio).\n *\n * <b>Learn more</b>: {@link https://cloudinary.com/documentation/video_transformation_reference#video_settings|Video settings}\n * @see Visit {@link Actions.Transcode|Transcode} for an example\n */\nclass FPSRangeAction extends Action {\n    constructor(from, to) {\n        super();\n        this._actionModel = {};\n        this.from = from;\n        this._actionModel = {\n            actionType: 'fps',\n            fps: { from }\n        };\n        if (to != null) {\n            this.to = to;\n            this._actionModel.fps.to = to;\n        }\n    }\n    prepareQualifiers() {\n        let qualifierValue;\n        if (this.from && this.to) {\n            qualifierValue = new QualifierValue(`${this.from}-${this.to}`);\n        }\n        else {\n            qualifierValue = new QualifierValue(`${this.from}-`);\n        }\n        this.addQualifier(new Qualifier('fps', qualifierValue));\n        return this;\n    }\n}\nexport default FPSRangeAction;\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,0BAA0B;AACjD,SAASC,SAAS,QAAQ,uCAAuC;AACjE,SAASC,cAAc,QAAQ,4CAA4C;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,cAAc,SAASH,MAAM,CAAC;EAChCI,WAAW,CAACC,IAAI,EAAEC,EAAE,EAAE;IAClB,KAAK,EAAE;IACP,IAAI,CAACC,YAAY,GAAG,CAAC,CAAC;IACtB,IAAI,CAACF,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACE,YAAY,GAAG;MAChBC,UAAU,EAAE,KAAK;MACjBC,GAAG,EAAE;QAAEJ;MAAK;IAChB,CAAC;IACD,IAAIC,EAAE,IAAI,IAAI,EAAE;MACZ,IAAI,CAACA,EAAE,GAAGA,EAAE;MACZ,IAAI,CAACC,YAAY,CAACE,GAAG,CAACH,EAAE,GAAGA,EAAE;IACjC;EACJ;EACAI,iBAAiB,GAAG;IAChB,IAAIC,cAAc;IAClB,IAAI,IAAI,CAACN,IAAI,IAAI,IAAI,CAACC,EAAE,EAAE;MACtBK,cAAc,GAAG,IAAIT,cAAc,CAAE,GAAE,IAAI,CAACG,IAAK,IAAG,IAAI,CAACC,EAAG,EAAC,CAAC;IAClE,CAAC,MACI;MACDK,cAAc,GAAG,IAAIT,cAAc,CAAE,GAAE,IAAI,CAACG,IAAK,GAAE,CAAC;IACxD;IACA,IAAI,CAACO,YAAY,CAAC,IAAIX,SAAS,CAAC,KAAK,EAAEU,cAAc,CAAC,CAAC;IACvD,OAAO,IAAI;EACf;AACJ;AACA,eAAeR,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}