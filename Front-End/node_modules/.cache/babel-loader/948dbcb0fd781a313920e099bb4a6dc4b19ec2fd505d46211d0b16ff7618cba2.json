{"ast":null,"code":"import { Action } from \"../../internal/Action.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @description Adjusts the fill light and blends the result with the original image.\n * @memberOf Actions.Adjust\n * @extends SDK.Action\n */\nclass FillLightAction extends Action {\n  constructor() {\n    super();\n  }\n  /**\n   * @description Sets the level of adjustment\n   * @param {number} lvl How much to blend the adjusted fill light, where 0 means only use the original and 100 means only use the adjusted fill light result. (Range: 0 to 100, Server default: 100)\n   */\n  blend(blend) {\n    this.lvl = blend;\n    return this;\n  }\n  /**\n   * @description Sets the level of the bias\n   * @param {number} biasLvl The bias to apply to the fill light effect (Range: -100 to 100, Server default: 0).\n   */\n  bias(biasLvl) {\n    this.biasLvl = biasLvl;\n    return this;\n  }\n  prepareQualifiers() {\n    const qualifierValue = new QualifierValue(['fill_light', this.lvl, this.biasLvl]).setDelimiter(':');\n    this.addQualifier(new Qualifier('e', qualifierValue));\n    return this;\n  }\n}\nexport { FillLightAction };","map":{"version":3,"names":["Action","QualifierValue","Qualifier","FillLightAction","constructor","blend","lvl","bias","biasLvl","prepareQualifiers","qualifierValue","setDelimiter","addQualifier"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/@cloudinary/transformation-builder-sdk/actions/adjust/FillLightAction.js"],"sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @description Adjusts the fill light and blends the result with the original image.\n * @memberOf Actions.Adjust\n * @extends SDK.Action\n */\nclass FillLightAction extends Action {\n    constructor() {\n        super();\n    }\n    /**\n     * @description Sets the level of adjustment\n     * @param {number} lvl How much to blend the adjusted fill light, where 0 means only use the original and 100 means only use the adjusted fill light result. (Range: 0 to 100, Server default: 100)\n     */\n    blend(blend) {\n        this.lvl = blend;\n        return this;\n    }\n    /**\n     * @description Sets the level of the bias\n     * @param {number} biasLvl The bias to apply to the fill light effect (Range: -100 to 100, Server default: 0).\n     */\n    bias(biasLvl) {\n        this.biasLvl = biasLvl;\n        return this;\n    }\n    prepareQualifiers() {\n        const qualifierValue = new QualifierValue(['fill_light', this.lvl, this.biasLvl]).setDelimiter(':');\n        this.addQualifier(new Qualifier('e', qualifierValue));\n        return this;\n    }\n}\nexport { FillLightAction };\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,0BAA0B;AACjD,SAASC,cAAc,QAAQ,4CAA4C;AAC3E,SAASC,SAAS,QAAQ,uCAAuC;AACjE;AACA;AACA;AACA;AACA;AACA,MAAMC,eAAe,SAASH,MAAM,CAAC;EACjCI,WAAW,GAAG;IACV,KAAK,EAAE;EACX;EACA;AACJ;AACA;AACA;EACIC,KAAK,CAACA,KAAK,EAAE;IACT,IAAI,CAACC,GAAG,GAAGD,KAAK;IAChB,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;EACIE,IAAI,CAACC,OAAO,EAAE;IACV,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,OAAO,IAAI;EACf;EACAC,iBAAiB,GAAG;IAChB,MAAMC,cAAc,GAAG,IAAIT,cAAc,CAAC,CAAC,YAAY,EAAE,IAAI,CAACK,GAAG,EAAE,IAAI,CAACE,OAAO,CAAC,CAAC,CAACG,YAAY,CAAC,GAAG,CAAC;IACnG,IAAI,CAACC,YAAY,CAAC,IAAIV,SAAS,CAAC,GAAG,EAAEQ,cAAc,CAAC,CAAC;IACrD,OAAO,IAAI;EACf;AACJ;AACA,SAASP,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}