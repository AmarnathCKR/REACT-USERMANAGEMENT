{"ast":null,"code":"/**\n * @description Contains functions to select the mode when using a progressive format.\n * <b>Learn more</b>: {@link https://cloudinary.com/documentation/transformation_reference#fl_progressive|Progressive modes}\n * @memberOf Qualifiers\n * @namespace Progressive\n * @example\n * import {Cloudinary} from \"@cloudinary/url-gen\";\n * import {format} from \"@cloudinary/url-gen/actions/delivery\";\n * import {jpg} from \"@cloudinary/url-gen/qualifiers/format\";\n * import {steep} from \"@cloudinary/url-gen/qualifiers/progressive\";\n *\n * const yourCldInstance = new Cloudinary({cloud: {cloudName: 'demo'}});\n * const image = yourCldInstance.image('woman');\n * image.delivery(format(jpg()).progressive(steep()))\n */\nimport { FlagQualifier } from \"./flag/FlagQualifier.js\";\nclass ProgressiveQualifier extends FlagQualifier {\n  constructor(mode) {\n    super('progressive', mode);\n  }\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\nfunction none() {\n  return new ProgressiveQualifier('none');\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\nfunction semi() {\n  return new ProgressiveQualifier('semi');\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\nfunction steep() {\n  return new ProgressiveQualifier('steep');\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\nfunction progressive() {\n  return new ProgressiveQualifier();\n}\nconst Progressive = {\n  semi,\n  none,\n  steep,\n  progressive,\n  ProgressiveQualifier\n};\nexport { Progressive, semi, none, steep, progressive, ProgressiveQualifier };","map":{"version":3,"names":["FlagQualifier","ProgressiveQualifier","constructor","mode","none","semi","steep","progressive","Progressive"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/@cloudinary/transformation-builder-sdk/qualifiers/progressive.js"],"sourcesContent":["/**\n * @description Contains functions to select the mode when using a progressive format.\n * <b>Learn more</b>: {@link https://cloudinary.com/documentation/transformation_reference#fl_progressive|Progressive modes}\n * @memberOf Qualifiers\n * @namespace Progressive\n * @example\n * import {Cloudinary} from \"@cloudinary/url-gen\";\n * import {format} from \"@cloudinary/url-gen/actions/delivery\";\n * import {jpg} from \"@cloudinary/url-gen/qualifiers/format\";\n * import {steep} from \"@cloudinary/url-gen/qualifiers/progressive\";\n *\n * const yourCldInstance = new Cloudinary({cloud: {cloudName: 'demo'}});\n * const image = yourCldInstance.image('woman');\n * image.delivery(format(jpg()).progressive(steep()))\n */\nimport { FlagQualifier } from \"./flag/FlagQualifier.js\";\nclass ProgressiveQualifier extends FlagQualifier {\n    constructor(mode) {\n        super('progressive', mode);\n    }\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\nfunction none() {\n    return new ProgressiveQualifier('none');\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\nfunction semi() {\n    return new ProgressiveQualifier('semi');\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\nfunction steep() {\n    return new ProgressiveQualifier('steep');\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\nfunction progressive() {\n    return new ProgressiveQualifier();\n}\nconst Progressive = {\n    semi,\n    none,\n    steep,\n    progressive,\n    ProgressiveQualifier\n};\nexport { Progressive, semi, none, steep, progressive, ProgressiveQualifier };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAa,QAAQ,yBAAyB;AACvD,MAAMC,oBAAoB,SAASD,aAAa,CAAC;EAC7CE,WAAW,CAACC,IAAI,EAAE;IACd,KAAK,CAAC,aAAa,EAAEA,IAAI,CAAC;EAC9B;AACJ;AACA;AACA;AACA;AACA,SAASC,IAAI,GAAG;EACZ,OAAO,IAAIH,oBAAoB,CAAC,MAAM,CAAC;AAC3C;AACA;AACA;AACA;AACA,SAASI,IAAI,GAAG;EACZ,OAAO,IAAIJ,oBAAoB,CAAC,MAAM,CAAC;AAC3C;AACA;AACA;AACA;AACA,SAASK,KAAK,GAAG;EACb,OAAO,IAAIL,oBAAoB,CAAC,OAAO,CAAC;AAC5C;AACA;AACA;AACA;AACA,SAASM,WAAW,GAAG;EACnB,OAAO,IAAIN,oBAAoB,EAAE;AACrC;AACA,MAAMO,WAAW,GAAG;EAChBH,IAAI;EACJD,IAAI;EACJE,KAAK;EACLC,WAAW;EACXN;AACJ,CAAC;AACD,SAASO,WAAW,EAAEH,IAAI,EAAED,IAAI,EAAEE,KAAK,EAAEC,WAAW,EAAEN,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}