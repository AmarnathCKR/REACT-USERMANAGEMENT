{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar path = require('../internals/path');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isForced = require('../internals/is-forced');\nvar hasOwn = require('../internals/has-own-property');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar isSymbol = require('../internals/is-symbol');\nvar toPrimitive = require('../internals/to-primitive');\nvar fails = require('../internals/fails');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar thisNumberValue = require('../internals/this-number-value');\nvar trim = require('../internals/string-trim').trim;\nvar NUMBER = 'Number';\nvar NativeNumber = global[NUMBER];\nvar PureNumberNamespace = path[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\nvar TypeError = global.TypeError;\nvar stringSlice = uncurryThis(''.slice);\nvar charCodeAt = uncurryThis(''.charCodeAt);\n\n// `ToNumeric` abstract operation\n// https://tc39.es/ecma262/#sec-tonumeric\nvar toNumeric = function (value) {\n  var primValue = toPrimitive(value, 'number');\n  return typeof primValue == 'bigint' ? primValue : toNumber(primValue);\n};\n\n// `ToNumber` abstract operation\n// https://tc39.es/ecma262/#sec-tonumber\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, 'number');\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (isSymbol(it)) throw TypeError('Cannot convert a Symbol value to a number');\n  if (typeof it == 'string' && it.length > 2) {\n    it = trim(it);\n    first = charCodeAt(it, 0);\n    if (first === 43 || first === 45) {\n      third = charCodeAt(it, 2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (charCodeAt(it, 1)) {\n        case 66:\n        case 98:\n          radix = 2;\n          maxCode = 49;\n          break;\n        // fast equal of /^0b[01]+$/i\n        case 79:\n        case 111:\n          radix = 8;\n          maxCode = 55;\n          break;\n        // fast equal of /^0o[0-7]+$/i\n        default:\n          return +it;\n      }\n      digits = stringSlice(it, 2);\n      length = digits.length;\n      for (index = 0; index < length; index++) {\n        code = charCodeAt(digits, index);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      }\n      return parseInt(digits, radix);\n    }\n  }\n  return +it;\n};\nvar FORCED = isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'));\nvar calledWithNew = function (dummy) {\n  // includes check on 1..constructor(foo) case\n  return isPrototypeOf(NumberPrototype, dummy) && fails(function () {\n    thisNumberValue(dummy);\n  });\n};\n\n// `Number` constructor\n// https://tc39.es/ecma262/#sec-number-constructor\nvar NumberWrapper = function Number(value) {\n  var n = arguments.length < 1 ? 0 : NativeNumber(toNumeric(value));\n  return calledWithNew(this) ? inheritIfRequired(Object(n), this, NumberWrapper) : n;\n};\nNumberWrapper.prototype = NumberPrototype;\nif (FORCED && !IS_PURE) NumberPrototype.constructor = NumberWrapper;\n$({\n  global: true,\n  constructor: true,\n  wrap: true,\n  forced: FORCED\n}, {\n  Number: NumberWrapper\n});\n\n// Use `internal/copy-constructor-properties` helper in `core-js@4`\nvar copyConstructorProperties = function (target, source) {\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(source) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES2015 (in case, if modules with ES2015 Number statics required before):\n    'EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,' +\n    // ESNext\n    'fromString,range').split(','), j = 0, key; keys.length > j; j++) {\n    if (hasOwn(source, key = keys[j]) && !hasOwn(target, key)) {\n      defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n    }\n  }\n};\nif (IS_PURE && PureNumberNamespace) copyConstructorProperties(path[NUMBER], PureNumberNamespace);\nif (FORCED || IS_PURE) copyConstructorProperties(path[NUMBER], NativeNumber);","map":{"version":3,"names":["$","require","IS_PURE","DESCRIPTORS","global","path","uncurryThis","isForced","hasOwn","inheritIfRequired","isPrototypeOf","isSymbol","toPrimitive","fails","getOwnPropertyNames","f","getOwnPropertyDescriptor","defineProperty","thisNumberValue","trim","NUMBER","NativeNumber","PureNumberNamespace","NumberPrototype","prototype","TypeError","stringSlice","slice","charCodeAt","toNumeric","value","primValue","toNumber","argument","it","first","third","radix","maxCode","digits","length","index","code","NaN","parseInt","FORCED","calledWithNew","dummy","NumberWrapper","Number","n","arguments","Object","constructor","wrap","forced","copyConstructorProperties","target","source","keys","split","j","key"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/core-js/modules/es.number.constructor.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar path = require('../internals/path');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isForced = require('../internals/is-forced');\nvar hasOwn = require('../internals/has-own-property');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar isSymbol = require('../internals/is-symbol');\nvar toPrimitive = require('../internals/to-primitive');\nvar fails = require('../internals/fails');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar thisNumberValue = require('../internals/this-number-value');\nvar trim = require('../internals/string-trim').trim;\n\nvar NUMBER = 'Number';\nvar NativeNumber = global[NUMBER];\nvar PureNumberNamespace = path[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\nvar TypeError = global.TypeError;\nvar stringSlice = uncurryThis(''.slice);\nvar charCodeAt = uncurryThis(''.charCodeAt);\n\n// `ToNumeric` abstract operation\n// https://tc39.es/ecma262/#sec-tonumeric\nvar toNumeric = function (value) {\n  var primValue = toPrimitive(value, 'number');\n  return typeof primValue == 'bigint' ? primValue : toNumber(primValue);\n};\n\n// `ToNumber` abstract operation\n// https://tc39.es/ecma262/#sec-tonumber\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, 'number');\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (isSymbol(it)) throw TypeError('Cannot convert a Symbol value to a number');\n  if (typeof it == 'string' && it.length > 2) {\n    it = trim(it);\n    first = charCodeAt(it, 0);\n    if (first === 43 || first === 45) {\n      third = charCodeAt(it, 2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (charCodeAt(it, 1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i\n        default: return +it;\n      }\n      digits = stringSlice(it, 2);\n      length = digits.length;\n      for (index = 0; index < length; index++) {\n        code = charCodeAt(digits, index);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nvar FORCED = isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'));\n\nvar calledWithNew = function (dummy) {\n  // includes check on 1..constructor(foo) case\n  return isPrototypeOf(NumberPrototype, dummy) && fails(function () { thisNumberValue(dummy); });\n};\n\n// `Number` constructor\n// https://tc39.es/ecma262/#sec-number-constructor\nvar NumberWrapper = function Number(value) {\n  var n = arguments.length < 1 ? 0 : NativeNumber(toNumeric(value));\n  return calledWithNew(this) ? inheritIfRequired(Object(n), this, NumberWrapper) : n;\n};\n\nNumberWrapper.prototype = NumberPrototype;\nif (FORCED && !IS_PURE) NumberPrototype.constructor = NumberWrapper;\n\n$({ global: true, constructor: true, wrap: true, forced: FORCED }, {\n  Number: NumberWrapper\n});\n\n// Use `internal/copy-constructor-properties` helper in `core-js@4`\nvar copyConstructorProperties = function (target, source) {\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(source) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES2015 (in case, if modules with ES2015 Number statics required before):\n    'EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,' +\n    // ESNext\n    'fromString,range'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (hasOwn(source, key = keys[j]) && !hasOwn(target, key)) {\n      defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n    }\n  }\n};\n\nif (IS_PURE && PureNumberNamespace) copyConstructorProperties(path[NUMBER], PureNumberNamespace);\nif (FORCED || IS_PURE) copyConstructorProperties(path[NUMBER], NativeNumber);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}