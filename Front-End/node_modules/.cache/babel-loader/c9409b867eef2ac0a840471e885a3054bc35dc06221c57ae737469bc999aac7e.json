{"ast":null,"code":"/**\n * @description Round one or more corners of an image or video.\n *\n * <b>Learn more:</b>\n * {@link https://cloudinary.com/documentation/effects_and_artistic_enhancements#rounding_corners_and_creating_circular_images|Rounded images}\n * {@link https://cloudinary.com/documentation/video_effects_and_enhancements#rounding|Rounded videos}\n * @memberOf Actions\n * @namespace RoundCorners\n * @example\n * <caption>Round corners by a radius</caption>\n * import {Cloudinary} from \"@cloudinary/url-gen\";\n * import {byRadius, max} from \"@cloudinary/url-gen/actions/roundCorners\";\n *\n * const yourCldInstance = new Cloudinary({cloud:{cloudName:'demo'}});\n * const image = yourCldInstance.image('woman');\n * // By a radius\n * image.roundCorners(byRadius(10));\n * // Or just the maximum possible\n * image.roundCorners(max());\n * image.toString();\n */\nimport RoundCornersAction from \"./roundCorners/RoundCornersAction.js\";\n/**\n * @summary action\n * @description Generates an asset with a circular crop using the 'max' radius value.\n * @memberOf Actions.RoundCorners\n * @return {Actions.RoundCorners.RoundCornersAction}\n */\nfunction max() {\n  return new RoundCornersAction().max();\n}\n/**\n * @summary action\n * @description Rounds the specified corners of an image or a video by specifying 1-4 pixel values as follows:\n *\n * * 1 value: All four corners are rounded equally according to the specified value.\n * * 2 values: 1st value => top-left & bottom-right. 2nd value => top-right & bottom-left.\n * * 3 values: 1st value => top-left. 2nd value => top-right & bottom-left. 3rd value => bottom-right.\n * * 4 values: Each corner specified separately, in clockwise order, starting with top-left.\n *\n * @param {number} a\n * @param {number} b\n * @param {number} c\n * @param {number} d\n * @memberOf Actions.RoundCorners\n * @return {Actions.RoundCorners.RoundCornersAction}\n */\nfunction byRadius(a, b, c, d) {\n  return new RoundCornersAction().radius(a, b, c, d);\n}\nconst RoundCorners = {\n  byRadius,\n  max\n};\nexport { RoundCorners, byRadius, max };","map":{"version":3,"names":["RoundCornersAction","max","byRadius","a","b","c","d","radius","RoundCorners"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/@cloudinary/transformation-builder-sdk/actions/roundCorners.js"],"sourcesContent":["/**\n * @description Round one or more corners of an image or video.\n *\n * <b>Learn more:</b>\n * {@link https://cloudinary.com/documentation/effects_and_artistic_enhancements#rounding_corners_and_creating_circular_images|Rounded images}\n * {@link https://cloudinary.com/documentation/video_effects_and_enhancements#rounding|Rounded videos}\n * @memberOf Actions\n * @namespace RoundCorners\n * @example\n * <caption>Round corners by a radius</caption>\n * import {Cloudinary} from \"@cloudinary/url-gen\";\n * import {byRadius, max} from \"@cloudinary/url-gen/actions/roundCorners\";\n *\n * const yourCldInstance = new Cloudinary({cloud:{cloudName:'demo'}});\n * const image = yourCldInstance.image('woman');\n * // By a radius\n * image.roundCorners(byRadius(10));\n * // Or just the maximum possible\n * image.roundCorners(max());\n * image.toString();\n */\nimport RoundCornersAction from \"./roundCorners/RoundCornersAction.js\";\n/**\n * @summary action\n * @description Generates an asset with a circular crop using the 'max' radius value.\n * @memberOf Actions.RoundCorners\n * @return {Actions.RoundCorners.RoundCornersAction}\n */\nfunction max() {\n    return new RoundCornersAction().max();\n}\n/**\n * @summary action\n * @description Rounds the specified corners of an image or a video by specifying 1-4 pixel values as follows:\n *\n * * 1 value: All four corners are rounded equally according to the specified value.\n * * 2 values: 1st value => top-left & bottom-right. 2nd value => top-right & bottom-left.\n * * 3 values: 1st value => top-left. 2nd value => top-right & bottom-left. 3rd value => bottom-right.\n * * 4 values: Each corner specified separately, in clockwise order, starting with top-left.\n *\n * @param {number} a\n * @param {number} b\n * @param {number} c\n * @param {number} d\n * @memberOf Actions.RoundCorners\n * @return {Actions.RoundCorners.RoundCornersAction}\n */\nfunction byRadius(a, b, c, d) {\n    return new RoundCornersAction().radius(a, b, c, d);\n}\nconst RoundCorners = { byRadius, max };\nexport { RoundCorners, byRadius, max };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,kBAAkB,MAAM,sCAAsC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,GAAG,GAAG;EACX,OAAO,IAAID,kBAAkB,EAAE,CAACC,GAAG,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,QAAQ,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;EAC1B,OAAO,IAAIN,kBAAkB,EAAE,CAACO,MAAM,CAACJ,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;AACtD;AACA,MAAME,YAAY,GAAG;EAAEN,QAAQ;EAAED;AAAI,CAAC;AACtC,SAASO,YAAY,EAAEN,QAAQ,EAAED,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}