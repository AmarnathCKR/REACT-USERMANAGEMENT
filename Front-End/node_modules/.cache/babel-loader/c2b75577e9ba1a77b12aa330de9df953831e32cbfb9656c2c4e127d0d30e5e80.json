{"ast":null,"code":"import { AspectRatioQualifierValue } from \"./aspectRatio/AspectRatioQualifierValue.js\";\nimport { ignoreInitialAspectRatio as ignoreInitialAspectRatioFlag } from \"./flag.js\";\n/**\n * @description 1 by 1 aspect ration.\n * @memberOf Qualifiers.AspectRatio\n * @return {string}\n */\nfunction ar1X1() {\n  return new AspectRatioQualifierValue('1:1');\n}\n/**\n * @summary qualifier\n * @description 5 by 4 aspect ration.\n * @memberOf Qualifiers.AspectRatio\n * @return {string}\n */\nfunction ar5X4() {\n  return new AspectRatioQualifierValue('5:4');\n}\n/**\n * @summary qualifier\n * @description 4 by 3 aspect ration.\n * @memberOf Qualifiers.AspectRatio\n * @return {string}\n */\nfunction ar4X3() {\n  return new AspectRatioQualifierValue('4:3');\n}\n/**\n * @summary qualifier\n * @description 3 by 2 aspect ration.\n * @memberOf Qualifiers.AspectRatio\n * @return {string}\n */\nfunction ar3X2() {\n  return new AspectRatioQualifierValue('3:2');\n}\n/**\n * @summary qualifier\n * @description 16 by 9 aspect ration.\n * @memberOf Qualifiers.AspectRatio\n * @return {string}\n */\nfunction ar16X9() {\n  return new AspectRatioQualifierValue('16:9');\n}\n/**\n * @summary qualifier\n * @description 3 by 1 aspect ration.\n * @memberOf Qualifiers.AspectRatio\n * @return {string}\n */\nfunction ar3X1() {\n  return new AspectRatioQualifierValue('3:1');\n}\n/**\n * @summary qualifier\n * @description ignores aspect ratio.\n * @memberOf Qualifiers.AspectRatio\n * @return {IgnoreAspectRatioQualifier}\n */\nfunction ignoreInitialAspectRatio() {\n  return ignoreInitialAspectRatioFlag();\n}\n/**\n * @summary qualifier\n * @description A list of all most commonly used aspect ratios. including an ‘ignore aspect ratio’ option which direct the BE to not stick to the original aspect ratio.\n * This is used in the context of resize actions\n * @namespace AspectRatio\n * @memberOf Qualifiers\n * @see Visit {@link Actions.Resize|Resize} for an example\n */\nconst AspectRatio = {\n  ar1X1,\n  ar5X4,\n  ar3X1,\n  ar3X2,\n  ar4X3,\n  ar16X9,\n  ignoreInitialAspectRatio\n};\nexport { ar1X1, ar5X4, ar3X1, ar3X2, ar4X3, ar16X9, ignoreInitialAspectRatio, AspectRatio };","map":{"version":3,"names":["AspectRatioQualifierValue","ignoreInitialAspectRatio","ignoreInitialAspectRatioFlag","ar1X1","ar5X4","ar4X3","ar3X2","ar16X9","ar3X1","AspectRatio"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/@cloudinary/transformation-builder-sdk/qualifiers/aspectRatio.js"],"sourcesContent":["import { AspectRatioQualifierValue } from \"./aspectRatio/AspectRatioQualifierValue.js\";\nimport { ignoreInitialAspectRatio as ignoreInitialAspectRatioFlag } from \"./flag.js\";\n/**\n * @description 1 by 1 aspect ration.\n * @memberOf Qualifiers.AspectRatio\n * @return {string}\n */\nfunction ar1X1() {\n    return new AspectRatioQualifierValue('1:1');\n}\n/**\n * @summary qualifier\n * @description 5 by 4 aspect ration.\n * @memberOf Qualifiers.AspectRatio\n * @return {string}\n */\nfunction ar5X4() {\n    return new AspectRatioQualifierValue('5:4');\n}\n/**\n * @summary qualifier\n * @description 4 by 3 aspect ration.\n * @memberOf Qualifiers.AspectRatio\n * @return {string}\n */\nfunction ar4X3() {\n    return new AspectRatioQualifierValue('4:3');\n}\n/**\n * @summary qualifier\n * @description 3 by 2 aspect ration.\n * @memberOf Qualifiers.AspectRatio\n * @return {string}\n */\nfunction ar3X2() {\n    return new AspectRatioQualifierValue('3:2');\n}\n/**\n * @summary qualifier\n * @description 16 by 9 aspect ration.\n * @memberOf Qualifiers.AspectRatio\n * @return {string}\n */\nfunction ar16X9() {\n    return new AspectRatioQualifierValue('16:9');\n}\n/**\n * @summary qualifier\n * @description 3 by 1 aspect ration.\n * @memberOf Qualifiers.AspectRatio\n * @return {string}\n */\nfunction ar3X1() {\n    return new AspectRatioQualifierValue('3:1');\n}\n/**\n * @summary qualifier\n * @description ignores aspect ratio.\n * @memberOf Qualifiers.AspectRatio\n * @return {IgnoreAspectRatioQualifier}\n */\nfunction ignoreInitialAspectRatio() {\n    return ignoreInitialAspectRatioFlag();\n}\n/**\n * @summary qualifier\n * @description A list of all most commonly used aspect ratios. including an ‘ignore aspect ratio’ option which direct the BE to not stick to the original aspect ratio.\n * This is used in the context of resize actions\n * @namespace AspectRatio\n * @memberOf Qualifiers\n * @see Visit {@link Actions.Resize|Resize} for an example\n */\nconst AspectRatio = {\n    ar1X1,\n    ar5X4,\n    ar3X1,\n    ar3X2,\n    ar4X3,\n    ar16X9,\n    ignoreInitialAspectRatio\n};\nexport { ar1X1, ar5X4, ar3X1, ar3X2, ar4X3, ar16X9, ignoreInitialAspectRatio, AspectRatio };\n"],"mappings":"AAAA,SAASA,yBAAyB,QAAQ,4CAA4C;AACtF,SAASC,wBAAwB,IAAIC,4BAA4B,QAAQ,WAAW;AACpF;AACA;AACA;AACA;AACA;AACA,SAASC,KAAK,GAAG;EACb,OAAO,IAAIH,yBAAyB,CAAC,KAAK,CAAC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASI,KAAK,GAAG;EACb,OAAO,IAAIJ,yBAAyB,CAAC,KAAK,CAAC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASK,KAAK,GAAG;EACb,OAAO,IAAIL,yBAAyB,CAAC,KAAK,CAAC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASM,KAAK,GAAG;EACb,OAAO,IAAIN,yBAAyB,CAAC,KAAK,CAAC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASO,MAAM,GAAG;EACd,OAAO,IAAIP,yBAAyB,CAAC,MAAM,CAAC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASQ,KAAK,GAAG;EACb,OAAO,IAAIR,yBAAyB,CAAC,KAAK,CAAC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,wBAAwB,GAAG;EAChC,OAAOC,4BAA4B,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMO,WAAW,GAAG;EAChBN,KAAK;EACLC,KAAK;EACLI,KAAK;EACLF,KAAK;EACLD,KAAK;EACLE,MAAM;EACNN;AACJ,CAAC;AACD,SAASE,KAAK,EAAEC,KAAK,EAAEI,KAAK,EAAEF,KAAK,EAAED,KAAK,EAAEE,MAAM,EAAEN,wBAAwB,EAAEQ,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}