{"ast":null,"code":"var sign = require('../internals/math-sign');\nvar abs = Math.abs;\nvar pow = Math.pow;\nvar EPSILON = pow(2, -52);\nvar EPSILON32 = pow(2, -23);\nvar MAX32 = pow(2, 127) * (2 - EPSILON32);\nvar MIN32 = pow(2, -126);\nvar roundTiesToEven = function (n) {\n  return n + 1 / EPSILON - 1 / EPSILON;\n};\n\n// `Math.fround` method implementation\n// https://tc39.es/ecma262/#sec-math.fround\n// eslint-disable-next-line es/no-math-fround -- safe\nmodule.exports = Math.fround || function fround(x) {\n  var n = +x;\n  var $abs = abs(n);\n  var $sign = sign(n);\n  var a, result;\n  if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;\n  a = (1 + EPSILON32 / EPSILON) * $abs;\n  result = a - (a - $abs);\n  // eslint-disable-next-line no-self-compare -- NaN check\n  if (result > MAX32 || result != result) return $sign * Infinity;\n  return $sign * result;\n};","map":{"version":3,"names":["sign","require","abs","Math","pow","EPSILON","EPSILON32","MAX32","MIN32","roundTiesToEven","n","module","exports","fround","x","$abs","$sign","a","result","Infinity"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/core-js/internals/math-fround.js"],"sourcesContent":["var sign = require('../internals/math-sign');\n\nvar abs = Math.abs;\nvar pow = Math.pow;\nvar EPSILON = pow(2, -52);\nvar EPSILON32 = pow(2, -23);\nvar MAX32 = pow(2, 127) * (2 - EPSILON32);\nvar MIN32 = pow(2, -126);\n\nvar roundTiesToEven = function (n) {\n  return n + 1 / EPSILON - 1 / EPSILON;\n};\n\n// `Math.fround` method implementation\n// https://tc39.es/ecma262/#sec-math.fround\n// eslint-disable-next-line es/no-math-fround -- safe\nmodule.exports = Math.fround || function fround(x) {\n  var n = +x;\n  var $abs = abs(n);\n  var $sign = sign(n);\n  var a, result;\n  if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;\n  a = (1 + EPSILON32 / EPSILON) * $abs;\n  result = a - (a - $abs);\n  // eslint-disable-next-line no-self-compare -- NaN check\n  if (result > MAX32 || result != result) return $sign * Infinity;\n  return $sign * result;\n};\n"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AAE5C,IAAIC,GAAG,GAAGC,IAAI,CAACD,GAAG;AAClB,IAAIE,GAAG,GAAGD,IAAI,CAACC,GAAG;AAClB,IAAIC,OAAO,GAAGD,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;AACzB,IAAIE,SAAS,GAAGF,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;AAC3B,IAAIG,KAAK,GAAGH,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,GAAGE,SAAS,CAAC;AACzC,IAAIE,KAAK,GAAGJ,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;AAExB,IAAIK,eAAe,GAAG,UAAUC,CAAC,EAAE;EACjC,OAAOA,CAAC,GAAG,CAAC,GAAGL,OAAO,GAAG,CAAC,GAAGA,OAAO;AACtC,CAAC;;AAED;AACA;AACA;AACAM,MAAM,CAACC,OAAO,GAAGT,IAAI,CAACU,MAAM,IAAI,SAASA,MAAM,CAACC,CAAC,EAAE;EACjD,IAAIJ,CAAC,GAAG,CAACI,CAAC;EACV,IAAIC,IAAI,GAAGb,GAAG,CAACQ,CAAC,CAAC;EACjB,IAAIM,KAAK,GAAGhB,IAAI,CAACU,CAAC,CAAC;EACnB,IAAIO,CAAC,EAAEC,MAAM;EACb,IAAIH,IAAI,GAAGP,KAAK,EAAE,OAAOQ,KAAK,GAAGP,eAAe,CAACM,IAAI,GAAGP,KAAK,GAAGF,SAAS,CAAC,GAAGE,KAAK,GAAGF,SAAS;EAC9FW,CAAC,GAAG,CAAC,CAAC,GAAGX,SAAS,GAAGD,OAAO,IAAIU,IAAI;EACpCG,MAAM,GAAGD,CAAC,IAAIA,CAAC,GAAGF,IAAI,CAAC;EACvB;EACA,IAAIG,MAAM,GAAGX,KAAK,IAAIW,MAAM,IAAIA,MAAM,EAAE,OAAOF,KAAK,GAAGG,QAAQ;EAC/D,OAAOH,KAAK,GAAGE,MAAM;AACvB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}