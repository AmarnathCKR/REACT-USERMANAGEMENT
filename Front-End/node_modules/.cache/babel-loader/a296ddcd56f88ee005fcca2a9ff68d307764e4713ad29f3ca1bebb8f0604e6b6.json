{"ast":null,"code":"import { Action } from \"../../internal/Action.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { prepareColor } from \"../../internal/utils/prepareColor.js\";\n/**\n * @description Applies a shadow filter to the asset.\n * @memberOf Actions.Effect\n * @extends SDK.Action\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass ShadowEffectAction extends Action {\n  constructor(effectType, strength) {\n    super();\n    this._actionModel = {};\n    this._actionModel.actionType = effectType;\n    this.effectType = effectType;\n    this.addQualifier(new Qualifier('e', new QualifierValue(['shadow', strength])));\n  }\n  /**\n   * @description The strength of the shadow. (Range: 0 to 100, Server default: 40)\n   * @param {number} strength\n   * @return {this}\n   */\n  strength(strength) {\n    this._actionModel.strength = strength;\n    return this.addQualifier(new Qualifier('e', new QualifierValue(['shadow', strength])));\n  }\n  /**\n   * @description The X offset the shadow\n   * @param {number | SDK.ExpressionQualifier} x\n   * @return {this}\n   */\n  offsetX(x) {\n    this._actionModel.offsetX = x;\n    return this.addQualifier(new Qualifier('x', new QualifierValue(x)));\n  }\n  /**\n   * @description The Y offset the shadow\n   * @param {number | SDK.ExpressionQualifier} y\n   * @return {this}\n   */\n  offsetY(y) {\n    this._actionModel.offsetY = y;\n    return this.addQualifier(new Qualifier('y', new QualifierValue(y)));\n  }\n  /**\n   * @description The color of the shadow (Server default: gray)\n   * @param color\n   * @return {this}\n   */\n  color(color) {\n    this._actionModel.color = color;\n    return this.addQualifier(new Qualifier('co', new QualifierValue(prepareColor(color))));\n  }\n  static fromJson(actionModel) {\n    const {\n      actionType,\n      strength,\n      offsetX,\n      offsetY,\n      color\n    } = actionModel;\n    // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n    // This allows the inheriting classes to determine the class to be created\n    const result = new this(actionType, strength);\n    offsetX && result.offsetX(offsetX);\n    offsetY && result.offsetY(offsetY);\n    color && result.color(color);\n    return result;\n  }\n}\nexport { ShadowEffectAction };","map":{"version":3,"names":["Action","QualifierValue","Qualifier","prepareColor","ShadowEffectAction","constructor","effectType","strength","_actionModel","actionType","addQualifier","offsetX","x","offsetY","y","color","fromJson","actionModel","result"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/@cloudinary/transformation-builder-sdk/actions/effect/Shadow.js"],"sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { prepareColor } from \"../../internal/utils/prepareColor.js\";\n/**\n * @description Applies a shadow filter to the asset.\n * @memberOf Actions.Effect\n * @extends SDK.Action\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass ShadowEffectAction extends Action {\n    constructor(effectType, strength) {\n        super();\n        this._actionModel = {};\n        this._actionModel.actionType = effectType;\n        this.effectType = effectType;\n        this.addQualifier(new Qualifier('e', new QualifierValue(['shadow', strength])));\n    }\n    /**\n     * @description The strength of the shadow. (Range: 0 to 100, Server default: 40)\n     * @param {number} strength\n     * @return {this}\n     */\n    strength(strength) {\n        this._actionModel.strength = strength;\n        return this.addQualifier(new Qualifier('e', new QualifierValue(['shadow', strength])));\n    }\n    /**\n     * @description The X offset the shadow\n     * @param {number | SDK.ExpressionQualifier} x\n     * @return {this}\n     */\n    offsetX(x) {\n        this._actionModel.offsetX = x;\n        return this.addQualifier(new Qualifier('x', new QualifierValue(x)));\n    }\n    /**\n     * @description The Y offset the shadow\n     * @param {number | SDK.ExpressionQualifier} y\n     * @return {this}\n     */\n    offsetY(y) {\n        this._actionModel.offsetY = y;\n        return this.addQualifier(new Qualifier('y', new QualifierValue(y)));\n    }\n    /**\n     * @description The color of the shadow (Server default: gray)\n     * @param color\n     * @return {this}\n     */\n    color(color) {\n        this._actionModel.color = color;\n        return this.addQualifier(new Qualifier('co', new QualifierValue(prepareColor(color))));\n    }\n    static fromJson(actionModel) {\n        const { actionType, strength, offsetX, offsetY, color } = actionModel;\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n        // This allows the inheriting classes to determine the class to be created\n        const result = new this(actionType, strength);\n        offsetX && result.offsetX(offsetX);\n        offsetY && result.offsetY(offsetY);\n        color && result.color(color);\n        return result;\n    }\n}\nexport { ShadowEffectAction };\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,0BAA0B;AACjD,SAASC,cAAc,QAAQ,4CAA4C;AAC3E,SAASC,SAAS,QAAQ,uCAAuC;AACjE,SAASC,YAAY,QAAQ,sCAAsC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,kBAAkB,SAASJ,MAAM,CAAC;EACpCK,WAAW,CAACC,UAAU,EAAEC,QAAQ,EAAE;IAC9B,KAAK,EAAE;IACP,IAAI,CAACC,YAAY,GAAG,CAAC,CAAC;IACtB,IAAI,CAACA,YAAY,CAACC,UAAU,GAAGH,UAAU;IACzC,IAAI,CAACA,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACI,YAAY,CAAC,IAAIR,SAAS,CAAC,GAAG,EAAE,IAAID,cAAc,CAAC,CAAC,QAAQ,EAAEM,QAAQ,CAAC,CAAC,CAAC,CAAC;EACnF;EACA;AACJ;AACA;AACA;AACA;EACIA,QAAQ,CAACA,QAAQ,EAAE;IACf,IAAI,CAACC,YAAY,CAACD,QAAQ,GAAGA,QAAQ;IACrC,OAAO,IAAI,CAACG,YAAY,CAAC,IAAIR,SAAS,CAAC,GAAG,EAAE,IAAID,cAAc,CAAC,CAAC,QAAQ,EAAEM,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1F;EACA;AACJ;AACA;AACA;AACA;EACII,OAAO,CAACC,CAAC,EAAE;IACP,IAAI,CAACJ,YAAY,CAACG,OAAO,GAAGC,CAAC;IAC7B,OAAO,IAAI,CAACF,YAAY,CAAC,IAAIR,SAAS,CAAC,GAAG,EAAE,IAAID,cAAc,CAACW,CAAC,CAAC,CAAC,CAAC;EACvE;EACA;AACJ;AACA;AACA;AACA;EACIC,OAAO,CAACC,CAAC,EAAE;IACP,IAAI,CAACN,YAAY,CAACK,OAAO,GAAGC,CAAC;IAC7B,OAAO,IAAI,CAACJ,YAAY,CAAC,IAAIR,SAAS,CAAC,GAAG,EAAE,IAAID,cAAc,CAACa,CAAC,CAAC,CAAC,CAAC;EACvE;EACA;AACJ;AACA;AACA;AACA;EACIC,KAAK,CAACA,KAAK,EAAE;IACT,IAAI,CAACP,YAAY,CAACO,KAAK,GAAGA,KAAK;IAC/B,OAAO,IAAI,CAACL,YAAY,CAAC,IAAIR,SAAS,CAAC,IAAI,EAAE,IAAID,cAAc,CAACE,YAAY,CAACY,KAAK,CAAC,CAAC,CAAC,CAAC;EAC1F;EACA,OAAOC,QAAQ,CAACC,WAAW,EAAE;IACzB,MAAM;MAAER,UAAU;MAAEF,QAAQ;MAAEI,OAAO;MAAEE,OAAO;MAAEE;IAAM,CAAC,GAAGE,WAAW;IACrE;IACA;IACA,MAAMC,MAAM,GAAG,IAAI,IAAI,CAACT,UAAU,EAAEF,QAAQ,CAAC;IAC7CI,OAAO,IAAIO,MAAM,CAACP,OAAO,CAACA,OAAO,CAAC;IAClCE,OAAO,IAAIK,MAAM,CAACL,OAAO,CAACA,OAAO,CAAC;IAClCE,KAAK,IAAIG,MAAM,CAACH,KAAK,CAACA,KAAK,CAAC;IAC5B,OAAOG,MAAM;EACjB;AACJ;AACA,SAASd,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}