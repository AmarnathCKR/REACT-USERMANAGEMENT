{"ast":null,"code":"import { BaseSource } from \"../BaseSource.js\";\nimport { TextStyle } from \"../../textStyle.js\";\nimport { serializeCloudinaryCharacters } from \"../../../internal/utils/serializeCloudinaryCharacters.js\";\nimport { Action } from \"../../../internal/Action.js\";\nimport { Qualifier } from \"../../../internal/qualifier/Qualifier.js\";\nimport { prepareColor } from \"../../../internal/utils/prepareColor.js\";\n/**\n * @memberOf Qualifiers.Source\n * @extends {Qualifiers.Source.BaseSource}\n * @description Defines the common interface for all text-based sources\n */\nclass BaseTextSource extends BaseSource {\n  constructor(text, textStyle) {\n    super();\n    this.type = 'text';\n    this.text = text;\n    this._textStyle = textStyle;\n    this._qualifierModel.sourceType = 'text';\n    this._qualifierModel.text = text;\n    if (textStyle instanceof TextStyle) {\n      this._qualifierModel.textStyle = textStyle.toJson();\n    }\n  }\n  encodeText(text) {\n    return serializeCloudinaryCharacters(text);\n  }\n  textColor(color) {\n    this._textColor = color;\n    this._qualifierModel.textColor = color;\n    return this;\n  }\n  backgroundColor(bgColor) {\n    this._backgroundColor = bgColor;\n    this._qualifierModel.backgroundColor = bgColor;\n    return this;\n  }\n  textFit(textFit) {\n    this._textFit = textFit;\n    return this;\n  }\n  /**\n   * @description\n   * Returns the opening string of the layer,\n   * This method is used internally within {@link SDK.LayerAction|LayerAction}\n   * @returns {string}\n   */\n  getOpenSourceString(layerType) {\n    const layerParam = [this.type, this._textStyle && this._textStyle.toString(), this.encodeText(this.text)].filter(a => a).join(':');\n    const tmpAction = new Action();\n    tmpAction.addQualifier(new Qualifier(layerType, layerParam));\n    this._textColor && tmpAction.addQualifier(new Qualifier('co', prepareColor(this._textColor)));\n    this._backgroundColor && tmpAction.addQualifier(new Qualifier('b', prepareColor(this._backgroundColor)));\n    this._textFit && tmpAction.addQualifier(this._textFit);\n    return tmpAction.toString();\n  }\n}\nexport { BaseTextSource };","map":{"version":3,"names":["BaseSource","TextStyle","serializeCloudinaryCharacters","Action","Qualifier","prepareColor","BaseTextSource","constructor","text","textStyle","type","_textStyle","_qualifierModel","sourceType","toJson","encodeText","textColor","color","_textColor","backgroundColor","bgColor","_backgroundColor","textFit","_textFit","getOpenSourceString","layerType","layerParam","toString","filter","a","join","tmpAction","addQualifier"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/@cloudinary/transformation-builder-sdk/qualifiers/source/sourceTypes/BaseTextSource.js"],"sourcesContent":["import { BaseSource } from \"../BaseSource.js\";\nimport { TextStyle } from \"../../textStyle.js\";\nimport { serializeCloudinaryCharacters } from \"../../../internal/utils/serializeCloudinaryCharacters.js\";\nimport { Action } from \"../../../internal/Action.js\";\nimport { Qualifier } from \"../../../internal/qualifier/Qualifier.js\";\nimport { prepareColor } from \"../../../internal/utils/prepareColor.js\";\n/**\n * @memberOf Qualifiers.Source\n * @extends {Qualifiers.Source.BaseSource}\n * @description Defines the common interface for all text-based sources\n */\nclass BaseTextSource extends BaseSource {\n    constructor(text, textStyle) {\n        super();\n        this.type = 'text';\n        this.text = text;\n        this._textStyle = textStyle;\n        this._qualifierModel.sourceType = 'text';\n        this._qualifierModel.text = text;\n        if (textStyle instanceof TextStyle) {\n            this._qualifierModel.textStyle = textStyle.toJson();\n        }\n    }\n    encodeText(text) {\n        return serializeCloudinaryCharacters(text);\n    }\n    textColor(color) {\n        this._textColor = color;\n        this._qualifierModel.textColor = color;\n        return this;\n    }\n    backgroundColor(bgColor) {\n        this._backgroundColor = bgColor;\n        this._qualifierModel.backgroundColor = bgColor;\n        return this;\n    }\n    textFit(textFit) {\n        this._textFit = textFit;\n        return this;\n    }\n    /**\n     * @description\n     * Returns the opening string of the layer,\n     * This method is used internally within {@link SDK.LayerAction|LayerAction}\n     * @returns {string}\n     */\n    getOpenSourceString(layerType) {\n        const layerParam = [\n            this.type,\n            this._textStyle && this._textStyle.toString(),\n            this.encodeText(this.text)\n        ].filter((a) => a).join(':');\n        const tmpAction = new Action();\n        tmpAction.addQualifier(new Qualifier(layerType, layerParam));\n        this._textColor && tmpAction.addQualifier(new Qualifier('co', prepareColor(this._textColor)));\n        this._backgroundColor && tmpAction.addQualifier(new Qualifier('b', prepareColor(this._backgroundColor)));\n        this._textFit && tmpAction.addQualifier(this._textFit);\n        return tmpAction.toString();\n    }\n}\nexport { BaseTextSource };\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,6BAA6B,QAAQ,0DAA0D;AACxG,SAASC,MAAM,QAAQ,6BAA6B;AACpD,SAASC,SAAS,QAAQ,0CAA0C;AACpE,SAASC,YAAY,QAAQ,yCAAyC;AACtE;AACA;AACA;AACA;AACA;AACA,MAAMC,cAAc,SAASN,UAAU,CAAC;EACpCO,WAAW,CAACC,IAAI,EAAEC,SAAS,EAAE;IACzB,KAAK,EAAE;IACP,IAAI,CAACC,IAAI,GAAG,MAAM;IAClB,IAAI,CAACF,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACG,UAAU,GAAGF,SAAS;IAC3B,IAAI,CAACG,eAAe,CAACC,UAAU,GAAG,MAAM;IACxC,IAAI,CAACD,eAAe,CAACJ,IAAI,GAAGA,IAAI;IAChC,IAAIC,SAAS,YAAYR,SAAS,EAAE;MAChC,IAAI,CAACW,eAAe,CAACH,SAAS,GAAGA,SAAS,CAACK,MAAM,EAAE;IACvD;EACJ;EACAC,UAAU,CAACP,IAAI,EAAE;IACb,OAAON,6BAA6B,CAACM,IAAI,CAAC;EAC9C;EACAQ,SAAS,CAACC,KAAK,EAAE;IACb,IAAI,CAACC,UAAU,GAAGD,KAAK;IACvB,IAAI,CAACL,eAAe,CAACI,SAAS,GAAGC,KAAK;IACtC,OAAO,IAAI;EACf;EACAE,eAAe,CAACC,OAAO,EAAE;IACrB,IAAI,CAACC,gBAAgB,GAAGD,OAAO;IAC/B,IAAI,CAACR,eAAe,CAACO,eAAe,GAAGC,OAAO;IAC9C,OAAO,IAAI;EACf;EACAE,OAAO,CAACA,OAAO,EAAE;IACb,IAAI,CAACC,QAAQ,GAAGD,OAAO;IACvB,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;AACA;EACIE,mBAAmB,CAACC,SAAS,EAAE;IAC3B,MAAMC,UAAU,GAAG,CACf,IAAI,CAAChB,IAAI,EACT,IAAI,CAACC,UAAU,IAAI,IAAI,CAACA,UAAU,CAACgB,QAAQ,EAAE,EAC7C,IAAI,CAACZ,UAAU,CAAC,IAAI,CAACP,IAAI,CAAC,CAC7B,CAACoB,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;IAC5B,MAAMC,SAAS,GAAG,IAAI5B,MAAM,EAAE;IAC9B4B,SAAS,CAACC,YAAY,CAAC,IAAI5B,SAAS,CAACqB,SAAS,EAAEC,UAAU,CAAC,CAAC;IAC5D,IAAI,CAACR,UAAU,IAAIa,SAAS,CAACC,YAAY,CAAC,IAAI5B,SAAS,CAAC,IAAI,EAAEC,YAAY,CAAC,IAAI,CAACa,UAAU,CAAC,CAAC,CAAC;IAC7F,IAAI,CAACG,gBAAgB,IAAIU,SAAS,CAACC,YAAY,CAAC,IAAI5B,SAAS,CAAC,GAAG,EAAEC,YAAY,CAAC,IAAI,CAACgB,gBAAgB,CAAC,CAAC,CAAC;IACxG,IAAI,CAACE,QAAQ,IAAIQ,SAAS,CAACC,YAAY,CAAC,IAAI,CAACT,QAAQ,CAAC;IACtD,OAAOQ,SAAS,CAACJ,QAAQ,EAAE;EAC/B;AACJ;AACA,SAASrB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}