{"ast":null,"code":"'use strict';\n\n/**\n * Authorization Token\n * @module auth_token\n */\nvar crypto = require('crypto');\nvar smart_escape = require('./utils/encoding/smart_escape');\nvar unsafe = /([ \"#%&'/:;<=>?@[\\]^`{|}~]+)/g;\nfunction digest(message, key) {\n  return crypto.createHmac(\"sha256\", Buffer.from(key, \"hex\")).update(message).digest('hex');\n}\n\n/**\n * Escape url using lowercase hex code\n * @param {string} url a url string\n * @return {string} escaped url\n */\nfunction escapeToLower(url) {\n  var safeUrl = smart_escape(url, unsafe);\n  return safeUrl.replace(/%../g, function (match) {\n    return match.toLowerCase();\n  });\n}\n\n/**\n * Auth token options\n * @typedef {object} authTokenOptions\n * @property {string} [token_name=\"__cld_token__\"] The name of the token.\n * @property {string} key The secret key required to sign the token.\n * @property {string} ip The IP address of the client.\n * @property {number} start_time=now The start time of the token in seconds from epoch.\n * @property {string} expiration The expiration time of the token in seconds from epoch.\n * @property {string} duration The duration of the token (from start_time).\n * @property {string|Array<string>} acl The ACL(s) for the token.\n * @property {string} url The URL to authentication in case of a URL token.\n *\n */\n\n/**\n * Generate an authorization token\n * @param {authTokenOptions} options\n * @returns {string} the authorization token\n */\nmodule.exports = function (options) {\n  var tokenName = options.token_name ? options.token_name : \"__cld_token__\";\n  var tokenSeparator = \"~\";\n  if (options.expiration == null) {\n    if (options.duration != null) {\n      var start = options.start_time != null ? options.start_time : Math.round(Date.now() / 1000);\n      options.expiration = start + options.duration;\n    } else {\n      throw new Error(\"Must provide either expiration or duration\");\n    }\n  }\n  var tokenParts = [];\n  if (options.ip != null) {\n    tokenParts.push(`ip=${options.ip}`);\n  }\n  if (options.start_time != null) {\n    tokenParts.push(`st=${options.start_time}`);\n  }\n  tokenParts.push(`exp=${options.expiration}`);\n  if (options.acl != null) {\n    if (Array.isArray(options.acl) === true) {\n      options.acl = options.acl.join(\"!\");\n    }\n    tokenParts.push(`acl=${escapeToLower(options.acl)}`);\n  }\n  var toSign = [].concat(tokenParts);\n  if (options.url != null && options.acl == null) {\n    var url = escapeToLower(options.url);\n    toSign.push(`url=${url}`);\n  }\n  var auth = digest(toSign.join(tokenSeparator), options.key);\n  tokenParts.push(`hmac=${auth}`);\n  if (!options.url && !options.acl) {\n    throw 'authToken must contain either an acl or a url property';\n  }\n  return `${tokenName}=${tokenParts.join(tokenSeparator)}`;\n};","map":{"version":3,"names":["crypto","require","smart_escape","unsafe","digest","message","key","createHmac","Buffer","from","update","escapeToLower","url","safeUrl","replace","match","toLowerCase","module","exports","options","tokenName","token_name","tokenSeparator","expiration","duration","start","start_time","Math","round","Date","now","Error","tokenParts","ip","push","acl","Array","isArray","join","toSign","concat","auth"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/cloudinary/lib-es5/auth_token.js"],"sourcesContent":["'use strict';\n\n/**\n * Authorization Token\n * @module auth_token\n */\n\nvar crypto = require('crypto');\nvar smart_escape = require('./utils/encoding/smart_escape');\n\nvar unsafe = /([ \"#%&'/:;<=>?@[\\]^`{|}~]+)/g;\n\nfunction digest(message, key) {\n  return crypto.createHmac(\"sha256\", Buffer.from(key, \"hex\")).update(message).digest('hex');\n}\n\n/**\n * Escape url using lowercase hex code\n * @param {string} url a url string\n * @return {string} escaped url\n */\nfunction escapeToLower(url) {\n  var safeUrl = smart_escape(url, unsafe);\n  return safeUrl.replace(/%../g, function (match) {\n    return match.toLowerCase();\n  });\n}\n\n/**\n * Auth token options\n * @typedef {object} authTokenOptions\n * @property {string} [token_name=\"__cld_token__\"] The name of the token.\n * @property {string} key The secret key required to sign the token.\n * @property {string} ip The IP address of the client.\n * @property {number} start_time=now The start time of the token in seconds from epoch.\n * @property {string} expiration The expiration time of the token in seconds from epoch.\n * @property {string} duration The duration of the token (from start_time).\n * @property {string|Array<string>} acl The ACL(s) for the token.\n * @property {string} url The URL to authentication in case of a URL token.\n *\n */\n\n/**\n * Generate an authorization token\n * @param {authTokenOptions} options\n * @returns {string} the authorization token\n */\nmodule.exports = function (options) {\n  var tokenName = options.token_name ? options.token_name : \"__cld_token__\";\n  var tokenSeparator = \"~\";\n  if (options.expiration == null) {\n    if (options.duration != null) {\n      var start = options.start_time != null ? options.start_time : Math.round(Date.now() / 1000);\n      options.expiration = start + options.duration;\n    } else {\n      throw new Error(\"Must provide either expiration or duration\");\n    }\n  }\n  var tokenParts = [];\n  if (options.ip != null) {\n    tokenParts.push(`ip=${options.ip}`);\n  }\n  if (options.start_time != null) {\n    tokenParts.push(`st=${options.start_time}`);\n  }\n  tokenParts.push(`exp=${options.expiration}`);\n  if (options.acl != null) {\n    if (Array.isArray(options.acl) === true) {\n      options.acl = options.acl.join(\"!\");\n    }\n    tokenParts.push(`acl=${escapeToLower(options.acl)}`);\n  }\n  var toSign = [].concat(tokenParts);\n  if (options.url != null && options.acl == null) {\n    var url = escapeToLower(options.url);\n    toSign.push(`url=${url}`);\n  }\n  var auth = digest(toSign.join(tokenSeparator), options.key);\n  tokenParts.push(`hmac=${auth}`);\n\n  if (!options.url && !options.acl) {\n    throw 'authToken must contain either an acl or a url property';\n  }\n\n  return `${tokenName}=${tokenParts.join(tokenSeparator)}`;\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}