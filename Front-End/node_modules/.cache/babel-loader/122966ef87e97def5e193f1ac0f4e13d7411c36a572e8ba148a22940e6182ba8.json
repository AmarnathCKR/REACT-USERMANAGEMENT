{"ast":null,"code":"import { OLD_AKAMAI_SHARED_CDN, SHARED_CDN } from \"../consts.js\";\nexport function unsigned_url_prefix(source, cloud_name, private_cdn, cdn_subdomain, secure_cdn_subdomain, cname, secure, secure_distribution) {\n  let prefix;\n  if (cloud_name.indexOf(\"/\") === 0) {\n    return '/res' + cloud_name;\n  }\n  let shared_domain = !private_cdn;\n  if (secure) {\n    if (secure_distribution == null || secure_distribution === OLD_AKAMAI_SHARED_CDN) {\n      secure_distribution = private_cdn ? cloud_name + \"-res.cloudinary.com\" : SHARED_CDN;\n    }\n    if (shared_domain == null) {\n      shared_domain = secure_distribution === SHARED_CDN;\n    }\n    prefix = 'https://' + secure_distribution;\n  } else if (cname) {\n    // let subdomain = cdn_subdomain ? 'a' + ((crc32(source) % 5) + 1) + '.' : '';\n    prefix = 'http://' + cname;\n  } else {\n    let cdn_part = private_cdn ? cloud_name + '-' : '';\n    let host = [cdn_part, 'res', '.cloudinary.com'].join('');\n    prefix = 'http://' + host;\n  }\n  if (shared_domain) {\n    prefix += '/' + cloud_name;\n  }\n  return prefix;\n}","map":{"version":3,"names":["OLD_AKAMAI_SHARED_CDN","SHARED_CDN","unsigned_url_prefix","source","cloud_name","private_cdn","cdn_subdomain","secure_cdn_subdomain","cname","secure","secure_distribution","prefix","indexOf","shared_domain","cdn_part","host","join"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/@cloudinary/url-gen/backwards/utils/unsigned_url_prefix.js"],"sourcesContent":["import { OLD_AKAMAI_SHARED_CDN, SHARED_CDN } from \"../consts.js\";\nexport function unsigned_url_prefix(source, cloud_name, private_cdn, cdn_subdomain, secure_cdn_subdomain, cname, secure, secure_distribution) {\n    let prefix;\n    if (cloud_name.indexOf(\"/\") === 0) {\n        return '/res' + cloud_name;\n    }\n    let shared_domain = !private_cdn;\n    if (secure) {\n        if ((secure_distribution == null) || secure_distribution === OLD_AKAMAI_SHARED_CDN) {\n            secure_distribution = private_cdn ? cloud_name + \"-res.cloudinary.com\" : SHARED_CDN;\n        }\n        if (shared_domain == null) {\n            shared_domain = secure_distribution === SHARED_CDN;\n        }\n        prefix = 'https://' + secure_distribution;\n    }\n    else if (cname) {\n        // let subdomain = cdn_subdomain ? 'a' + ((crc32(source) % 5) + 1) + '.' : '';\n        prefix = 'http://' + cname;\n    }\n    else {\n        let cdn_part = private_cdn ? cloud_name + '-' : '';\n        let host = [cdn_part, 'res', '.cloudinary.com'].join('');\n        prefix = 'http://' + host;\n    }\n    if (shared_domain) {\n        prefix += '/' + cloud_name;\n    }\n    return prefix;\n}\n"],"mappings":"AAAA,SAASA,qBAAqB,EAAEC,UAAU,QAAQ,cAAc;AAChE,OAAO,SAASC,mBAAmB,CAACC,MAAM,EAAEC,UAAU,EAAEC,WAAW,EAAEC,aAAa,EAAEC,oBAAoB,EAAEC,KAAK,EAAEC,MAAM,EAAEC,mBAAmB,EAAE;EAC1I,IAAIC,MAAM;EACV,IAAIP,UAAU,CAACQ,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;IAC/B,OAAO,MAAM,GAAGR,UAAU;EAC9B;EACA,IAAIS,aAAa,GAAG,CAACR,WAAW;EAChC,IAAII,MAAM,EAAE;IACR,IAAKC,mBAAmB,IAAI,IAAI,IAAKA,mBAAmB,KAAKV,qBAAqB,EAAE;MAChFU,mBAAmB,GAAGL,WAAW,GAAGD,UAAU,GAAG,qBAAqB,GAAGH,UAAU;IACvF;IACA,IAAIY,aAAa,IAAI,IAAI,EAAE;MACvBA,aAAa,GAAGH,mBAAmB,KAAKT,UAAU;IACtD;IACAU,MAAM,GAAG,UAAU,GAAGD,mBAAmB;EAC7C,CAAC,MACI,IAAIF,KAAK,EAAE;IACZ;IACAG,MAAM,GAAG,SAAS,GAAGH,KAAK;EAC9B,CAAC,MACI;IACD,IAAIM,QAAQ,GAAGT,WAAW,GAAGD,UAAU,GAAG,GAAG,GAAG,EAAE;IAClD,IAAIW,IAAI,GAAG,CAACD,QAAQ,EAAE,KAAK,EAAE,iBAAiB,CAAC,CAACE,IAAI,CAAC,EAAE,CAAC;IACxDL,MAAM,GAAG,SAAS,GAAGI,IAAI;EAC7B;EACA,IAAIF,aAAa,EAAE;IACfF,MAAM,IAAI,GAAG,GAAGP,UAAU;EAC9B;EACA,OAAOO,MAAM;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}