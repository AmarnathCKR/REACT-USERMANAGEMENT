{"ast":null,"code":"// Based on CGI::unescape. In addition does not escape / :\n// smart_escape = (string)->\n//  encodeURIComponent(string).replace(/%3A/g, \":\").replace(/%2F/g, \"/\")\nexport function smartEscape(string) {\n  let unsafe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /([^a-zA-Z0-9_.\\-\\/:]+)/g;\n  return string.replace(unsafe, function (match) {\n    return match.split(\"\").map(function (c) {\n      return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n    }).join(\"\");\n  });\n}","map":{"version":3,"names":["smartEscape","string","unsafe","replace","match","split","map","c","charCodeAt","toString","toUpperCase","join"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/@cloudinary/transformation-builder-sdk/backwards/utils/smartEscape.js"],"sourcesContent":["// Based on CGI::unescape. In addition does not escape / :\n// smart_escape = (string)->\n//  encodeURIComponent(string).replace(/%3A/g, \":\").replace(/%2F/g, \"/\")\nexport function smartEscape(string, unsafe = /([^a-zA-Z0-9_.\\-\\/:]+)/g) {\n    return string.replace(unsafe, function (match) {\n        return match.split(\"\").map(function (c) {\n            return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n        }).join(\"\");\n    });\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,SAASA,WAAW,CAACC,MAAM,EAAsC;EAAA,IAApCC,MAAM,uEAAG,yBAAyB;EAClE,OAAOD,MAAM,CAACE,OAAO,CAACD,MAAM,EAAE,UAAUE,KAAK,EAAE;IAC3C,OAAOA,KAAK,CAACC,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,UAAUC,CAAC,EAAE;MACpC,OAAO,GAAG,GAAGA,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,WAAW,EAAE;IAC3D,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;EACf,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}