{"ast":null,"code":"/* eslint-disable no-bitwise */\n// http://kevin.vanzonneveld.net\n// +   original by: Webtoolkit.info (http://www.webtoolkit.info/)\n// +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n// +   improved by: sowberry\n// +    tweaked by: Jack\n// +   bugfixed by: Onno Marsman\n// +   improved by: Yves Sucaet\n// +   bugfixed by: Onno Marsman\n// +   bugfixed by: Ulrich\n// +   bugfixed by: Rafal Kukawski\n// +   improved by: kirilloid\n// *     example 1: utf8_encode('Kevin van Zonneveld')\n// *     returns 1: 'Kevin van Zonneveld'\n\n/**\n * Encode the given string\n * @private\n * @param {string} argString the string to encode\n * @return {string}\n */\nmodule.exports = function utf8_encode(argString) {\n  let c1, enc, n;\n  if (argString == null) {\n    return \"\";\n  }\n  let string = argString + \"\";\n  let utftext = \"\";\n  let start = 0;\n  let end = 0;\n  let stringl = string.length;\n  n = 0;\n  while (n < stringl) {\n    c1 = string.charCodeAt(n);\n    enc = null;\n    if (c1 < 128) {\n      end++;\n    } else if (c1 > 127 && c1 < 2048) {\n      enc = String.fromCharCode(c1 >> 6 | 192, c1 & 63 | 128);\n    } else {\n      enc = String.fromCharCode(c1 >> 12 | 224, c1 >> 6 & 63 | 128, c1 & 63 | 128);\n    }\n    if (enc !== null) {\n      if (end > start) {\n        utftext += string.slice(start, end);\n      }\n      utftext += enc;\n      start = n + 1;\n      end = start;\n    }\n    n++;\n  }\n  if (end > start) {\n    utftext += string.slice(start, stringl);\n  }\n  return utftext;\n};","map":{"version":3,"names":["module","exports","utf8_encode","argString","c1","enc","n","string","utftext","start","end","stringl","length","charCodeAt","String","fromCharCode","slice"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/cloudinary/lib/utils/utf8_encode.js"],"sourcesContent":["/* eslint-disable no-bitwise */\n// http://kevin.vanzonneveld.net\n// +   original by: Webtoolkit.info (http://www.webtoolkit.info/)\n// +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n// +   improved by: sowberry\n// +    tweaked by: Jack\n// +   bugfixed by: Onno Marsman\n// +   improved by: Yves Sucaet\n// +   bugfixed by: Onno Marsman\n// +   bugfixed by: Ulrich\n// +   bugfixed by: Rafal Kukawski\n// +   improved by: kirilloid\n// *     example 1: utf8_encode('Kevin van Zonneveld')\n// *     returns 1: 'Kevin van Zonneveld'\n\n/**\n * Encode the given string\n * @private\n * @param {string} argString the string to encode\n * @return {string}\n */\nmodule.exports = function utf8_encode(argString) {\n  let c1, enc, n;\n  if (argString == null) {\n    return \"\";\n  }\n  let string = argString + \"\";\n  let utftext = \"\";\n  let start = 0;\n  let end = 0;\n  let stringl = string.length;\n  n = 0;\n  while (n < stringl) {\n    c1 = string.charCodeAt(n);\n    enc = null;\n    if (c1 < 128) {\n      end++;\n    } else if (c1 > 127 && c1 < 2048) {\n      enc = String.fromCharCode((c1 >> 6) | 192, (c1 & 63) | 128);\n    } else {\n      enc = String.fromCharCode((c1 >> 12) | 224, ((c1 >> 6) & 63) | 128, (c1 & 63) | 128);\n    }\n    if (enc !== null) {\n      if (end > start) {\n        utftext += string.slice(start, end);\n      }\n      utftext += enc;\n      start = n + 1;\n      end = start;\n    }\n    n++;\n  }\n  if (end > start) {\n    utftext += string.slice(start, stringl);\n  }\n  return utftext;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,OAAO,GAAG,SAASC,WAAW,CAACC,SAAS,EAAE;EAC/C,IAAIC,EAAE,EAAEC,GAAG,EAAEC,CAAC;EACd,IAAIH,SAAS,IAAI,IAAI,EAAE;IACrB,OAAO,EAAE;EACX;EACA,IAAII,MAAM,GAAGJ,SAAS,GAAG,EAAE;EAC3B,IAAIK,OAAO,GAAG,EAAE;EAChB,IAAIC,KAAK,GAAG,CAAC;EACb,IAAIC,GAAG,GAAG,CAAC;EACX,IAAIC,OAAO,GAAGJ,MAAM,CAACK,MAAM;EAC3BN,CAAC,GAAG,CAAC;EACL,OAAOA,CAAC,GAAGK,OAAO,EAAE;IAClBP,EAAE,GAAGG,MAAM,CAACM,UAAU,CAACP,CAAC,CAAC;IACzBD,GAAG,GAAG,IAAI;IACV,IAAID,EAAE,GAAG,GAAG,EAAE;MACZM,GAAG,EAAE;IACP,CAAC,MAAM,IAAIN,EAAE,GAAG,GAAG,IAAIA,EAAE,GAAG,IAAI,EAAE;MAChCC,GAAG,GAAGS,MAAM,CAACC,YAAY,CAAEX,EAAE,IAAI,CAAC,GAAI,GAAG,EAAGA,EAAE,GAAG,EAAE,GAAI,GAAG,CAAC;IAC7D,CAAC,MAAM;MACLC,GAAG,GAAGS,MAAM,CAACC,YAAY,CAAEX,EAAE,IAAI,EAAE,GAAI,GAAG,EAAIA,EAAE,IAAI,CAAC,GAAI,EAAE,GAAI,GAAG,EAAGA,EAAE,GAAG,EAAE,GAAI,GAAG,CAAC;IACtF;IACA,IAAIC,GAAG,KAAK,IAAI,EAAE;MAChB,IAAIK,GAAG,GAAGD,KAAK,EAAE;QACfD,OAAO,IAAID,MAAM,CAACS,KAAK,CAACP,KAAK,EAAEC,GAAG,CAAC;MACrC;MACAF,OAAO,IAAIH,GAAG;MACdI,KAAK,GAAGH,CAAC,GAAG,CAAC;MACbI,GAAG,GAAGD,KAAK;IACb;IACAH,CAAC,EAAE;EACL;EACA,IAAII,GAAG,GAAGD,KAAK,EAAE;IACfD,OAAO,IAAID,MAAM,CAACS,KAAK,CAACP,KAAK,EAAEE,OAAO,CAAC;EACzC;EACA,OAAOH,OAAO;AAChB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}