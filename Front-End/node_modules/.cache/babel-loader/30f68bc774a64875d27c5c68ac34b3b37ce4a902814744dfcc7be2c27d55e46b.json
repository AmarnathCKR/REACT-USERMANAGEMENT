{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar parseInt = require('../internals/number-parse-int');\nvar INVALID_NUMBER_REPRESENTATION = 'Invalid number representation';\nvar INVALID_RADIX = 'Invalid radix';\nvar $RangeError = RangeError;\nvar $SyntaxError = SyntaxError;\nvar $TypeError = TypeError;\nvar valid = /^[\\da-z]+$/;\nvar charAt = uncurryThis(''.charAt);\nvar exec = uncurryThis(valid.exec);\nvar numberToString = uncurryThis(1.0.toString);\nvar stringSlice = uncurryThis(''.slice);\n\n// `Number.fromString` method\n// https://github.com/tc39/proposal-number-fromstring\n$({\n  target: 'Number',\n  stat: true,\n  forced: true\n}, {\n  fromString: function fromString(string, radix) {\n    var sign = 1;\n    var R, mathNum;\n    if (typeof string != 'string') throw $TypeError(INVALID_NUMBER_REPRESENTATION);\n    if (!string.length) throw $SyntaxError(INVALID_NUMBER_REPRESENTATION);\n    if (charAt(string, 0) == '-') {\n      sign = -1;\n      string = stringSlice(string, 1);\n      if (!string.length) throw $SyntaxError(INVALID_NUMBER_REPRESENTATION);\n    }\n    R = radix === undefined ? 10 : toIntegerOrInfinity(radix);\n    if (R < 2 || R > 36) throw $RangeError(INVALID_RADIX);\n    if (!exec(valid, string) || numberToString(mathNum = parseInt(string, R), R) !== string) {\n      throw $SyntaxError(INVALID_NUMBER_REPRESENTATION);\n    }\n    return sign * mathNum;\n  }\n});","map":{"version":3,"names":["$","require","uncurryThis","toIntegerOrInfinity","parseInt","INVALID_NUMBER_REPRESENTATION","INVALID_RADIX","$RangeError","RangeError","$SyntaxError","SyntaxError","$TypeError","TypeError","valid","charAt","exec","numberToString","toString","stringSlice","slice","target","stat","forced","fromString","string","radix","sign","R","mathNum","length","undefined"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/core-js/modules/esnext.number.from-string.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar parseInt = require('../internals/number-parse-int');\n\nvar INVALID_NUMBER_REPRESENTATION = 'Invalid number representation';\nvar INVALID_RADIX = 'Invalid radix';\nvar $RangeError = RangeError;\nvar $SyntaxError = SyntaxError;\nvar $TypeError = TypeError;\nvar valid = /^[\\da-z]+$/;\nvar charAt = uncurryThis(''.charAt);\nvar exec = uncurryThis(valid.exec);\nvar numberToString = uncurryThis(1.0.toString);\nvar stringSlice = uncurryThis(''.slice);\n\n// `Number.fromString` method\n// https://github.com/tc39/proposal-number-fromstring\n$({ target: 'Number', stat: true, forced: true }, {\n  fromString: function fromString(string, radix) {\n    var sign = 1;\n    var R, mathNum;\n    if (typeof string != 'string') throw $TypeError(INVALID_NUMBER_REPRESENTATION);\n    if (!string.length) throw $SyntaxError(INVALID_NUMBER_REPRESENTATION);\n    if (charAt(string, 0) == '-') {\n      sign = -1;\n      string = stringSlice(string, 1);\n      if (!string.length) throw $SyntaxError(INVALID_NUMBER_REPRESENTATION);\n    }\n    R = radix === undefined ? 10 : toIntegerOrInfinity(radix);\n    if (R < 2 || R > 36) throw $RangeError(INVALID_RADIX);\n    if (!exec(valid, string) || numberToString(mathNum = parseInt(string, R), R) !== string) {\n      throw $SyntaxError(INVALID_NUMBER_REPRESENTATION);\n    }\n    return sign * mathNum;\n  }\n});\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACtC,IAAIC,WAAW,GAAGD,OAAO,CAAC,oCAAoC,CAAC;AAC/D,IAAIE,mBAAmB,GAAGF,OAAO,CAAC,qCAAqC,CAAC;AACxE,IAAIG,QAAQ,GAAGH,OAAO,CAAC,+BAA+B,CAAC;AAEvD,IAAII,6BAA6B,GAAG,+BAA+B;AACnE,IAAIC,aAAa,GAAG,eAAe;AACnC,IAAIC,WAAW,GAAGC,UAAU;AAC5B,IAAIC,YAAY,GAAGC,WAAW;AAC9B,IAAIC,UAAU,GAAGC,SAAS;AAC1B,IAAIC,KAAK,GAAG,YAAY;AACxB,IAAIC,MAAM,GAAGZ,WAAW,CAAC,EAAE,CAACY,MAAM,CAAC;AACnC,IAAIC,IAAI,GAAGb,WAAW,CAACW,KAAK,CAACE,IAAI,CAAC;AAClC,IAAIC,cAAc,GAAGd,WAAW,CAAC,GAAG,CAACe,QAAQ,CAAC;AAC9C,IAAIC,WAAW,GAAGhB,WAAW,CAAC,EAAE,CAACiB,KAAK,CAAC;;AAEvC;AACA;AACAnB,CAAC,CAAC;EAAEoB,MAAM,EAAE,QAAQ;EAAEC,IAAI,EAAE,IAAI;EAAEC,MAAM,EAAE;AAAK,CAAC,EAAE;EAChDC,UAAU,EAAE,SAASA,UAAU,CAACC,MAAM,EAAEC,KAAK,EAAE;IAC7C,IAAIC,IAAI,GAAG,CAAC;IACZ,IAAIC,CAAC,EAAEC,OAAO;IACd,IAAI,OAAOJ,MAAM,IAAI,QAAQ,EAAE,MAAMb,UAAU,CAACN,6BAA6B,CAAC;IAC9E,IAAI,CAACmB,MAAM,CAACK,MAAM,EAAE,MAAMpB,YAAY,CAACJ,6BAA6B,CAAC;IACrE,IAAIS,MAAM,CAACU,MAAM,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE;MAC5BE,IAAI,GAAG,CAAC,CAAC;MACTF,MAAM,GAAGN,WAAW,CAACM,MAAM,EAAE,CAAC,CAAC;MAC/B,IAAI,CAACA,MAAM,CAACK,MAAM,EAAE,MAAMpB,YAAY,CAACJ,6BAA6B,CAAC;IACvE;IACAsB,CAAC,GAAGF,KAAK,KAAKK,SAAS,GAAG,EAAE,GAAG3B,mBAAmB,CAACsB,KAAK,CAAC;IACzD,IAAIE,CAAC,GAAG,CAAC,IAAIA,CAAC,GAAG,EAAE,EAAE,MAAMpB,WAAW,CAACD,aAAa,CAAC;IACrD,IAAI,CAACS,IAAI,CAACF,KAAK,EAAEW,MAAM,CAAC,IAAIR,cAAc,CAACY,OAAO,GAAGxB,QAAQ,CAACoB,MAAM,EAAEG,CAAC,CAAC,EAAEA,CAAC,CAAC,KAAKH,MAAM,EAAE;MACvF,MAAMf,YAAY,CAACJ,6BAA6B,CAAC;IACnD;IACA,OAAOqB,IAAI,GAAGE,OAAO;EACvB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}