{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar thisNumberValue = require('../internals/this-number-value');\nvar $repeat = require('../internals/string-repeat');\nvar log10 = require('../internals/math-log10');\nvar fails = require('../internals/fails');\nvar $RangeError = RangeError;\nvar $String = String;\nvar $isFinite = isFinite;\nvar abs = Math.abs;\nvar floor = Math.floor;\nvar pow = Math.pow;\nvar round = Math.round;\nvar nativeToExponential = uncurryThis(1.0.toExponential);\nvar repeat = uncurryThis($repeat);\nvar stringSlice = uncurryThis(''.slice);\n\n// Edge 17-\nvar ROUNDS_PROPERLY = nativeToExponential(-6.9e-11, 4) === '-6.9000e-11'\n// IE11- && Edge 14-\n&& nativeToExponential(1.255, 2) === '1.25e+0'\n// FF86-, V8 ~ Chrome 49-50\n&& nativeToExponential(12345, 3) === '1.235e+4'\n// FF86-, V8 ~ Chrome 49-50\n&& nativeToExponential(25, 0) === '3e+1';\n\n// IE8-\nvar throwsOnInfinityFraction = function () {\n  return fails(function () {\n    nativeToExponential(1, Infinity);\n  }) && fails(function () {\n    nativeToExponential(1, -Infinity);\n  });\n};\n\n// Safari <11 && FF <50\nvar properNonFiniteThisCheck = function () {\n  return !fails(function () {\n    nativeToExponential(Infinity, Infinity);\n    nativeToExponential(NaN, Infinity);\n  });\n};\nvar FORCED = !ROUNDS_PROPERLY || !throwsOnInfinityFraction() || !properNonFiniteThisCheck();\n\n// `Number.prototype.toExponential` method\n// https://tc39.es/ecma262/#sec-number.prototype.toexponential\n$({\n  target: 'Number',\n  proto: true,\n  forced: FORCED\n}, {\n  toExponential: function toExponential(fractionDigits) {\n    var x = thisNumberValue(this);\n    if (fractionDigits === undefined) return nativeToExponential(x);\n    var f = toIntegerOrInfinity(fractionDigits);\n    if (!$isFinite(x)) return String(x);\n    // TODO: ES2018 increased the maximum number of fraction digits to 100, need to improve the implementation\n    if (f < 0 || f > 20) throw $RangeError('Incorrect fraction digits');\n    if (ROUNDS_PROPERLY) return nativeToExponential(x, f);\n    var s = '';\n    var m = '';\n    var e = 0;\n    var c = '';\n    var d = '';\n    if (x < 0) {\n      s = '-';\n      x = -x;\n    }\n    if (x === 0) {\n      e = 0;\n      m = repeat('0', f + 1);\n    } else {\n      // this block is based on https://gist.github.com/SheetJSDev/1100ad56b9f856c95299ed0e068eea08\n      // TODO: improve accuracy with big fraction digits\n      var l = log10(x);\n      e = floor(l);\n      var n = 0;\n      var w = pow(10, e - f);\n      n = round(x / w);\n      if (2 * x >= (2 * n + 1) * w) {\n        n += 1;\n      }\n      if (n >= pow(10, f + 1)) {\n        n /= 10;\n        e += 1;\n      }\n      m = $String(n);\n    }\n    if (f !== 0) {\n      m = stringSlice(m, 0, 1) + '.' + stringSlice(m, 1);\n    }\n    if (e === 0) {\n      c = '+';\n      d = '0';\n    } else {\n      c = e > 0 ? '+' : '-';\n      d = $String(abs(e));\n    }\n    m += 'e' + c + d;\n    return s + m;\n  }\n});","map":{"version":3,"names":["$","require","uncurryThis","toIntegerOrInfinity","thisNumberValue","$repeat","log10","fails","$RangeError","RangeError","$String","String","$isFinite","isFinite","abs","Math","floor","pow","round","nativeToExponential","toExponential","repeat","stringSlice","slice","ROUNDS_PROPERLY","throwsOnInfinityFraction","Infinity","properNonFiniteThisCheck","NaN","FORCED","target","proto","forced","fractionDigits","x","undefined","f","s","m","e","c","d","l","n","w"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/core-js/modules/es.number.to-exponential.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar thisNumberValue = require('../internals/this-number-value');\nvar $repeat = require('../internals/string-repeat');\nvar log10 = require('../internals/math-log10');\nvar fails = require('../internals/fails');\n\nvar $RangeError = RangeError;\nvar $String = String;\nvar $isFinite = isFinite;\nvar abs = Math.abs;\nvar floor = Math.floor;\nvar pow = Math.pow;\nvar round = Math.round;\nvar nativeToExponential = uncurryThis(1.0.toExponential);\nvar repeat = uncurryThis($repeat);\nvar stringSlice = uncurryThis(''.slice);\n\n// Edge 17-\nvar ROUNDS_PROPERLY = nativeToExponential(-6.9e-11, 4) === '-6.9000e-11'\n  // IE11- && Edge 14-\n  && nativeToExponential(1.255, 2) === '1.25e+0'\n  // FF86-, V8 ~ Chrome 49-50\n  && nativeToExponential(12345, 3) === '1.235e+4'\n  // FF86-, V8 ~ Chrome 49-50\n  && nativeToExponential(25, 0) === '3e+1';\n\n// IE8-\nvar throwsOnInfinityFraction = function () {\n  return fails(function () {\n    nativeToExponential(1, Infinity);\n  }) && fails(function () {\n    nativeToExponential(1, -Infinity);\n  });\n};\n\n// Safari <11 && FF <50\nvar properNonFiniteThisCheck = function () {\n  return !fails(function () {\n    nativeToExponential(Infinity, Infinity);\n    nativeToExponential(NaN, Infinity);\n  });\n};\n\nvar FORCED = !ROUNDS_PROPERLY || !throwsOnInfinityFraction() || !properNonFiniteThisCheck();\n\n// `Number.prototype.toExponential` method\n// https://tc39.es/ecma262/#sec-number.prototype.toexponential\n$({ target: 'Number', proto: true, forced: FORCED }, {\n  toExponential: function toExponential(fractionDigits) {\n    var x = thisNumberValue(this);\n    if (fractionDigits === undefined) return nativeToExponential(x);\n    var f = toIntegerOrInfinity(fractionDigits);\n    if (!$isFinite(x)) return String(x);\n    // TODO: ES2018 increased the maximum number of fraction digits to 100, need to improve the implementation\n    if (f < 0 || f > 20) throw $RangeError('Incorrect fraction digits');\n    if (ROUNDS_PROPERLY) return nativeToExponential(x, f);\n    var s = '';\n    var m = '';\n    var e = 0;\n    var c = '';\n    var d = '';\n    if (x < 0) {\n      s = '-';\n      x = -x;\n    }\n    if (x === 0) {\n      e = 0;\n      m = repeat('0', f + 1);\n    } else {\n      // this block is based on https://gist.github.com/SheetJSDev/1100ad56b9f856c95299ed0e068eea08\n      // TODO: improve accuracy with big fraction digits\n      var l = log10(x);\n      e = floor(l);\n      var n = 0;\n      var w = pow(10, e - f);\n      n = round(x / w);\n      if (2 * x >= (2 * n + 1) * w) {\n        n += 1;\n      }\n      if (n >= pow(10, f + 1)) {\n        n /= 10;\n        e += 1;\n      }\n      m = $String(n);\n    }\n    if (f !== 0) {\n      m = stringSlice(m, 0, 1) + '.' + stringSlice(m, 1);\n    }\n    if (e === 0) {\n      c = '+';\n      d = '0';\n    } else {\n      c = e > 0 ? '+' : '-';\n      d = $String(abs(e));\n    }\n    m += 'e' + c + d;\n    return s + m;\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}