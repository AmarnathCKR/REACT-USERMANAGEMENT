{"ast":null,"code":"import Config from \"./BaseConfig.js\";\nimport { ALLOWED_URL_CONFIG } from \"../internal/internalConstants.js\";\nclass URLConfig extends Config {\n  /**\n   * @param {IURLConfig} userURLConfig\n   */\n  constructor(userURLConfig) {\n    super();\n    const urlConfig = this.filterOutNonSupportedKeys(userURLConfig, ALLOWED_URL_CONFIG);\n    Object.assign(this, {\n      secure: true\n    }, urlConfig);\n  }\n  extend(userURLConfig) {\n    const urlConfig = this.filterOutNonSupportedKeys(userURLConfig, ALLOWED_URL_CONFIG);\n    return new URLConfig(Object.assign({}, this, urlConfig));\n  }\n  /**\n   * @param {string} value Sets the cname\n   */\n  setCname(value) {\n    this.cname = value;\n    return this;\n  }\n  /**\n   * @param {string} value Sets the secureDistribution\n   */\n  setSecureDistribution(value) {\n    this.secureDistribution = value;\n    return this;\n  }\n  /**\n   * @param {boolean} value Sets whether to use a private CDN (Removes cloudName from URL)\n   */\n  setPrivateCdn(value) {\n    this.privateCdn = value;\n    return this;\n  }\n  /**\n   * @param value Sets whether or not to sign the URL\n   */\n  setSignUrl(value) {\n    this.signUrl = value;\n    return this;\n  }\n  /**\n   * @param value Sets whether or not to use a long signature\n   */\n  setLongUrlSignature(value) {\n    this.longUrlSignature = value;\n    return this;\n  }\n  /**\n   * @param value Sets whether or not to shorten the URL\n   */\n  setShorten(value) {\n    this.shorten = value;\n    return this;\n  }\n  /**\n   * @param value Sets whether or not to use a root path\n   */\n  setUseRootPath(value) {\n    this.useRootPath = value;\n    return this;\n  }\n  /**\n   * @param value Sets whether or not to deliver the asset through https\n   */\n  setSecure(value) {\n    this.secure = value;\n    return this;\n  }\n  /**\n   * @param value Sets whether to force a version in the URL\n   */\n  setForceVersion(value) {\n    this.forceVersion = value;\n    return this;\n  }\n}\nexport default URLConfig;","map":{"version":3,"names":["Config","ALLOWED_URL_CONFIG","URLConfig","constructor","userURLConfig","urlConfig","filterOutNonSupportedKeys","Object","assign","secure","extend","setCname","value","cname","setSecureDistribution","secureDistribution","setPrivateCdn","privateCdn","setSignUrl","signUrl","setLongUrlSignature","longUrlSignature","setShorten","shorten","setUseRootPath","useRootPath","setSecure","setForceVersion","forceVersion"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/@cloudinary/url-gen/config/URLConfig.js"],"sourcesContent":["import Config from \"./BaseConfig.js\";\nimport { ALLOWED_URL_CONFIG } from \"../internal/internalConstants.js\";\nclass URLConfig extends Config {\n    /**\n     * @param {IURLConfig} userURLConfig\n     */\n    constructor(userURLConfig) {\n        super();\n        const urlConfig = this.filterOutNonSupportedKeys(userURLConfig, ALLOWED_URL_CONFIG);\n        Object.assign(this, {\n            secure: true\n        }, urlConfig);\n    }\n    extend(userURLConfig) {\n        const urlConfig = this.filterOutNonSupportedKeys(userURLConfig, ALLOWED_URL_CONFIG);\n        return new URLConfig(Object.assign({}, this, urlConfig));\n    }\n    /**\n     * @param {string} value Sets the cname\n     */\n    setCname(value) {\n        this.cname = value;\n        return this;\n    }\n    /**\n     * @param {string} value Sets the secureDistribution\n     */\n    setSecureDistribution(value) {\n        this.secureDistribution = value;\n        return this;\n    }\n    /**\n     * @param {boolean} value Sets whether to use a private CDN (Removes cloudName from URL)\n     */\n    setPrivateCdn(value) {\n        this.privateCdn = value;\n        return this;\n    }\n    /**\n     * @param value Sets whether or not to sign the URL\n     */\n    setSignUrl(value) {\n        this.signUrl = value;\n        return this;\n    }\n    /**\n     * @param value Sets whether or not to use a long signature\n     */\n    setLongUrlSignature(value) {\n        this.longUrlSignature = value;\n        return this;\n    }\n    /**\n     * @param value Sets whether or not to shorten the URL\n     */\n    setShorten(value) {\n        this.shorten = value;\n        return this;\n    }\n    /**\n     * @param value Sets whether or not to use a root path\n     */\n    setUseRootPath(value) {\n        this.useRootPath = value;\n        return this;\n    }\n    /**\n     * @param value Sets whether or not to deliver the asset through https\n     */\n    setSecure(value) {\n        this.secure = value;\n        return this;\n    }\n    /**\n     * @param value Sets whether to force a version in the URL\n     */\n    setForceVersion(value) {\n        this.forceVersion = value;\n        return this;\n    }\n}\nexport default URLConfig;\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,iBAAiB;AACpC,SAASC,kBAAkB,QAAQ,kCAAkC;AACrE,MAAMC,SAAS,SAASF,MAAM,CAAC;EAC3B;AACJ;AACA;EACIG,WAAW,CAACC,aAAa,EAAE;IACvB,KAAK,EAAE;IACP,MAAMC,SAAS,GAAG,IAAI,CAACC,yBAAyB,CAACF,aAAa,EAAEH,kBAAkB,CAAC;IACnFM,MAAM,CAACC,MAAM,CAAC,IAAI,EAAE;MAChBC,MAAM,EAAE;IACZ,CAAC,EAAEJ,SAAS,CAAC;EACjB;EACAK,MAAM,CAACN,aAAa,EAAE;IAClB,MAAMC,SAAS,GAAG,IAAI,CAACC,yBAAyB,CAACF,aAAa,EAAEH,kBAAkB,CAAC;IACnF,OAAO,IAAIC,SAAS,CAACK,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,EAAEH,SAAS,CAAC,CAAC;EAC5D;EACA;AACJ;AACA;EACIM,QAAQ,CAACC,KAAK,EAAE;IACZ,IAAI,CAACC,KAAK,GAAGD,KAAK;IAClB,OAAO,IAAI;EACf;EACA;AACJ;AACA;EACIE,qBAAqB,CAACF,KAAK,EAAE;IACzB,IAAI,CAACG,kBAAkB,GAAGH,KAAK;IAC/B,OAAO,IAAI;EACf;EACA;AACJ;AACA;EACII,aAAa,CAACJ,KAAK,EAAE;IACjB,IAAI,CAACK,UAAU,GAAGL,KAAK;IACvB,OAAO,IAAI;EACf;EACA;AACJ;AACA;EACIM,UAAU,CAACN,KAAK,EAAE;IACd,IAAI,CAACO,OAAO,GAAGP,KAAK;IACpB,OAAO,IAAI;EACf;EACA;AACJ;AACA;EACIQ,mBAAmB,CAACR,KAAK,EAAE;IACvB,IAAI,CAACS,gBAAgB,GAAGT,KAAK;IAC7B,OAAO,IAAI;EACf;EACA;AACJ;AACA;EACIU,UAAU,CAACV,KAAK,EAAE;IACd,IAAI,CAACW,OAAO,GAAGX,KAAK;IACpB,OAAO,IAAI;EACf;EACA;AACJ;AACA;EACIY,cAAc,CAACZ,KAAK,EAAE;IAClB,IAAI,CAACa,WAAW,GAAGb,KAAK;IACxB,OAAO,IAAI;EACf;EACA;AACJ;AACA;EACIc,SAAS,CAACd,KAAK,EAAE;IACb,IAAI,CAACH,MAAM,GAAGG,KAAK;IACnB,OAAO,IAAI;EACf;EACA;AACJ;AACA;EACIe,eAAe,CAACf,KAAK,EAAE;IACnB,IAAI,CAACgB,YAAY,GAAGhB,KAAK;IACzB,OAAO,IAAI;EACf;AACJ;AACA,eAAeV,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}