{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar fails = require('../internals/fails');\nvar $Array = Array;\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar join = uncurryThis([].join);\nvar $toWellFormed = ''.toWellFormed;\nvar REPLACEMENT_CHARACTER = '\\uFFFD';\n\n// Safari bug\nvar TO_STRING_CONVERSION_BUG = $toWellFormed && fails(function () {\n  return call($toWellFormed, 1) !== '1';\n});\n\n// `String.prototype.toWellFormed` method\n// https://github.com/tc39/proposal-is-usv-string\n$({\n  target: 'String',\n  proto: true,\n  forced: TO_STRING_CONVERSION_BUG\n}, {\n  toWellFormed: function toWellFormed() {\n    var S = toString(requireObjectCoercible(this));\n    if (TO_STRING_CONVERSION_BUG) return call($toWellFormed, S);\n    var length = S.length;\n    var result = $Array(length);\n    for (var i = 0; i < length; i++) {\n      var charCode = charCodeAt(S, i);\n      // single UTF-16 code unit\n      if ((charCode & 0xF800) != 0xD800) result[i] = charAt(S, i);\n      // unpaired surrogate\n      else if (charCode >= 0xDC00 || i + 1 >= length || (charCodeAt(S, i + 1) & 0xFC00) != 0xDC00) result[i] = REPLACEMENT_CHARACTER;\n      // surrogate pair\n      else {\n        result[i] = charAt(S, i);\n        result[++i] = charAt(S, i);\n      }\n    }\n    return join(result, '');\n  }\n});","map":{"version":3,"names":["$","require","call","uncurryThis","requireObjectCoercible","toString","fails","$Array","Array","charAt","charCodeAt","join","$toWellFormed","toWellFormed","REPLACEMENT_CHARACTER","TO_STRING_CONVERSION_BUG","target","proto","forced","S","length","result","i","charCode"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/core-js/modules/esnext.string.to-well-formed.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar fails = require('../internals/fails');\n\nvar $Array = Array;\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar join = uncurryThis([].join);\nvar $toWellFormed = ''.toWellFormed;\nvar REPLACEMENT_CHARACTER = '\\uFFFD';\n\n// Safari bug\nvar TO_STRING_CONVERSION_BUG = $toWellFormed && fails(function () {\n  return call($toWellFormed, 1) !== '1';\n});\n\n// `String.prototype.toWellFormed` method\n// https://github.com/tc39/proposal-is-usv-string\n$({ target: 'String', proto: true, forced: TO_STRING_CONVERSION_BUG }, {\n  toWellFormed: function toWellFormed() {\n    var S = toString(requireObjectCoercible(this));\n    if (TO_STRING_CONVERSION_BUG) return call($toWellFormed, S);\n    var length = S.length;\n    var result = $Array(length);\n    for (var i = 0; i < length; i++) {\n      var charCode = charCodeAt(S, i);\n      // single UTF-16 code unit\n      if ((charCode & 0xF800) != 0xD800) result[i] = charAt(S, i);\n      // unpaired surrogate\n      else if (charCode >= 0xDC00 || i + 1 >= length || (charCodeAt(S, i + 1) & 0xFC00) != 0xDC00) result[i] = REPLACEMENT_CHARACTER;\n      // surrogate pair\n      else {\n        result[i] = charAt(S, i);\n        result[++i] = charAt(S, i);\n      }\n    } return join(result, '');\n  }\n});\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACtC,IAAIC,IAAI,GAAGD,OAAO,CAAC,4BAA4B,CAAC;AAChD,IAAIE,WAAW,GAAGF,OAAO,CAAC,oCAAoC,CAAC;AAC/D,IAAIG,sBAAsB,GAAGH,OAAO,CAAC,uCAAuC,CAAC;AAC7E,IAAII,QAAQ,GAAGJ,OAAO,CAAC,wBAAwB,CAAC;AAChD,IAAIK,KAAK,GAAGL,OAAO,CAAC,oBAAoB,CAAC;AAEzC,IAAIM,MAAM,GAAGC,KAAK;AAClB,IAAIC,MAAM,GAAGN,WAAW,CAAC,EAAE,CAACM,MAAM,CAAC;AACnC,IAAIC,UAAU,GAAGP,WAAW,CAAC,EAAE,CAACO,UAAU,CAAC;AAC3C,IAAIC,IAAI,GAAGR,WAAW,CAAC,EAAE,CAACQ,IAAI,CAAC;AAC/B,IAAIC,aAAa,GAAG,EAAE,CAACC,YAAY;AACnC,IAAIC,qBAAqB,GAAG,QAAQ;;AAEpC;AACA,IAAIC,wBAAwB,GAAGH,aAAa,IAAIN,KAAK,CAAC,YAAY;EAChE,OAAOJ,IAAI,CAACU,aAAa,EAAE,CAAC,CAAC,KAAK,GAAG;AACvC,CAAC,CAAC;;AAEF;AACA;AACAZ,CAAC,CAAC;EAAEgB,MAAM,EAAE,QAAQ;EAAEC,KAAK,EAAE,IAAI;EAAEC,MAAM,EAAEH;AAAyB,CAAC,EAAE;EACrEF,YAAY,EAAE,SAASA,YAAY,GAAG;IACpC,IAAIM,CAAC,GAAGd,QAAQ,CAACD,sBAAsB,CAAC,IAAI,CAAC,CAAC;IAC9C,IAAIW,wBAAwB,EAAE,OAAOb,IAAI,CAACU,aAAa,EAAEO,CAAC,CAAC;IAC3D,IAAIC,MAAM,GAAGD,CAAC,CAACC,MAAM;IACrB,IAAIC,MAAM,GAAGd,MAAM,CAACa,MAAM,CAAC;IAC3B,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,MAAM,EAAEE,CAAC,EAAE,EAAE;MAC/B,IAAIC,QAAQ,GAAGb,UAAU,CAACS,CAAC,EAAEG,CAAC,CAAC;MAC/B;MACA,IAAI,CAACC,QAAQ,GAAG,MAAM,KAAK,MAAM,EAAEF,MAAM,CAACC,CAAC,CAAC,GAAGb,MAAM,CAACU,CAAC,EAAEG,CAAC,CAAC;MAC3D;MAAA,KACK,IAAIC,QAAQ,IAAI,MAAM,IAAID,CAAC,GAAG,CAAC,IAAIF,MAAM,IAAI,CAACV,UAAU,CAACS,CAAC,EAAEG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,KAAK,MAAM,EAAED,MAAM,CAACC,CAAC,CAAC,GAAGR,qBAAqB;MAC9H;MAAA,KACK;QACHO,MAAM,CAACC,CAAC,CAAC,GAAGb,MAAM,CAACU,CAAC,EAAEG,CAAC,CAAC;QACxBD,MAAM,CAAC,EAAEC,CAAC,CAAC,GAAGb,MAAM,CAACU,CAAC,EAAEG,CAAC,CAAC;MAC5B;IACF;IAAE,OAAOX,IAAI,CAACU,MAAM,EAAE,EAAE,CAAC;EAC3B;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}