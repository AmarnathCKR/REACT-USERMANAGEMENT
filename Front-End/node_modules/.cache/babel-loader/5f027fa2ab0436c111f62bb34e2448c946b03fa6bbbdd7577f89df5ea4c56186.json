{"ast":null,"code":"'use strict';\n\n// TODO: Remove from `core-js@4`\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar isBigIntArray = require('../internals/is-big-int-array');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toBigInt = require('../internals/to-big-int');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar fails = require('../internals/fails');\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar getTypedArrayConstructor = ArrayBufferViewCore.getTypedArrayConstructor;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar max = Math.max;\nvar min = Math.min;\n\n// some early implementations, like WebKit, does not follow the final semantic\nvar PROPER_ORDER = !fails(function () {\n  // eslint-disable-next-line es/no-typed-arrays -- required for testing\n  var array = new Int8Array([1]);\n  var spliced = array.toSpliced(1, 0, {\n    valueOf: function () {\n      array[0] = 2;\n      return 3;\n    }\n  });\n  return spliced[0] !== 2 || spliced[1] !== 3;\n});\n\n// `%TypedArray%.prototype.toSpliced` method\n// https://tc39.es/proposal-change-array-by-copy/#sec-%typedarray%.prototype.toSpliced\nexportTypedArrayMethod('toSpliced', function toSpliced(start, deleteCount /* , ...items */) {\n  var O = aTypedArray(this);\n  var C = getTypedArrayConstructor(O);\n  var len = lengthOfArrayLike(O);\n  var actualStart = toAbsoluteIndex(start, len);\n  var argumentsLength = arguments.length;\n  var k = 0;\n  var insertCount, actualDeleteCount, thisIsBigIntArray, convertedItems, value, newLen, A;\n  if (argumentsLength === 0) {\n    insertCount = actualDeleteCount = 0;\n  } else if (argumentsLength === 1) {\n    insertCount = 0;\n    actualDeleteCount = len - actualStart;\n  } else {\n    actualDeleteCount = min(max(toIntegerOrInfinity(deleteCount), 0), len - actualStart);\n    insertCount = argumentsLength - 2;\n    if (insertCount) {\n      convertedItems = new C(insertCount);\n      thisIsBigIntArray = isBigIntArray(convertedItems);\n      for (var i = 2; i < argumentsLength; i++) {\n        value = arguments[i];\n        // FF30- typed arrays doesn't properly convert objects to typed array values\n        convertedItems[i - 2] = thisIsBigIntArray ? toBigInt(value) : +value;\n      }\n    }\n  }\n  newLen = len + insertCount - actualDeleteCount;\n  A = new C(newLen);\n  for (; k < actualStart; k++) A[k] = O[k];\n  for (; k < actualStart + insertCount; k++) A[k] = convertedItems[k - actualStart];\n  for (; k < newLen; k++) A[k] = O[k + actualDeleteCount - insertCount];\n  return A;\n}, !PROPER_ORDER);","map":{"version":3,"names":["ArrayBufferViewCore","require","lengthOfArrayLike","isBigIntArray","toAbsoluteIndex","toBigInt","toIntegerOrInfinity","fails","aTypedArray","getTypedArrayConstructor","exportTypedArrayMethod","max","Math","min","PROPER_ORDER","array","Int8Array","spliced","toSpliced","valueOf","start","deleteCount","O","C","len","actualStart","argumentsLength","arguments","length","k","insertCount","actualDeleteCount","thisIsBigIntArray","convertedItems","value","newLen","A","i"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/core-js/modules/esnext.typed-array.to-spliced.js"],"sourcesContent":["'use strict';\n// TODO: Remove from `core-js@4`\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar isBigIntArray = require('../internals/is-big-int-array');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toBigInt = require('../internals/to-big-int');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar fails = require('../internals/fails');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar getTypedArrayConstructor = ArrayBufferViewCore.getTypedArrayConstructor;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar max = Math.max;\nvar min = Math.min;\n\n// some early implementations, like WebKit, does not follow the final semantic\nvar PROPER_ORDER = !fails(function () {\n  // eslint-disable-next-line es/no-typed-arrays -- required for testing\n  var array = new Int8Array([1]);\n\n  var spliced = array.toSpliced(1, 0, {\n    valueOf: function () {\n      array[0] = 2;\n      return 3;\n    }\n  });\n\n  return spliced[0] !== 2 || spliced[1] !== 3;\n});\n\n// `%TypedArray%.prototype.toSpliced` method\n// https://tc39.es/proposal-change-array-by-copy/#sec-%typedarray%.prototype.toSpliced\nexportTypedArrayMethod('toSpliced', function toSpliced(start, deleteCount /* , ...items */) {\n  var O = aTypedArray(this);\n  var C = getTypedArrayConstructor(O);\n  var len = lengthOfArrayLike(O);\n  var actualStart = toAbsoluteIndex(start, len);\n  var argumentsLength = arguments.length;\n  var k = 0;\n  var insertCount, actualDeleteCount, thisIsBigIntArray, convertedItems, value, newLen, A;\n  if (argumentsLength === 0) {\n    insertCount = actualDeleteCount = 0;\n  } else if (argumentsLength === 1) {\n    insertCount = 0;\n    actualDeleteCount = len - actualStart;\n  } else {\n    actualDeleteCount = min(max(toIntegerOrInfinity(deleteCount), 0), len - actualStart);\n    insertCount = argumentsLength - 2;\n    if (insertCount) {\n      convertedItems = new C(insertCount);\n      thisIsBigIntArray = isBigIntArray(convertedItems);\n      for (var i = 2; i < argumentsLength; i++) {\n        value = arguments[i];\n        // FF30- typed arrays doesn't properly convert objects to typed array values\n        convertedItems[i - 2] = thisIsBigIntArray ? toBigInt(value) : +value;\n      }\n    }\n  }\n  newLen = len + insertCount - actualDeleteCount;\n  A = new C(newLen);\n\n  for (; k < actualStart; k++) A[k] = O[k];\n  for (; k < actualStart + insertCount; k++) A[k] = convertedItems[k - actualStart];\n  for (; k < newLen; k++) A[k] = O[k + actualDeleteCount - insertCount];\n\n  return A;\n}, !PROPER_ORDER);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}