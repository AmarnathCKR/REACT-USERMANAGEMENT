{"ast":null,"code":"import { Action } from \"../../internal/Action.js\";\nimport { AdvVideoCodecType } from \"../../qualifiers/videoCodecType/VideoCodecType.js\";\nimport { VIDEO_CODEC_TO_TRANSFORMATION } from \"../../qualifiers/videoCodec.js\";\n/**\n * @extends SDK.Action\n * @memberOf Actions.Transcode\n * @description Converts a video to an animated webp or gif.\n * @see Visit {@link Actions.Transcode|Transcode} for an example\n */\nclass VideoCodecAction extends Action {\n  constructor(videoCodecTypeQualifier) {\n    super();\n    this._actionModel = {\n      actionType: 'videoCodec'\n    };\n    this._actionModel.videoCodec = {\n      videoCodecName: videoCodecTypeQualifier.getType()\n    };\n    if (videoCodecTypeQualifier instanceof AdvVideoCodecType) {\n      if (videoCodecTypeQualifier.getProfile()) {\n        this._actionModel.videoCodec = Object.assign({\n          profile: videoCodecTypeQualifier.getProfile()\n        }, this._actionModel.videoCodec);\n      }\n      if (videoCodecTypeQualifier.getLevel()) {\n        this._actionModel.videoCodec = Object.assign({\n          level: videoCodecTypeQualifier.getLevel()\n        }, this._actionModel.videoCodec);\n      }\n    }\n    this.addQualifier(videoCodecTypeQualifier);\n  }\n  static fromJson(actionModel) {\n    const {\n      videoCodec\n    } = actionModel;\n    // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n    // This allows the inheriting classes to determine the class to be created\n    const result = new this(VIDEO_CODEC_TO_TRANSFORMATION[videoCodec.videoCodecName]);\n    //@ts-ignore\n    videoCodec.profile && new this(VIDEO_CODEC_TO_TRANSFORMATION[videoCodec.videoCodecName].profile(videoCodec.profile));\n    //@ts-ignore\n    videoCodec.level && new this(VIDEO_CODEC_TO_TRANSFORMATION[videoCodec.videoCodecName].level(videoCodec.level));\n    return result;\n  }\n}\nexport { VideoCodecAction };","map":{"version":3,"names":["Action","AdvVideoCodecType","VIDEO_CODEC_TO_TRANSFORMATION","VideoCodecAction","constructor","videoCodecTypeQualifier","_actionModel","actionType","videoCodec","videoCodecName","getType","getProfile","Object","assign","profile","getLevel","level","addQualifier","fromJson","actionModel","result"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/@cloudinary/transformation-builder-sdk/actions/transcode/VideoCodecAction.js"],"sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { AdvVideoCodecType } from \"../../qualifiers/videoCodecType/VideoCodecType.js\";\nimport { VIDEO_CODEC_TO_TRANSFORMATION } from \"../../qualifiers/videoCodec.js\";\n/**\n * @extends SDK.Action\n * @memberOf Actions.Transcode\n * @description Converts a video to an animated webp or gif.\n * @see Visit {@link Actions.Transcode|Transcode} for an example\n */\nclass VideoCodecAction extends Action {\n    constructor(videoCodecTypeQualifier) {\n        super();\n        this._actionModel = { actionType: 'videoCodec' };\n        this._actionModel.videoCodec = { videoCodecName: videoCodecTypeQualifier.getType() };\n        if (videoCodecTypeQualifier instanceof AdvVideoCodecType) {\n            if (videoCodecTypeQualifier.getProfile()) {\n                this._actionModel.videoCodec = Object.assign({ profile: videoCodecTypeQualifier.getProfile() }, this._actionModel.videoCodec);\n            }\n            if (videoCodecTypeQualifier.getLevel()) {\n                this._actionModel.videoCodec = Object.assign({ level: videoCodecTypeQualifier.getLevel() }, this._actionModel.videoCodec);\n            }\n        }\n        this.addQualifier(videoCodecTypeQualifier);\n    }\n    static fromJson(actionModel) {\n        const { videoCodec } = actionModel;\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n        // This allows the inheriting classes to determine the class to be created\n        const result = new this(VIDEO_CODEC_TO_TRANSFORMATION[videoCodec.videoCodecName]);\n        //@ts-ignore\n        videoCodec.profile && new this(VIDEO_CODEC_TO_TRANSFORMATION[videoCodec.videoCodecName].profile(videoCodec.profile));\n        //@ts-ignore\n        videoCodec.level && new this(VIDEO_CODEC_TO_TRANSFORMATION[videoCodec.videoCodecName].level(videoCodec.level));\n        return result;\n    }\n}\nexport { VideoCodecAction };\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,0BAA0B;AACjD,SAASC,iBAAiB,QAAQ,mDAAmD;AACrF,SAASC,6BAA6B,QAAQ,gCAAgC;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,SAASH,MAAM,CAAC;EAClCI,WAAW,CAACC,uBAAuB,EAAE;IACjC,KAAK,EAAE;IACP,IAAI,CAACC,YAAY,GAAG;MAAEC,UAAU,EAAE;IAAa,CAAC;IAChD,IAAI,CAACD,YAAY,CAACE,UAAU,GAAG;MAAEC,cAAc,EAAEJ,uBAAuB,CAACK,OAAO;IAAG,CAAC;IACpF,IAAIL,uBAAuB,YAAYJ,iBAAiB,EAAE;MACtD,IAAII,uBAAuB,CAACM,UAAU,EAAE,EAAE;QACtC,IAAI,CAACL,YAAY,CAACE,UAAU,GAAGI,MAAM,CAACC,MAAM,CAAC;UAAEC,OAAO,EAAET,uBAAuB,CAACM,UAAU;QAAG,CAAC,EAAE,IAAI,CAACL,YAAY,CAACE,UAAU,CAAC;MACjI;MACA,IAAIH,uBAAuB,CAACU,QAAQ,EAAE,EAAE;QACpC,IAAI,CAACT,YAAY,CAACE,UAAU,GAAGI,MAAM,CAACC,MAAM,CAAC;UAAEG,KAAK,EAAEX,uBAAuB,CAACU,QAAQ;QAAG,CAAC,EAAE,IAAI,CAACT,YAAY,CAACE,UAAU,CAAC;MAC7H;IACJ;IACA,IAAI,CAACS,YAAY,CAACZ,uBAAuB,CAAC;EAC9C;EACA,OAAOa,QAAQ,CAACC,WAAW,EAAE;IACzB,MAAM;MAAEX;IAAW,CAAC,GAAGW,WAAW;IAClC;IACA;IACA,MAAMC,MAAM,GAAG,IAAI,IAAI,CAAClB,6BAA6B,CAACM,UAAU,CAACC,cAAc,CAAC,CAAC;IACjF;IACAD,UAAU,CAACM,OAAO,IAAI,IAAI,IAAI,CAACZ,6BAA6B,CAACM,UAAU,CAACC,cAAc,CAAC,CAACK,OAAO,CAACN,UAAU,CAACM,OAAO,CAAC,CAAC;IACpH;IACAN,UAAU,CAACQ,KAAK,IAAI,IAAI,IAAI,CAACd,6BAA6B,CAACM,UAAU,CAACC,cAAc,CAAC,CAACO,KAAK,CAACR,UAAU,CAACQ,KAAK,CAAC,CAAC;IAC9G,OAAOI,MAAM;EACjB;AACJ;AACA,SAASjB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}