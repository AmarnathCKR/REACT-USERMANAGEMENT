{"ast":null,"code":"// eslint-disable-next-line import/order\nconst config = require(\"../config\");\nconst https = /^http:/.test(config().upload_prefix) ? require('http') : require('https');\nconst querystring = require(\"querystring\");\nconst Q = require('q');\nconst url = require('url');\nconst utils = require(\"../utils\");\nconst ensureOption = require('../utils/ensureOption').defaults(config());\nconst ProxyAgent = utils.optionalRequire('proxy-agent');\nconst {\n  extend,\n  includes,\n  isEmpty\n} = utils;\nfunction execute_request(method, params, auth, api_url, callback) {\n  let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  method = method.toUpperCase();\n  const deferred = Q.defer();\n  let query_params, handle_response; // declare to user later\n  let key = auth.key;\n  let secret = auth.secret;\n  let oauth_token = auth.oauth_token;\n  let content_type = 'application/x-www-form-urlencoded';\n  if (options.content_type === 'json') {\n    query_params = JSON.stringify(params);\n    content_type = 'application/json';\n  } else {\n    query_params = querystring.stringify(params);\n  }\n  if (method === \"GET\") {\n    api_url += \"?\" + query_params;\n  }\n  let request_options = url.parse(api_url);\n  request_options = extend(request_options, {\n    method: method,\n    headers: {\n      'Content-Type': content_type,\n      'User-Agent': utils.getUserAgent()\n    }\n  });\n  if (oauth_token) {\n    request_options.headers.Authorization = `Bearer ${oauth_token}`;\n  } else {\n    request_options.auth = key + \":\" + secret;\n  }\n  if (options.agent != null) {\n    request_options.agent = options.agent;\n  }\n  let proxy = options.api_proxy || config().api_proxy;\n  if (!isEmpty(proxy)) {\n    if (!request_options.agent) {\n      if (ProxyAgent === null) {\n        throw new Error(\"Proxy value is set, but `proxy-agent` is not installed, please install `proxy-agent` module.\");\n      }\n      request_options.agent = new ProxyAgent(proxy);\n    } else {\n      console.warn(\"Proxy is set, but request uses a custom agent, proxy is ignored.\");\n    }\n  }\n  if (method !== \"GET\") {\n    request_options.headers['Content-Length'] = Buffer.byteLength(query_params);\n  }\n  handle_response = function (res) {\n    const {\n      hide_sensitive = false\n    } = config();\n    const sanitizedOptions = {\n      ...request_options\n    };\n    if (hide_sensitive === true) {\n      if (\"auth\" in sanitizedOptions) {\n        delete sanitizedOptions.auth;\n      }\n      if (\"Authorization\" in sanitizedOptions.headers) {\n        delete sanitizedOptions.headers.Authorization;\n      }\n    }\n    if (includes([200, 400, 401, 403, 404, 409, 420, 500], res.statusCode)) {\n      let buffer = \"\";\n      let error = false;\n      res.on(\"data\", function (d) {\n        buffer += d;\n        return buffer;\n      });\n      res.on(\"end\", function () {\n        let result;\n        if (error) {\n          return;\n        }\n        try {\n          result = JSON.parse(buffer);\n        } catch (e) {\n          result = {\n            error: {\n              message: \"Server return invalid JSON response. Status Code \" + res.statusCode\n            }\n          };\n        }\n        if (result.error) {\n          result.error.http_code = res.statusCode;\n        } else {\n          result.rate_limit_allowed = parseInt(res.headers[\"x-featureratelimit-limit\"]);\n          result.rate_limit_reset_at = new Date(res.headers[\"x-featureratelimit-reset\"]);\n          result.rate_limit_remaining = parseInt(res.headers[\"x-featureratelimit-remaining\"]);\n        }\n        if (result.error) {\n          deferred.reject(Object.assign({\n            request_options: sanitizedOptions,\n            query_params\n          }, result));\n        } else {\n          deferred.resolve(result);\n        }\n        if (typeof callback === \"function\") {\n          callback(result);\n        }\n      });\n      res.on(\"error\", function (e) {\n        error = true;\n        let err_obj = {\n          error: {\n            message: e,\n            http_code: res.statusCode,\n            request_options: sanitizedOptions,\n            query_params\n          }\n        };\n        deferred.reject(err_obj.error);\n        if (typeof callback === \"function\") {\n          callback(err_obj);\n        }\n      });\n    } else {\n      let err_obj = {\n        error: {\n          message: \"Server returned unexpected status code - \" + res.statusCode,\n          http_code: res.statusCode,\n          request_options: sanitizedOptions,\n          query_params\n        }\n      };\n      deferred.reject(err_obj.error);\n      if (typeof callback === \"function\") {\n        callback(err_obj);\n      }\n    }\n  };\n  const request = https.request(request_options, handle_response);\n  request.on(\"error\", function (e) {\n    deferred.reject(e);\n    return typeof callback === \"function\" ? callback({\n      error: e\n    }) : void 0;\n  });\n  request.setTimeout(ensureOption(options, \"timeout\", 60000));\n  if (method !== \"GET\") {\n    request.write(query_params);\n  }\n  request.end();\n  return deferred.promise;\n}\nmodule.exports = execute_request;","map":{"version":3,"names":["config","require","https","test","upload_prefix","querystring","Q","url","utils","ensureOption","defaults","ProxyAgent","optionalRequire","extend","includes","isEmpty","execute_request","method","params","auth","api_url","callback","options","toUpperCase","deferred","defer","query_params","handle_response","key","secret","oauth_token","content_type","JSON","stringify","request_options","parse","headers","getUserAgent","Authorization","agent","proxy","api_proxy","Error","console","warn","Buffer","byteLength","res","hide_sensitive","sanitizedOptions","statusCode","buffer","error","on","d","result","e","message","http_code","rate_limit_allowed","parseInt","rate_limit_reset_at","Date","rate_limit_remaining","reject","Object","assign","resolve","err_obj","request","setTimeout","write","end","promise","module","exports"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/cloudinary/lib/api_client/execute_request.js"],"sourcesContent":["// eslint-disable-next-line import/order\nconst config = require(\"../config\");\nconst https = /^http:/.test(config().upload_prefix) ? require('http') : require('https');\nconst querystring = require(\"querystring\");\nconst Q = require('q');\nconst url = require('url');\nconst utils = require(\"../utils\");\nconst ensureOption = require('../utils/ensureOption').defaults(config());\nconst ProxyAgent = utils.optionalRequire('proxy-agent');\n\nconst { extend, includes, isEmpty } = utils;\n\nfunction execute_request(method, params, auth, api_url, callback, options = {}) {\n  method = method.toUpperCase();\n  const deferred = Q.defer();\n\n  let query_params, handle_response; // declare to user later\n  let key = auth.key;\n  let secret = auth.secret;\n  let oauth_token = auth.oauth_token;\n  let content_type = 'application/x-www-form-urlencoded';\n\n  if (options.content_type === 'json') {\n    query_params = JSON.stringify(params);\n    content_type = 'application/json';\n  } else {\n    query_params = querystring.stringify(params);\n  }\n\n  if (method === \"GET\") {\n    api_url += \"?\" + query_params;\n  }\n\n  let request_options = url.parse(api_url);\n\n  request_options = extend(request_options, {\n    method: method,\n    headers: {\n      'Content-Type': content_type,\n      'User-Agent': utils.getUserAgent()\n    }\n  });\n\n  if (oauth_token) {\n    request_options.headers.Authorization = `Bearer ${oauth_token}`;\n  } else {\n    request_options.auth = key + \":\" + secret\n  }\n\n  if (options.agent != null) {\n    request_options.agent = options.agent;\n  }\n\n  let proxy = options.api_proxy || config().api_proxy;\n  if (!isEmpty(proxy)) {\n    if (!request_options.agent) {\n      if (ProxyAgent === null) {\n        throw new Error(\"Proxy value is set, but `proxy-agent` is not installed, please install `proxy-agent` module.\")\n      }\n      request_options.agent = new ProxyAgent(proxy);\n    } else {\n      console.warn(\"Proxy is set, but request uses a custom agent, proxy is ignored.\");\n    }\n  }\n  if (method !== \"GET\") {\n    request_options.headers['Content-Length'] = Buffer.byteLength(query_params);\n  }\n  handle_response = function (res) {\n    const {hide_sensitive = false} = config();\n    const sanitizedOptions = {...request_options};\n\n    if (hide_sensitive === true){\n      if (\"auth\" in sanitizedOptions) { delete sanitizedOptions.auth; }\n      if (\"Authorization\" in sanitizedOptions.headers) { delete sanitizedOptions.headers.Authorization; }\n    }\n\n    if (includes([200, 400, 401, 403, 404, 409, 420, 500], res.statusCode)) {\n      let buffer = \"\";\n      let error = false;\n      res.on(\"data\", function (d) {\n        buffer += d;\n        return buffer;\n      });\n      res.on(\"end\", function () {\n        let result;\n        if (error) {\n          return;\n        }\n        try {\n          result = JSON.parse(buffer);\n        } catch (e) {\n          result = {\n            error: {\n              message: \"Server return invalid JSON response. Status Code \" + res.statusCode\n            }\n          };\n        }\n\n        if (result.error) {\n          result.error.http_code = res.statusCode;\n        } else {\n          result.rate_limit_allowed = parseInt(res.headers[\"x-featureratelimit-limit\"]);\n          result.rate_limit_reset_at = new Date(res.headers[\"x-featureratelimit-reset\"]);\n          result.rate_limit_remaining = parseInt(res.headers[\"x-featureratelimit-remaining\"]);\n        }\n\n        if (result.error) {\n          deferred.reject(Object.assign({\n            request_options: sanitizedOptions,\n            query_params\n          }, result));\n        } else {\n          deferred.resolve(result);\n        }\n        if (typeof callback === \"function\") {\n          callback(result);\n        }\n      });\n      res.on(\"error\", function (e) {\n        error = true;\n        let err_obj = {\n          error: {\n            message: e,\n            http_code: res.statusCode,\n            request_options: sanitizedOptions,\n            query_params\n          }\n        };\n        deferred.reject(err_obj.error);\n        if (typeof callback === \"function\") {\n          callback(err_obj);\n        }\n      });\n    } else {\n      let err_obj = {\n        error: {\n          message: \"Server returned unexpected status code - \" + res.statusCode,\n          http_code: res.statusCode,\n          request_options: sanitizedOptions,\n          query_params\n        }\n      };\n      deferred.reject(err_obj.error);\n      if (typeof callback === \"function\") {\n        callback(err_obj);\n      }\n    }\n  };\n\n  const request = https.request(request_options, handle_response);\n  request.on(\"error\", function (e) {\n    deferred.reject(e);\n    return typeof callback === \"function\" ? callback({ error: e }) : void 0;\n  });\n  request.setTimeout(ensureOption(options, \"timeout\", 60000));\n  if (method !== \"GET\") {\n    request.write(query_params);\n  }\n  request.end();\n  return deferred.promise;\n}\n\nmodule.exports = execute_request;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}