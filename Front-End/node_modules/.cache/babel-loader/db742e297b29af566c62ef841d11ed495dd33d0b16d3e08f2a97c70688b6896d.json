{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar NativePromiseConstructor = require('../internals/promise-native-constructor');\nvar fails = require('../internals/fails');\nvar getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar speciesConstructor = require('../internals/species-constructor');\nvar promiseResolve = require('../internals/promise-resolve');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;\n\n// Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829\nvar NON_GENERIC = !!NativePromiseConstructor && fails(function () {\n  // eslint-disable-next-line unicorn/no-thenable -- required for testing\n  NativePromisePrototype['finally'].call({\n    then: function () {/* empty */}\n  }, function () {/* empty */});\n});\n\n// `Promise.prototype.finally` method\n// https://tc39.es/ecma262/#sec-promise.prototype.finally\n$({\n  target: 'Promise',\n  proto: true,\n  real: true,\n  forced: NON_GENERIC\n}, {\n  'finally': function (onFinally) {\n    var C = speciesConstructor(this, getBuiltIn('Promise'));\n    var isFunction = isCallable(onFinally);\n    return this.then(isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () {\n        return x;\n      });\n    } : onFinally, isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () {\n        throw e;\n      });\n    } : onFinally);\n  }\n});\n\n// makes sure that native promise-based APIs `Promise#finally` properly works with patched `Promise#then`\nif (!IS_PURE && isCallable(NativePromiseConstructor)) {\n  var method = getBuiltIn('Promise').prototype['finally'];\n  if (NativePromisePrototype['finally'] !== method) {\n    defineBuiltIn(NativePromisePrototype, 'finally', method, {\n      unsafe: true\n    });\n  }\n}","map":{"version":3,"names":["$","require","IS_PURE","NativePromiseConstructor","fails","getBuiltIn","isCallable","speciesConstructor","promiseResolve","defineBuiltIn","NativePromisePrototype","prototype","NON_GENERIC","call","then","target","proto","real","forced","onFinally","C","isFunction","x","e","method","unsafe"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/core-js/modules/es.promise.finally.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar NativePromiseConstructor = require('../internals/promise-native-constructor');\nvar fails = require('../internals/fails');\nvar getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar speciesConstructor = require('../internals/species-constructor');\nvar promiseResolve = require('../internals/promise-resolve');\nvar defineBuiltIn = require('../internals/define-built-in');\n\nvar NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;\n\n// Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829\nvar NON_GENERIC = !!NativePromiseConstructor && fails(function () {\n  // eslint-disable-next-line unicorn/no-thenable -- required for testing\n  NativePromisePrototype['finally'].call({ then: function () { /* empty */ } }, function () { /* empty */ });\n});\n\n// `Promise.prototype.finally` method\n// https://tc39.es/ecma262/#sec-promise.prototype.finally\n$({ target: 'Promise', proto: true, real: true, forced: NON_GENERIC }, {\n  'finally': function (onFinally) {\n    var C = speciesConstructor(this, getBuiltIn('Promise'));\n    var isFunction = isCallable(onFinally);\n    return this.then(\n      isFunction ? function (x) {\n        return promiseResolve(C, onFinally()).then(function () { return x; });\n      } : onFinally,\n      isFunction ? function (e) {\n        return promiseResolve(C, onFinally()).then(function () { throw e; });\n      } : onFinally\n    );\n  }\n});\n\n// makes sure that native promise-based APIs `Promise#finally` properly works with patched `Promise#then`\nif (!IS_PURE && isCallable(NativePromiseConstructor)) {\n  var method = getBuiltIn('Promise').prototype['finally'];\n  if (NativePromisePrototype['finally'] !== method) {\n    defineBuiltIn(NativePromisePrototype, 'finally', method, { unsafe: true });\n  }\n}\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACtC,IAAIC,OAAO,GAAGD,OAAO,CAAC,sBAAsB,CAAC;AAC7C,IAAIE,wBAAwB,GAAGF,OAAO,CAAC,yCAAyC,CAAC;AACjF,IAAIG,KAAK,GAAGH,OAAO,CAAC,oBAAoB,CAAC;AACzC,IAAII,UAAU,GAAGJ,OAAO,CAAC,2BAA2B,CAAC;AACrD,IAAIK,UAAU,GAAGL,OAAO,CAAC,0BAA0B,CAAC;AACpD,IAAIM,kBAAkB,GAAGN,OAAO,CAAC,kCAAkC,CAAC;AACpE,IAAIO,cAAc,GAAGP,OAAO,CAAC,8BAA8B,CAAC;AAC5D,IAAIQ,aAAa,GAAGR,OAAO,CAAC,8BAA8B,CAAC;AAE3D,IAAIS,sBAAsB,GAAGP,wBAAwB,IAAIA,wBAAwB,CAACQ,SAAS;;AAE3F;AACA,IAAIC,WAAW,GAAG,CAAC,CAACT,wBAAwB,IAAIC,KAAK,CAAC,YAAY;EAChE;EACAM,sBAAsB,CAAC,SAAS,CAAC,CAACG,IAAI,CAAC;IAAEC,IAAI,EAAE,YAAY,CAAE;EAAc,CAAC,EAAE,YAAY,CAAE,YAAa,CAAC;AAC5G,CAAC,CAAC;;AAEF;AACA;AACAd,CAAC,CAAC;EAAEe,MAAM,EAAE,SAAS;EAAEC,KAAK,EAAE,IAAI;EAAEC,IAAI,EAAE,IAAI;EAAEC,MAAM,EAAEN;AAAY,CAAC,EAAE;EACrE,SAAS,EAAE,UAAUO,SAAS,EAAE;IAC9B,IAAIC,CAAC,GAAGb,kBAAkB,CAAC,IAAI,EAAEF,UAAU,CAAC,SAAS,CAAC,CAAC;IACvD,IAAIgB,UAAU,GAAGf,UAAU,CAACa,SAAS,CAAC;IACtC,OAAO,IAAI,CAACL,IAAI,CACdO,UAAU,GAAG,UAAUC,CAAC,EAAE;MACxB,OAAOd,cAAc,CAACY,CAAC,EAAED,SAAS,EAAE,CAAC,CAACL,IAAI,CAAC,YAAY;QAAE,OAAOQ,CAAC;MAAE,CAAC,CAAC;IACvE,CAAC,GAAGH,SAAS,EACbE,UAAU,GAAG,UAAUE,CAAC,EAAE;MACxB,OAAOf,cAAc,CAACY,CAAC,EAAED,SAAS,EAAE,CAAC,CAACL,IAAI,CAAC,YAAY;QAAE,MAAMS,CAAC;MAAE,CAAC,CAAC;IACtE,CAAC,GAAGJ,SAAS,CACd;EACH;AACF,CAAC,CAAC;;AAEF;AACA,IAAI,CAACjB,OAAO,IAAII,UAAU,CAACH,wBAAwB,CAAC,EAAE;EACpD,IAAIqB,MAAM,GAAGnB,UAAU,CAAC,SAAS,CAAC,CAACM,SAAS,CAAC,SAAS,CAAC;EACvD,IAAID,sBAAsB,CAAC,SAAS,CAAC,KAAKc,MAAM,EAAE;IAChDf,aAAa,CAACC,sBAAsB,EAAE,SAAS,EAAEc,MAAM,EAAE;MAAEC,MAAM,EAAE;IAAK,CAAC,CAAC;EAC5E;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}