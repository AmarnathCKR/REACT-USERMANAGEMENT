{"ast":null,"code":"var IS_PURE = require('../internals/is-pure');\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar getBuiltin = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar uid = require('../internals/uid');\nvar isCallable = require('../internals/is-callable');\nvar isConstructor = require('../internals/is-constructor');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar iterate = require('../internals/iterate');\nvar anObject = require('../internals/an-object');\nvar classof = require('../internals/classof');\nvar hasOwn = require('../internals/has-own-property');\nvar createProperty = require('../internals/create-property');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\nvar getRegExpFlags = require('../internals/regexp-get-flags');\nvar MapHelpers = require('../internals/map-helpers');\nvar SetHelpers = require('../internals/set-helpers');\nvar ERROR_STACK_INSTALLABLE = require('../internals/error-stack-installable');\nvar PROPER_TRANSFER = require('../internals/structured-clone-proper-transfer');\nvar Object = global.Object;\nvar Array = global.Array;\nvar Date = global.Date;\nvar Error = global.Error;\nvar EvalError = global.EvalError;\nvar RangeError = global.RangeError;\nvar ReferenceError = global.ReferenceError;\nvar SyntaxError = global.SyntaxError;\nvar TypeError = global.TypeError;\nvar URIError = global.URIError;\nvar PerformanceMark = global.PerformanceMark;\nvar WebAssembly = global.WebAssembly;\nvar CompileError = WebAssembly && WebAssembly.CompileError || Error;\nvar LinkError = WebAssembly && WebAssembly.LinkError || Error;\nvar RuntimeError = WebAssembly && WebAssembly.RuntimeError || Error;\nvar DOMException = getBuiltin('DOMException');\nvar Map = MapHelpers.Map;\nvar mapHas = MapHelpers.has;\nvar mapGet = MapHelpers.get;\nvar mapSet = MapHelpers.set;\nvar Set = SetHelpers.Set;\nvar setAdd = SetHelpers.add;\nvar objectKeys = getBuiltin('Object', 'keys');\nvar push = uncurryThis([].push);\nvar thisBooleanValue = uncurryThis(true.valueOf);\nvar thisNumberValue = uncurryThis(1.0.valueOf);\nvar thisStringValue = uncurryThis(''.valueOf);\nvar thisTimeValue = uncurryThis(Date.prototype.getTime);\nvar PERFORMANCE_MARK = uid('structuredClone');\nvar DATA_CLONE_ERROR = 'DataCloneError';\nvar TRANSFERRING = 'Transferring';\nvar checkBasicSemantic = function (structuredCloneImplementation) {\n  return !fails(function () {\n    var set1 = new global.Set([7]);\n    var set2 = structuredCloneImplementation(set1);\n    var number = structuredCloneImplementation(Object(7));\n    return set2 == set1 || !set2.has(7) || typeof number != 'object' || number != 7;\n  }) && structuredCloneImplementation;\n};\nvar checkErrorsCloning = function (structuredCloneImplementation, $Error) {\n  return !fails(function () {\n    var error = new $Error();\n    var test = structuredCloneImplementation({\n      a: error,\n      b: error\n    });\n    return !(test && test.a === test.b && test.a instanceof $Error && test.a.stack === error.stack);\n  });\n};\n\n// https://github.com/whatwg/html/pull/5749\nvar checkNewErrorsCloningSemantic = function (structuredCloneImplementation) {\n  return !fails(function () {\n    var test = structuredCloneImplementation(new global.AggregateError([1], PERFORMANCE_MARK, {\n      cause: 3\n    }));\n    return test.name != 'AggregateError' || test.errors[0] != 1 || test.message != PERFORMANCE_MARK || test.cause != 3;\n  });\n};\n\n// FF94+, Safari 15.4+, Chrome 98+, NodeJS 17.0+, Deno 1.13+\n// FF<103 and Safari implementations can't clone errors\n// https://bugzilla.mozilla.org/show_bug.cgi?id=1556604\n// FF103 can clone errors, but `.stack` of clone is an empty string\n// https://bugzilla.mozilla.org/show_bug.cgi?id=1778762\n// FF104+ fixed it on usual errors, but not on DOMExceptions\n// https://bugzilla.mozilla.org/show_bug.cgi?id=1777321\n// Chrome <102 returns `null` if cloned object contains multiple references to one error\n// https://bugs.chromium.org/p/v8/issues/detail?id=12542\n// NodeJS implementation can't clone DOMExceptions\n// https://github.com/nodejs/node/issues/41038\n// only FF103+ supports new (html/5749) error cloning semantic\nvar nativeStructuredClone = global.structuredClone;\nvar FORCED_REPLACEMENT = IS_PURE || !checkErrorsCloning(nativeStructuredClone, Error) || !checkErrorsCloning(nativeStructuredClone, DOMException) || !checkNewErrorsCloningSemantic(nativeStructuredClone);\n\n// Chrome 82+, Safari 14.1+, Deno 1.11+\n// Chrome 78-81 implementation swaps `.name` and `.message` of cloned `DOMException`\n// Chrome returns `null` if cloned object contains multiple references to one error\n// Safari 14.1 implementation doesn't clone some `RegExp` flags, so requires a workaround\n// Safari implementation can't clone errors\n// Deno 1.2-1.10 implementations too naive\n// NodeJS 16.0+ does not have `PerformanceMark` constructor\n// NodeJS <17.2 structured cloning implementation from `performance.mark` is too naive\n// and can't clone, for example, `RegExp` or some boxed primitives\n// https://github.com/nodejs/node/issues/40840\n// no one of those implementations supports new (html/5749) error cloning semantic\nvar structuredCloneFromMark = !nativeStructuredClone && checkBasicSemantic(function (value) {\n  return new PerformanceMark(PERFORMANCE_MARK, {\n    detail: value\n  }).detail;\n});\nvar nativeRestrictedStructuredClone = checkBasicSemantic(nativeStructuredClone) || structuredCloneFromMark;\nvar throwUncloneable = function (type) {\n  throw new DOMException('Uncloneable type: ' + type, DATA_CLONE_ERROR);\n};\nvar throwUnpolyfillable = function (type, action) {\n  throw new DOMException((action || 'Cloning') + ' of ' + type + ' cannot be properly polyfilled in this engine', DATA_CLONE_ERROR);\n};\nvar createDataTransfer = function () {\n  var dataTransfer;\n  try {\n    dataTransfer = new global.DataTransfer();\n  } catch (error) {\n    try {\n      dataTransfer = new global.ClipboardEvent('').clipboardData;\n    } catch (error2) {/* empty */}\n  }\n  return dataTransfer && dataTransfer.items && dataTransfer.files ? dataTransfer : null;\n};\nvar structuredCloneInternal = function (value, map) {\n  if (isSymbol(value)) throwUncloneable('Symbol');\n  if (!isObject(value)) return value;\n  // effectively preserves circular references\n  if (map) {\n    if (mapHas(map, value)) return mapGet(map, value);\n  } else map = new Map();\n  var type = classof(value);\n  var deep = false;\n  var C, name, cloned, dataTransfer, i, length, keys, key, source, target;\n  switch (type) {\n    case 'Array':\n      cloned = Array(lengthOfArrayLike(value));\n      deep = true;\n      break;\n    case 'Object':\n      cloned = {};\n      deep = true;\n      break;\n    case 'Map':\n      cloned = new Map();\n      deep = true;\n      break;\n    case 'Set':\n      cloned = new Set();\n      deep = true;\n      break;\n    case 'RegExp':\n      // in this block because of a Safari 14.1 bug\n      // old FF does not clone regexes passed to the constructor, so get the source and flags directly\n      cloned = new RegExp(value.source, getRegExpFlags(value));\n      break;\n    case 'Error':\n      name = value.name;\n      switch (name) {\n        case 'AggregateError':\n          cloned = getBuiltin('AggregateError')([]);\n          break;\n        case 'EvalError':\n          cloned = EvalError();\n          break;\n        case 'RangeError':\n          cloned = RangeError();\n          break;\n        case 'ReferenceError':\n          cloned = ReferenceError();\n          break;\n        case 'SyntaxError':\n          cloned = SyntaxError();\n          break;\n        case 'TypeError':\n          cloned = TypeError();\n          break;\n        case 'URIError':\n          cloned = URIError();\n          break;\n        case 'CompileError':\n          cloned = CompileError();\n          break;\n        case 'LinkError':\n          cloned = LinkError();\n          break;\n        case 'RuntimeError':\n          cloned = RuntimeError();\n          break;\n        default:\n          cloned = Error();\n      }\n      deep = true;\n      break;\n    case 'DOMException':\n      cloned = new DOMException(value.message, value.name);\n      deep = true;\n      break;\n    case 'DataView':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'BigInt64Array':\n    case 'BigUint64Array':\n      C = global[type];\n      // in some old engines like Safari 9, typeof C is 'object'\n      // on Uint8ClampedArray or some other constructors\n      if (!isObject(C)) throwUnpolyfillable(type);\n      cloned = new C(\n      // this is safe, since arraybuffer cannot have circular references\n      structuredCloneInternal(value.buffer, map), value.byteOffset, type === 'DataView' ? value.byteLength : value.length);\n      break;\n    case 'DOMQuad':\n      try {\n        cloned = new DOMQuad(structuredCloneInternal(value.p1, map), structuredCloneInternal(value.p2, map), structuredCloneInternal(value.p3, map), structuredCloneInternal(value.p4, map));\n      } catch (error) {\n        if (nativeRestrictedStructuredClone) {\n          cloned = nativeRestrictedStructuredClone(value);\n        } else throwUnpolyfillable(type);\n      }\n      break;\n    case 'FileList':\n      dataTransfer = createDataTransfer();\n      if (dataTransfer) {\n        for (i = 0, length = lengthOfArrayLike(value); i < length; i++) {\n          dataTransfer.items.add(structuredCloneInternal(value[i], map));\n        }\n        cloned = dataTransfer.files;\n      } else if (nativeRestrictedStructuredClone) {\n        cloned = nativeRestrictedStructuredClone(value);\n      } else throwUnpolyfillable(type);\n      break;\n    case 'ImageData':\n      // Safari 9 ImageData is a constructor, but typeof ImageData is 'object'\n      try {\n        cloned = new ImageData(structuredCloneInternal(value.data, map), value.width, value.height, {\n          colorSpace: value.colorSpace\n        });\n      } catch (error) {\n        if (nativeRestrictedStructuredClone) {\n          cloned = nativeRestrictedStructuredClone(value);\n        } else throwUnpolyfillable(type);\n      }\n      break;\n    default:\n      if (nativeRestrictedStructuredClone) {\n        cloned = nativeRestrictedStructuredClone(value);\n      } else switch (type) {\n        case 'BigInt':\n          // can be a 3rd party polyfill\n          cloned = Object(value.valueOf());\n          break;\n        case 'Boolean':\n          cloned = Object(thisBooleanValue(value));\n          break;\n        case 'Number':\n          cloned = Object(thisNumberValue(value));\n          break;\n        case 'String':\n          cloned = Object(thisStringValue(value));\n          break;\n        case 'Date':\n          cloned = new Date(thisTimeValue(value));\n          break;\n        case 'ArrayBuffer':\n          C = global.DataView;\n          // `ArrayBuffer#slice` is not available in IE10\n          // `ArrayBuffer#slice` and `DataView` are not available in old FF\n          if (!C && typeof value.slice != 'function') throwUnpolyfillable(type);\n          // detached buffers throws in `DataView` and `.slice`\n          try {\n            if (typeof value.slice == 'function') {\n              cloned = value.slice(0);\n            } else {\n              length = value.byteLength;\n              cloned = new ArrayBuffer(length);\n              source = new C(value);\n              target = new C(cloned);\n              for (i = 0; i < length; i++) {\n                target.setUint8(i, source.getUint8(i));\n              }\n            }\n          } catch (error) {\n            throw new DOMException('ArrayBuffer is detached', DATA_CLONE_ERROR);\n          }\n          break;\n        case 'SharedArrayBuffer':\n          // SharedArrayBuffer should use shared memory, we can't polyfill it, so return the original\n          cloned = value;\n          break;\n        case 'Blob':\n          try {\n            cloned = value.slice(0, value.size, value.type);\n          } catch (error) {\n            throwUnpolyfillable(type);\n          }\n          break;\n        case 'DOMPoint':\n        case 'DOMPointReadOnly':\n          C = global[type];\n          try {\n            cloned = C.fromPoint ? C.fromPoint(value) : new C(value.x, value.y, value.z, value.w);\n          } catch (error) {\n            throwUnpolyfillable(type);\n          }\n          break;\n        case 'DOMRect':\n        case 'DOMRectReadOnly':\n          C = global[type];\n          try {\n            cloned = C.fromRect ? C.fromRect(value) : new C(value.x, value.y, value.width, value.height);\n          } catch (error) {\n            throwUnpolyfillable(type);\n          }\n          break;\n        case 'DOMMatrix':\n        case 'DOMMatrixReadOnly':\n          C = global[type];\n          try {\n            cloned = C.fromMatrix ? C.fromMatrix(value) : new C(value);\n          } catch (error) {\n            throwUnpolyfillable(type);\n          }\n          break;\n        case 'AudioData':\n        case 'VideoFrame':\n          if (!isCallable(value.clone)) throwUnpolyfillable(type);\n          try {\n            cloned = value.clone();\n          } catch (error) {\n            throwUncloneable(type);\n          }\n          break;\n        case 'File':\n          try {\n            cloned = new File([value], value.name, value);\n          } catch (error) {\n            throwUnpolyfillable(type);\n          }\n          break;\n        case 'CropTarget':\n        case 'CryptoKey':\n        case 'FileSystemDirectoryHandle':\n        case 'FileSystemFileHandle':\n        case 'FileSystemHandle':\n        case 'GPUCompilationInfo':\n        case 'GPUCompilationMessage':\n        case 'ImageBitmap':\n        case 'RTCCertificate':\n        case 'WebAssembly.Module':\n          throwUnpolyfillable(type);\n        // break omitted\n        default:\n          throwUncloneable(type);\n      }\n  }\n  mapSet(map, value, cloned);\n  if (deep) switch (type) {\n    case 'Array':\n    case 'Object':\n      keys = objectKeys(value);\n      for (i = 0, length = lengthOfArrayLike(keys); i < length; i++) {\n        key = keys[i];\n        createProperty(cloned, key, structuredCloneInternal(value[key], map));\n      }\n      break;\n    case 'Map':\n      value.forEach(function (v, k) {\n        mapSet(cloned, structuredCloneInternal(k, map), structuredCloneInternal(v, map));\n      });\n      break;\n    case 'Set':\n      value.forEach(function (v) {\n        setAdd(cloned, structuredCloneInternal(v, map));\n      });\n      break;\n    case 'Error':\n      createNonEnumerableProperty(cloned, 'message', structuredCloneInternal(value.message, map));\n      if (hasOwn(value, 'cause')) {\n        createNonEnumerableProperty(cloned, 'cause', structuredCloneInternal(value.cause, map));\n      }\n      if (name == 'AggregateError') {\n        cloned.errors = structuredCloneInternal(value.errors, map);\n      }\n    // break omitted\n    case 'DOMException':\n      if (ERROR_STACK_INSTALLABLE) {\n        createNonEnumerableProperty(cloned, 'stack', structuredCloneInternal(value.stack, map));\n      }\n  }\n  return cloned;\n};\nvar tryToTransfer = function (rawTransfer, map) {\n  if (!isObject(rawTransfer)) throw TypeError('Transfer option cannot be converted to a sequence');\n  var transfer = [];\n  iterate(rawTransfer, function (value) {\n    push(transfer, anObject(value));\n  });\n  var i = 0;\n  var length = lengthOfArrayLike(transfer);\n  var value, type, C, transferredArray, transferred, canvas, context;\n  if (PROPER_TRANSFER) {\n    transferredArray = nativeStructuredClone(transfer, {\n      transfer: transfer\n    });\n    while (i < length) mapSet(map, transfer[i], transferredArray[i++]);\n  } else while (i < length) {\n    value = transfer[i++];\n    if (mapHas(map, value)) throw new DOMException('Duplicate transferable', DATA_CLONE_ERROR);\n    type = classof(value);\n    switch (type) {\n      case 'ImageBitmap':\n        C = global.OffscreenCanvas;\n        if (!isConstructor(C)) throwUnpolyfillable(type, TRANSFERRING);\n        try {\n          canvas = new C(value.width, value.height);\n          context = canvas.getContext('bitmaprenderer');\n          context.transferFromImageBitmap(value);\n          transferred = canvas.transferToImageBitmap();\n        } catch (error) {/* empty */}\n        break;\n      case 'AudioData':\n      case 'VideoFrame':\n        if (!isCallable(value.clone) || !isCallable(value.close)) throwUnpolyfillable(type, TRANSFERRING);\n        try {\n          transferred = value.clone();\n          value.close();\n        } catch (error) {/* empty */}\n        break;\n      case 'ArrayBuffer':\n        if (!isCallable(value.transfer)) throwUnpolyfillable(type, TRANSFERRING);\n        transferred = value.transfer();\n        break;\n      case 'MediaSourceHandle':\n      case 'MessagePort':\n      case 'OffscreenCanvas':\n      case 'ReadableStream':\n      case 'TransformStream':\n      case 'WritableStream':\n        throwUnpolyfillable(type, TRANSFERRING);\n    }\n    if (transferred === undefined) throw new DOMException('This object cannot be transferred: ' + type, DATA_CLONE_ERROR);\n    mapSet(map, value, transferred);\n  }\n};\n\n// `structuredClone` method\n// https://html.spec.whatwg.org/multipage/structured-data.html#dom-structuredclone\n$({\n  global: true,\n  enumerable: true,\n  sham: !PROPER_TRANSFER,\n  forced: FORCED_REPLACEMENT\n}, {\n  structuredClone: function structuredClone(value /* , { transfer } */) {\n    var options = validateArgumentsLength(arguments.length, 1) > 1 && !isNullOrUndefined(arguments[1]) ? anObject(arguments[1]) : undefined;\n    var transfer = options ? options.transfer : undefined;\n    var map;\n    if (transfer !== undefined) {\n      map = new Map();\n      tryToTransfer(transfer, map);\n    }\n    return structuredCloneInternal(value, map);\n  }\n});","map":{"version":3,"names":["IS_PURE","require","$","global","getBuiltin","uncurryThis","fails","uid","isCallable","isConstructor","isNullOrUndefined","isObject","isSymbol","iterate","anObject","classof","hasOwn","createProperty","createNonEnumerableProperty","lengthOfArrayLike","validateArgumentsLength","getRegExpFlags","MapHelpers","SetHelpers","ERROR_STACK_INSTALLABLE","PROPER_TRANSFER","Object","Array","Date","Error","EvalError","RangeError","ReferenceError","SyntaxError","TypeError","URIError","PerformanceMark","WebAssembly","CompileError","LinkError","RuntimeError","DOMException","Map","mapHas","has","mapGet","get","mapSet","set","Set","setAdd","add","objectKeys","push","thisBooleanValue","valueOf","thisNumberValue","thisStringValue","thisTimeValue","prototype","getTime","PERFORMANCE_MARK","DATA_CLONE_ERROR","TRANSFERRING","checkBasicSemantic","structuredCloneImplementation","set1","set2","number","checkErrorsCloning","$Error","error","test","a","b","stack","checkNewErrorsCloningSemantic","AggregateError","cause","name","errors","message","nativeStructuredClone","structuredClone","FORCED_REPLACEMENT","structuredCloneFromMark","value","detail","nativeRestrictedStructuredClone","throwUncloneable","type","throwUnpolyfillable","action","createDataTransfer","dataTransfer","DataTransfer","ClipboardEvent","clipboardData","error2","items","files","structuredCloneInternal","map","deep","C","cloned","i","length","keys","key","source","target","RegExp","buffer","byteOffset","byteLength","DOMQuad","p1","p2","p3","p4","ImageData","data","width","height","colorSpace","DataView","slice","ArrayBuffer","setUint8","getUint8","size","fromPoint","x","y","z","w","fromRect","fromMatrix","clone","File","forEach","v","k","tryToTransfer","rawTransfer","transfer","transferredArray","transferred","canvas","context","OffscreenCanvas","getContext","transferFromImageBitmap","transferToImageBitmap","close","undefined","enumerable","sham","forced","options","arguments"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/core-js/modules/web.structured-clone.js"],"sourcesContent":["var IS_PURE = require('../internals/is-pure');\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar getBuiltin = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar uid = require('../internals/uid');\nvar isCallable = require('../internals/is-callable');\nvar isConstructor = require('../internals/is-constructor');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar iterate = require('../internals/iterate');\nvar anObject = require('../internals/an-object');\nvar classof = require('../internals/classof');\nvar hasOwn = require('../internals/has-own-property');\nvar createProperty = require('../internals/create-property');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\nvar getRegExpFlags = require('../internals/regexp-get-flags');\nvar MapHelpers = require('../internals/map-helpers');\nvar SetHelpers = require('../internals/set-helpers');\nvar ERROR_STACK_INSTALLABLE = require('../internals/error-stack-installable');\nvar PROPER_TRANSFER = require('../internals/structured-clone-proper-transfer');\n\nvar Object = global.Object;\nvar Array = global.Array;\nvar Date = global.Date;\nvar Error = global.Error;\nvar EvalError = global.EvalError;\nvar RangeError = global.RangeError;\nvar ReferenceError = global.ReferenceError;\nvar SyntaxError = global.SyntaxError;\nvar TypeError = global.TypeError;\nvar URIError = global.URIError;\nvar PerformanceMark = global.PerformanceMark;\nvar WebAssembly = global.WebAssembly;\nvar CompileError = WebAssembly && WebAssembly.CompileError || Error;\nvar LinkError = WebAssembly && WebAssembly.LinkError || Error;\nvar RuntimeError = WebAssembly && WebAssembly.RuntimeError || Error;\nvar DOMException = getBuiltin('DOMException');\nvar Map = MapHelpers.Map;\nvar mapHas = MapHelpers.has;\nvar mapGet = MapHelpers.get;\nvar mapSet = MapHelpers.set;\nvar Set = SetHelpers.Set;\nvar setAdd = SetHelpers.add;\nvar objectKeys = getBuiltin('Object', 'keys');\nvar push = uncurryThis([].push);\nvar thisBooleanValue = uncurryThis(true.valueOf);\nvar thisNumberValue = uncurryThis(1.0.valueOf);\nvar thisStringValue = uncurryThis(''.valueOf);\nvar thisTimeValue = uncurryThis(Date.prototype.getTime);\nvar PERFORMANCE_MARK = uid('structuredClone');\nvar DATA_CLONE_ERROR = 'DataCloneError';\nvar TRANSFERRING = 'Transferring';\n\nvar checkBasicSemantic = function (structuredCloneImplementation) {\n  return !fails(function () {\n    var set1 = new global.Set([7]);\n    var set2 = structuredCloneImplementation(set1);\n    var number = structuredCloneImplementation(Object(7));\n    return set2 == set1 || !set2.has(7) || typeof number != 'object' || number != 7;\n  }) && structuredCloneImplementation;\n};\n\nvar checkErrorsCloning = function (structuredCloneImplementation, $Error) {\n  return !fails(function () {\n    var error = new $Error();\n    var test = structuredCloneImplementation({ a: error, b: error });\n    return !(test && test.a === test.b && test.a instanceof $Error && test.a.stack === error.stack);\n  });\n};\n\n// https://github.com/whatwg/html/pull/5749\nvar checkNewErrorsCloningSemantic = function (structuredCloneImplementation) {\n  return !fails(function () {\n    var test = structuredCloneImplementation(new global.AggregateError([1], PERFORMANCE_MARK, { cause: 3 }));\n    return test.name != 'AggregateError' || test.errors[0] != 1 || test.message != PERFORMANCE_MARK || test.cause != 3;\n  });\n};\n\n// FF94+, Safari 15.4+, Chrome 98+, NodeJS 17.0+, Deno 1.13+\n// FF<103 and Safari implementations can't clone errors\n// https://bugzilla.mozilla.org/show_bug.cgi?id=1556604\n// FF103 can clone errors, but `.stack` of clone is an empty string\n// https://bugzilla.mozilla.org/show_bug.cgi?id=1778762\n// FF104+ fixed it on usual errors, but not on DOMExceptions\n// https://bugzilla.mozilla.org/show_bug.cgi?id=1777321\n// Chrome <102 returns `null` if cloned object contains multiple references to one error\n// https://bugs.chromium.org/p/v8/issues/detail?id=12542\n// NodeJS implementation can't clone DOMExceptions\n// https://github.com/nodejs/node/issues/41038\n// only FF103+ supports new (html/5749) error cloning semantic\nvar nativeStructuredClone = global.structuredClone;\n\nvar FORCED_REPLACEMENT = IS_PURE\n  || !checkErrorsCloning(nativeStructuredClone, Error)\n  || !checkErrorsCloning(nativeStructuredClone, DOMException)\n  || !checkNewErrorsCloningSemantic(nativeStructuredClone);\n\n// Chrome 82+, Safari 14.1+, Deno 1.11+\n// Chrome 78-81 implementation swaps `.name` and `.message` of cloned `DOMException`\n// Chrome returns `null` if cloned object contains multiple references to one error\n// Safari 14.1 implementation doesn't clone some `RegExp` flags, so requires a workaround\n// Safari implementation can't clone errors\n// Deno 1.2-1.10 implementations too naive\n// NodeJS 16.0+ does not have `PerformanceMark` constructor\n// NodeJS <17.2 structured cloning implementation from `performance.mark` is too naive\n// and can't clone, for example, `RegExp` or some boxed primitives\n// https://github.com/nodejs/node/issues/40840\n// no one of those implementations supports new (html/5749) error cloning semantic\nvar structuredCloneFromMark = !nativeStructuredClone && checkBasicSemantic(function (value) {\n  return new PerformanceMark(PERFORMANCE_MARK, { detail: value }).detail;\n});\n\nvar nativeRestrictedStructuredClone = checkBasicSemantic(nativeStructuredClone) || structuredCloneFromMark;\n\nvar throwUncloneable = function (type) {\n  throw new DOMException('Uncloneable type: ' + type, DATA_CLONE_ERROR);\n};\n\nvar throwUnpolyfillable = function (type, action) {\n  throw new DOMException((action || 'Cloning') + ' of ' + type + ' cannot be properly polyfilled in this engine', DATA_CLONE_ERROR);\n};\n\nvar createDataTransfer = function () {\n  var dataTransfer;\n  try {\n    dataTransfer = new global.DataTransfer();\n  } catch (error) {\n    try {\n      dataTransfer = new global.ClipboardEvent('').clipboardData;\n    } catch (error2) { /* empty */ }\n  }\n  return dataTransfer && dataTransfer.items && dataTransfer.files ? dataTransfer : null;\n};\n\nvar structuredCloneInternal = function (value, map) {\n  if (isSymbol(value)) throwUncloneable('Symbol');\n  if (!isObject(value)) return value;\n  // effectively preserves circular references\n  if (map) {\n    if (mapHas(map, value)) return mapGet(map, value);\n  } else map = new Map();\n\n  var type = classof(value);\n  var deep = false;\n  var C, name, cloned, dataTransfer, i, length, keys, key, source, target;\n\n  switch (type) {\n    case 'Array':\n      cloned = Array(lengthOfArrayLike(value));\n      deep = true;\n      break;\n    case 'Object':\n      cloned = {};\n      deep = true;\n      break;\n    case 'Map':\n      cloned = new Map();\n      deep = true;\n      break;\n    case 'Set':\n      cloned = new Set();\n      deep = true;\n      break;\n    case 'RegExp':\n      // in this block because of a Safari 14.1 bug\n      // old FF does not clone regexes passed to the constructor, so get the source and flags directly\n      cloned = new RegExp(value.source, getRegExpFlags(value));\n      break;\n    case 'Error':\n      name = value.name;\n      switch (name) {\n        case 'AggregateError':\n          cloned = getBuiltin('AggregateError')([]);\n          break;\n        case 'EvalError':\n          cloned = EvalError();\n          break;\n        case 'RangeError':\n          cloned = RangeError();\n          break;\n        case 'ReferenceError':\n          cloned = ReferenceError();\n          break;\n        case 'SyntaxError':\n          cloned = SyntaxError();\n          break;\n        case 'TypeError':\n          cloned = TypeError();\n          break;\n        case 'URIError':\n          cloned = URIError();\n          break;\n        case 'CompileError':\n          cloned = CompileError();\n          break;\n        case 'LinkError':\n          cloned = LinkError();\n          break;\n        case 'RuntimeError':\n          cloned = RuntimeError();\n          break;\n        default:\n          cloned = Error();\n      }\n      deep = true;\n      break;\n    case 'DOMException':\n      cloned = new DOMException(value.message, value.name);\n      deep = true;\n      break;\n    case 'DataView':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'BigInt64Array':\n    case 'BigUint64Array':\n      C = global[type];\n      // in some old engines like Safari 9, typeof C is 'object'\n      // on Uint8ClampedArray or some other constructors\n      if (!isObject(C)) throwUnpolyfillable(type);\n      cloned = new C(\n        // this is safe, since arraybuffer cannot have circular references\n        structuredCloneInternal(value.buffer, map),\n        value.byteOffset,\n        type === 'DataView' ? value.byteLength : value.length\n      );\n      break;\n    case 'DOMQuad':\n      try {\n        cloned = new DOMQuad(\n          structuredCloneInternal(value.p1, map),\n          structuredCloneInternal(value.p2, map),\n          structuredCloneInternal(value.p3, map),\n          structuredCloneInternal(value.p4, map)\n        );\n      } catch (error) {\n        if (nativeRestrictedStructuredClone) {\n          cloned = nativeRestrictedStructuredClone(value);\n        } else throwUnpolyfillable(type);\n      }\n      break;\n    case 'FileList':\n      dataTransfer = createDataTransfer();\n      if (dataTransfer) {\n        for (i = 0, length = lengthOfArrayLike(value); i < length; i++) {\n          dataTransfer.items.add(structuredCloneInternal(value[i], map));\n        }\n        cloned = dataTransfer.files;\n      } else if (nativeRestrictedStructuredClone) {\n        cloned = nativeRestrictedStructuredClone(value);\n      } else throwUnpolyfillable(type);\n      break;\n    case 'ImageData':\n      // Safari 9 ImageData is a constructor, but typeof ImageData is 'object'\n      try {\n        cloned = new ImageData(\n          structuredCloneInternal(value.data, map),\n          value.width,\n          value.height,\n          { colorSpace: value.colorSpace }\n        );\n      } catch (error) {\n        if (nativeRestrictedStructuredClone) {\n          cloned = nativeRestrictedStructuredClone(value);\n        } else throwUnpolyfillable(type);\n      } break;\n    default:\n      if (nativeRestrictedStructuredClone) {\n        cloned = nativeRestrictedStructuredClone(value);\n      } else switch (type) {\n        case 'BigInt':\n          // can be a 3rd party polyfill\n          cloned = Object(value.valueOf());\n          break;\n        case 'Boolean':\n          cloned = Object(thisBooleanValue(value));\n          break;\n        case 'Number':\n          cloned = Object(thisNumberValue(value));\n          break;\n        case 'String':\n          cloned = Object(thisStringValue(value));\n          break;\n        case 'Date':\n          cloned = new Date(thisTimeValue(value));\n          break;\n        case 'ArrayBuffer':\n          C = global.DataView;\n          // `ArrayBuffer#slice` is not available in IE10\n          // `ArrayBuffer#slice` and `DataView` are not available in old FF\n          if (!C && typeof value.slice != 'function') throwUnpolyfillable(type);\n          // detached buffers throws in `DataView` and `.slice`\n          try {\n            if (typeof value.slice == 'function') {\n              cloned = value.slice(0);\n            } else {\n              length = value.byteLength;\n              cloned = new ArrayBuffer(length);\n              source = new C(value);\n              target = new C(cloned);\n              for (i = 0; i < length; i++) {\n                target.setUint8(i, source.getUint8(i));\n              }\n            }\n          } catch (error) {\n            throw new DOMException('ArrayBuffer is detached', DATA_CLONE_ERROR);\n          } break;\n        case 'SharedArrayBuffer':\n          // SharedArrayBuffer should use shared memory, we can't polyfill it, so return the original\n          cloned = value;\n          break;\n        case 'Blob':\n          try {\n            cloned = value.slice(0, value.size, value.type);\n          } catch (error) {\n            throwUnpolyfillable(type);\n          } break;\n        case 'DOMPoint':\n        case 'DOMPointReadOnly':\n          C = global[type];\n          try {\n            cloned = C.fromPoint\n              ? C.fromPoint(value)\n              : new C(value.x, value.y, value.z, value.w);\n          } catch (error) {\n            throwUnpolyfillable(type);\n          } break;\n        case 'DOMRect':\n        case 'DOMRectReadOnly':\n          C = global[type];\n          try {\n            cloned = C.fromRect\n              ? C.fromRect(value)\n              : new C(value.x, value.y, value.width, value.height);\n          } catch (error) {\n            throwUnpolyfillable(type);\n          } break;\n        case 'DOMMatrix':\n        case 'DOMMatrixReadOnly':\n          C = global[type];\n          try {\n            cloned = C.fromMatrix\n              ? C.fromMatrix(value)\n              : new C(value);\n          } catch (error) {\n            throwUnpolyfillable(type);\n          } break;\n        case 'AudioData':\n        case 'VideoFrame':\n          if (!isCallable(value.clone)) throwUnpolyfillable(type);\n          try {\n            cloned = value.clone();\n          } catch (error) {\n            throwUncloneable(type);\n          } break;\n        case 'File':\n          try {\n            cloned = new File([value], value.name, value);\n          } catch (error) {\n            throwUnpolyfillable(type);\n          } break;\n        case 'CropTarget':\n        case 'CryptoKey':\n        case 'FileSystemDirectoryHandle':\n        case 'FileSystemFileHandle':\n        case 'FileSystemHandle':\n        case 'GPUCompilationInfo':\n        case 'GPUCompilationMessage':\n        case 'ImageBitmap':\n        case 'RTCCertificate':\n        case 'WebAssembly.Module':\n          throwUnpolyfillable(type);\n          // break omitted\n        default:\n          throwUncloneable(type);\n      }\n  }\n\n  mapSet(map, value, cloned);\n\n  if (deep) switch (type) {\n    case 'Array':\n    case 'Object':\n      keys = objectKeys(value);\n      for (i = 0, length = lengthOfArrayLike(keys); i < length; i++) {\n        key = keys[i];\n        createProperty(cloned, key, structuredCloneInternal(value[key], map));\n      } break;\n    case 'Map':\n      value.forEach(function (v, k) {\n        mapSet(cloned, structuredCloneInternal(k, map), structuredCloneInternal(v, map));\n      });\n      break;\n    case 'Set':\n      value.forEach(function (v) {\n        setAdd(cloned, structuredCloneInternal(v, map));\n      });\n      break;\n    case 'Error':\n      createNonEnumerableProperty(cloned, 'message', structuredCloneInternal(value.message, map));\n      if (hasOwn(value, 'cause')) {\n        createNonEnumerableProperty(cloned, 'cause', structuredCloneInternal(value.cause, map));\n      }\n      if (name == 'AggregateError') {\n        cloned.errors = structuredCloneInternal(value.errors, map);\n      } // break omitted\n    case 'DOMException':\n      if (ERROR_STACK_INSTALLABLE) {\n        createNonEnumerableProperty(cloned, 'stack', structuredCloneInternal(value.stack, map));\n      }\n  }\n\n  return cloned;\n};\n\nvar tryToTransfer = function (rawTransfer, map) {\n  if (!isObject(rawTransfer)) throw TypeError('Transfer option cannot be converted to a sequence');\n\n  var transfer = [];\n\n  iterate(rawTransfer, function (value) {\n    push(transfer, anObject(value));\n  });\n\n  var i = 0;\n  var length = lengthOfArrayLike(transfer);\n  var value, type, C, transferredArray, transferred, canvas, context;\n\n  if (PROPER_TRANSFER) {\n    transferredArray = nativeStructuredClone(transfer, { transfer: transfer });\n    while (i < length) mapSet(map, transfer[i], transferredArray[i++]);\n  } else while (i < length) {\n    value = transfer[i++];\n    if (mapHas(map, value)) throw new DOMException('Duplicate transferable', DATA_CLONE_ERROR);\n\n    type = classof(value);\n\n    switch (type) {\n      case 'ImageBitmap':\n        C = global.OffscreenCanvas;\n        if (!isConstructor(C)) throwUnpolyfillable(type, TRANSFERRING);\n        try {\n          canvas = new C(value.width, value.height);\n          context = canvas.getContext('bitmaprenderer');\n          context.transferFromImageBitmap(value);\n          transferred = canvas.transferToImageBitmap();\n        } catch (error) { /* empty */ }\n        break;\n      case 'AudioData':\n      case 'VideoFrame':\n        if (!isCallable(value.clone) || !isCallable(value.close)) throwUnpolyfillable(type, TRANSFERRING);\n        try {\n          transferred = value.clone();\n          value.close();\n        } catch (error) { /* empty */ }\n        break;\n      case 'ArrayBuffer':\n        if (!isCallable(value.transfer)) throwUnpolyfillable(type, TRANSFERRING);\n        transferred = value.transfer();\n        break;\n      case 'MediaSourceHandle':\n      case 'MessagePort':\n      case 'OffscreenCanvas':\n      case 'ReadableStream':\n      case 'TransformStream':\n      case 'WritableStream':\n        throwUnpolyfillable(type, TRANSFERRING);\n    }\n\n    if (transferred === undefined) throw new DOMException('This object cannot be transferred: ' + type, DATA_CLONE_ERROR);\n    mapSet(map, value, transferred);\n  }\n};\n\n// `structuredClone` method\n// https://html.spec.whatwg.org/multipage/structured-data.html#dom-structuredclone\n$({ global: true, enumerable: true, sham: !PROPER_TRANSFER, forced: FORCED_REPLACEMENT }, {\n  structuredClone: function structuredClone(value /* , { transfer } */) {\n    var options = validateArgumentsLength(arguments.length, 1) > 1 && !isNullOrUndefined(arguments[1]) ? anObject(arguments[1]) : undefined;\n    var transfer = options ? options.transfer : undefined;\n    var map;\n\n    if (transfer !== undefined) {\n      map = new Map();\n      tryToTransfer(transfer, map);\n    }\n\n    return structuredCloneInternal(value, map);\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}