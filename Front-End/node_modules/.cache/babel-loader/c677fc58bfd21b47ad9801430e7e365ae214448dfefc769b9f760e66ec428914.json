{"ast":null,"code":"/**\n * Sort a map by key\n * @private\n * @param map <string, any>\n * @Return array of map's values sorted by key\n */\nfunction mapToSortedArray(map, flags) {\n  const array = Array.from(map.entries());\n  // objects from the Array.from() method above are stored in array of arrays:\n  // [[qualifierKey, QualifierObj], [qualifierKey, QualifierObj]]\n  // Flags is an array of FlagQualifierObj\n  // We need to convert it to the same form: [flagQualifier] =>  ['fl', flagQualifier]\n  flags.forEach(flag => {\n    array.push(['fl', flag]); // push ['fl', flagQualifier]\n  });\n\n  return array.sort().map(v => v[1]);\n}\n/**\n * Checks if `value` is a string.\n * @private\n * @param {*} value The value to check.\n * @return {boolean} `true` if `value` is a string, else `false`.\n */\nfunction isString(value) {\n  return typeof value === 'string' || value instanceof String;\n}\nexport { isString, mapToSortedArray };","map":{"version":3,"names":["mapToSortedArray","map","flags","array","Array","from","entries","forEach","flag","push","sort","v","isString","value","String"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/@cloudinary/url-gen/internal/utils/dataStructureUtils.js"],"sourcesContent":["/**\n * Sort a map by key\n * @private\n * @param map <string, any>\n * @Return array of map's values sorted by key\n */\nfunction mapToSortedArray(map, flags) {\n    const array = Array.from(map.entries());\n    // objects from the Array.from() method above are stored in array of arrays:\n    // [[qualifierKey, QualifierObj], [qualifierKey, QualifierObj]]\n    // Flags is an array of FlagQualifierObj\n    // We need to convert it to the same form: [flagQualifier] =>  ['fl', flagQualifier]\n    flags.forEach((flag) => {\n        array.push(['fl', flag]); // push ['fl', flagQualifier]\n    });\n    return array.sort().map((v) => v[1]);\n}\n/**\n * Checks if `value` is a string.\n * @private\n * @param {*} value The value to check.\n * @return {boolean} `true` if `value` is a string, else `false`.\n */\nfunction isString(value) {\n    return (typeof value === 'string' || value instanceof String);\n}\nexport { isString, mapToSortedArray };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,gBAAgB,CAACC,GAAG,EAAEC,KAAK,EAAE;EAClC,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACJ,GAAG,CAACK,OAAO,EAAE,CAAC;EACvC;EACA;EACA;EACA;EACAJ,KAAK,CAACK,OAAO,CAAEC,IAAI,IAAK;IACpBL,KAAK,CAACM,IAAI,CAAC,CAAC,IAAI,EAAED,IAAI,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC,CAAC;;EACF,OAAOL,KAAK,CAACO,IAAI,EAAE,CAACT,GAAG,CAAEU,CAAC,IAAKA,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,QAAQ,CAACC,KAAK,EAAE;EACrB,OAAQ,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,YAAYC,MAAM;AAChE;AACA,SAASF,QAAQ,EAAEZ,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}