{"ast":null,"code":"import { BaseTextSource } from \"./BaseTextSource.js\";\nimport { createTextStyleFromModel } from \"../../../internal/models/createTextStyleFromModel.js\";\n/**\n * @memberOf Qualifiers.Source\n * @extends {Qualifiers.Source.BaseTextSource}\n * @description Defines how to manipulate a text layer\n */\nclass TextSource extends BaseTextSource {\n  constructor(fileName, textStyle) {\n    /* istanbul ignore next */\n    super(fileName, textStyle);\n  }\n  static fromJson(qualifierModel, transformationFromJson) {\n    const {\n      text,\n      textStyle,\n      textColor,\n      backgroundColor,\n      transformation\n    } = qualifierModel;\n    // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [qualifierModel])\n    // This allows the inheriting classes to determine the class to be created\n    const result = new this(text, textStyle ? createTextStyleFromModel(textStyle) : undefined);\n    if (transformation) {\n      result.transformation(transformationFromJson(transformation));\n    }\n    if (textColor) {\n      result.textColor(textColor);\n    }\n    if (backgroundColor) {\n      result.backgroundColor(backgroundColor);\n    }\n    return result;\n  }\n}\nexport { TextSource };","map":{"version":3,"names":["BaseTextSource","createTextStyleFromModel","TextSource","constructor","fileName","textStyle","fromJson","qualifierModel","transformationFromJson","text","textColor","backgroundColor","transformation","result","undefined"],"sources":["C:/Users/amarn/Desktop/REACT PROJECT/usermanagement/Front-End/node_modules/@cloudinary/transformation-builder-sdk/qualifiers/source/sourceTypes/TextSource.js"],"sourcesContent":["import { BaseTextSource } from \"./BaseTextSource.js\";\nimport { createTextStyleFromModel } from \"../../../internal/models/createTextStyleFromModel.js\";\n/**\n * @memberOf Qualifiers.Source\n * @extends {Qualifiers.Source.BaseTextSource}\n * @description Defines how to manipulate a text layer\n */\nclass TextSource extends BaseTextSource {\n    constructor(fileName, textStyle) {\n        /* istanbul ignore next */\n        super(fileName, textStyle);\n    }\n    static fromJson(qualifierModel, transformationFromJson) {\n        const { text, textStyle, textColor, backgroundColor, transformation } = qualifierModel;\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [qualifierModel])\n        // This allows the inheriting classes to determine the class to be created\n        const result = new this(text, textStyle ? createTextStyleFromModel(textStyle) : undefined);\n        if (transformation) {\n            result.transformation(transformationFromJson(transformation));\n        }\n        if (textColor) {\n            result.textColor(textColor);\n        }\n        if (backgroundColor) {\n            result.backgroundColor(backgroundColor);\n        }\n        return result;\n    }\n}\nexport { TextSource };\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,qBAAqB;AACpD,SAASC,wBAAwB,QAAQ,sDAAsD;AAC/F;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,SAASF,cAAc,CAAC;EACpCG,WAAW,CAACC,QAAQ,EAAEC,SAAS,EAAE;IAC7B;IACA,KAAK,CAACD,QAAQ,EAAEC,SAAS,CAAC;EAC9B;EACA,OAAOC,QAAQ,CAACC,cAAc,EAAEC,sBAAsB,EAAE;IACpD,MAAM;MAAEC,IAAI;MAAEJ,SAAS;MAAEK,SAAS;MAAEC,eAAe;MAAEC;IAAe,CAAC,GAAGL,cAAc;IACtF;IACA;IACA,MAAMM,MAAM,GAAG,IAAI,IAAI,CAACJ,IAAI,EAAEJ,SAAS,GAAGJ,wBAAwB,CAACI,SAAS,CAAC,GAAGS,SAAS,CAAC;IAC1F,IAAIF,cAAc,EAAE;MAChBC,MAAM,CAACD,cAAc,CAACJ,sBAAsB,CAACI,cAAc,CAAC,CAAC;IACjE;IACA,IAAIF,SAAS,EAAE;MACXG,MAAM,CAACH,SAAS,CAACA,SAAS,CAAC;IAC/B;IACA,IAAIC,eAAe,EAAE;MACjBE,MAAM,CAACF,eAAe,CAACA,eAAe,CAAC;IAC3C;IACA,OAAOE,MAAM;EACjB;AACJ;AACA,SAASX,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}